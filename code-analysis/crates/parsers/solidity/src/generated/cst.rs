// This file is generated via `cargo build`. Please don't edit by hand.

use serde::{Deserialize, Serialize};
use std::rc::Rc;
#[derive(Clone, PartialEq, Eq, Serialize, Deserialize)]
pub enum Node {
    None,
    Rule {
        kind: RuleKind,
        children: Vec<NodeRef>,
    },
    Token {
        kind: TokenKind,
        children: Vec<NodeRef>,
    },
    TokenPart {
        kind: TokenPartKind,
        length: usize,
    },
    WithTrivia {
        leading_trivia: NodeRef,
        token: NodeRef,
        trailing_trivia: NodeRef,
    },
}
impl Node {
    pub fn new_void() -> NodeRef {
        Rc::new(Self::None)
    }
    pub fn new_rule(kind: RuleKind, children: Vec<NodeRef>) -> NodeRef {
        Rc::new(Self::Rule { kind, children })
    }
    pub fn new_token(kind: TokenKind, children: Vec<NodeRef>) -> NodeRef {
        Rc::new(Self::Token { kind, children })
    }
    pub fn new_token_part(kind: TokenPartKind, length: usize) -> NodeRef {
        Rc::new(Self::TokenPart { kind, length })
    }
    pub fn new_with_trivia(
        ((leading_trivia, token), trailing_trivia): ((NodeRef, NodeRef), NodeRef),
    ) -> NodeRef {
        if *leading_trivia == Self::None && *trailing_trivia == Self::None {
            token
        } else {
            Rc::new(Self::WithTrivia {
                leading_trivia,
                token,
                trailing_trivia,
            })
        }
    }
}
pub type NodeRef = Rc<Node>;
pub enum VisitorResult {
    Continue,
    Skip,
    Quit,
}
pub trait Visitor {
    fn enter_rule(&mut self, _kind: RuleKind) -> VisitorResult {
        VisitorResult::Continue
    }
    fn leave_rule(&mut self, _kind: RuleKind) -> VisitorResult {
        VisitorResult::Continue
    }
    fn enter_token(&mut self, _kind: TokenKind, _length: usize) -> VisitorResult {
        VisitorResult::Continue
    }
    fn leave_token(&mut self, _kind: TokenKind, _length: usize) -> VisitorResult {
        VisitorResult::Continue
    }
    fn token_part(&mut self, _kind: TokenPartKind, _length: usize) -> VisitorResult {
        VisitorResult::Continue
    }
}

#[derive(Clone, PartialEq, Eq, Serialize, Deserialize)]
pub enum RuleKind {
    AbiCoderPragmaSpecifier,
    AddSubExpressionAnonexpfrag4,
    AddressType,
    AndExpressionAnonexpfrag4,
    ArgumentList,
    ArgumentListChoices0,
    ArrayLiteral,
    ArrayLiteralExpressionsAndCommas,
    AsciiStringLiteral,
    AssemblyFlags,
    AssemblyFlagsDoubleQuotedAsciiStringLiteralsAndCommas,
    AssemblyStatement,
    AssignmentExpressionAnonexpfrag4,
    AssignmentExpressionChoices0,
    BitAndExpressionAnonexpfrag4,
    BitOrExpressionAnonexpfrag4,
    BitXOrExpressionAnonexpfrag4,
    Block,
    BlockChoices0,
    BlockChoices0S,
    BooleanLiteral,
    BreakStatement,
    CatchClause,
    CatchClauseSequence0,
    ConditionalExpressionAnonexpfrag3,
    ConditionalExpressionSequence0,
    ConstantDefinition,
    ConstructorAttribute,
    ConstructorDefinition,
    ConstructorDefinitionConstructorAttributes,
    ContinueStatement,
    ContractBodyElement,
    ContractDefinition,
    ContractDefinitionContractBodyElements,
    ContractDefinitionOpenBraceAndContractBodyElementsAndCloseBrace,
    DataLocation,
    DecimalExponent,
    DecimalFloat,
    DecimalInteger,
    DecimalIntegerSequence1,
    DecimalIntegerSequence1S,
    DecimalNumber,
    DecimalNumberChoices0,
    Definition,
    DeleteStatement,
    Directive,
    DoWhileStatement,
    DoWhileStatementOpenParenAndExpressionAndCloseParen,
    DoubleQuotedAsciiStringLiteral,
    DoubleQuotedAsciiStringLiteralRun,
    DoubleQuotedAsciiStringLiteralRuns,
    DoubleQuotedUnicodeStringLiteral,
    DoubleQuotedUnicodeStringLiteralRun,
    DoubleQuotedUnicodeStringLiteralRuns,
    ElementaryType,
    EmitStatement,
    EndOfFileTrivia,
    EndOfFileTriviaChoices0,
    EnumDefinition,
    EnumDefinitionIdentifiersAndCommas,
    EnumDefinitionOpenBraceAndIdentifiersAndCommasAndCloseBrace,
    EqualityComparisonExpressionAnonexpfrag4,
    EqualityComparisonExpressionChoices0,
    ErrorDefinition,
    ErrorDefinitionErrorParametersAndCommas,
    ErrorDefinitionOpenParenAndErrorParametersAndCommasAndCloseParen,
    ErrorParameter,
    EscapeSequence,
    EscapeSequenceChoices0,
    EventDefinition,
    EventDefinitionEventParametersAndCommas,
    EventDefinitionOpenParenAndEventParametersAndCommasAndCloseParen,
    EventParameter,
    ExperimentalPragmaSpecifier,
    ExponentiationExpressionAnonexpfrag4,
    Expression,
    ExpressionStatement,
    FallbackFunctionAttribute,
    FallbackFunctionDefinition,
    FallbackFunctionDefinitionChoices1,
    FallbackFunctionDefinitionFallbackFunctionAttributes,
    FallbackFunctionDefinitionSequence0,
    FixedBytesType,
    ForStatement,
    ForStatementChoices1,
    ForStatementChoices2,
    ForStatementOpenParenAndSequence0AndCloseParen,
    ForStatementSequence0,
    FunctionAttribute,
    FunctionCallExpressionAnonexpfrag4,
    FunctionCallExpressionNamedArgumentsAndCommas,
    FunctionCallExpressionOpenBraceAndNamedArgumentsAndCommasAndCloseBrace,
    FunctionDefinition,
    FunctionDefinitionChoices0,
    FunctionDefinitionChoices2,
    FunctionDefinitionFunctionAttributes,
    FunctionDefinitionSequence1,
    FunctionType,
    FunctionTypeChoices0,
    FunctionTypeChoices0S,
    FunctionTypeSequence1,
    HexByteEscape,
    HexNumber,
    HexNumberSequence0,
    HexNumberSequence2,
    HexNumberSequence2S,
    HexStringLiteral,
    HexStringLiteralChoices0,
    HexStringLiteralDoubleQuoteAndPossiblySeparatedPairsOfHexDigitsAndDoubleQuote,
    HexStringLiteralQuoteAndPossiblySeparatedPairsOfHexDigitsAndQuote,
    IdentifierPath,
    IfStatement,
    IfStatementOpenParenAndExpressionAndCloseParen,
    IfStatementSequence0,
    ImportDirective,
    ImportDirectiveChoices0,
    IndexAccessExpressionAnonexpfrag3,
    IndexAccessExpressionOpenBracketAndSequence0AndCloseBracket,
    IndexAccessExpressionSequence0,
    IndexAccessExpressionSequence1,
    InheritanceSpecifier,
    InheritanceSpecifierList,
    InheritanceSpecifierListInheritanceSpecifiersAndCommas,
    InterfaceDefinition,
    InterfaceDefinitionContractBodyElements,
    InterfaceDefinitionOpenBraceAndContractBodyElementsAndCloseBrace,
    Keyword,
    LeadingTrivia,
    LeadingTriviaChoices0,
    LibraryDefinition,
    LibraryDefinitionContractBodyElements,
    LibraryDefinitionOpenBraceAndContractBodyElementsAndCloseBrace,
    MappingType,
    MappingTypeChoices1,
    MappingTypeOpenParenAndSequence0AndCloseParen,
    MappingTypeSequence0,
    MemberAccessExpressionAnonexpfrag4,
    MemberAccessExpressionChoices0,
    ModifierAttribute,
    ModifierDefinition,
    ModifierDefinitionChoices0,
    ModifierDefinitionModifierAttributes,
    ModifierInvocation,
    MulDivModExpressionAnonexpfrag4,
    MultilineComment,
    MultilineCommentChoices0,
    MultilineCommentChoices0S,
    MultilineCommentContent,
    MultilineCommentSequence1,
    NamedArgument,
    NamedArgumentList,
    NamedArgumentListNamedArgumentsAndCommas,
    NewExpression,
    NumberUnit,
    NumericLiteral,
    NumericLiteralChoices0,
    OrExpressionAnonexpfrag4,
    OrderComparisonExpressionAnonexpfrag4,
    OrderComparisonExpressionChoices0,
    OverrideSpecifier,
    OverrideSpecifierIdentifierPathsAndCommas,
    OverrideSpecifierOpenParenAndIdentifierPathsAndCommasAndCloseParen,
    ParameterDeclaration,
    ParameterList,
    ParameterListParameterDeclarationsAndCommas,
    ParenthesisExpression,
    ParenthesisExpressionExpressionsAndCommas,
    PayableExpression,
    PositionalArgumentList,
    PossiblySeparatedPairsOfHexDigits,
    PossiblySeparatedPairsOfHexDigitsSequence1,
    PossiblySeparatedPairsOfHexDigitsSequence1S,
    PragmaDirective,
    PragmaDirectiveChoices0,
    PrimaryExpression,
    RawIdentifier,
    ReceiveFunctionAttribute,
    ReceiveFunctionDefinition,
    ReceiveFunctionDefinitionChoices0,
    ReceiveFunctionDefinitionReceiveFunctionAttributes,
    ReturnStatement,
    RevertStatement,
    SelectedImport,
    SelectedImportSequence0,
    SelectingImportDirective,
    SelectingImportDirectiveOpenBraceAndSelectedImportsAndCommasAndCloseBrace,
    SelectingImportDirectiveSelectedImportsAndCommas,
    ShiftExpressionAnonexpfrag4,
    ShiftExpressionChoices0,
    SignedFixedType,
    SignedFixedTypeSequence0,
    SignedIntegerType,
    SimpleImportDirective,
    SimpleImportDirectiveSequence0,
    SimpleImportDirectiveSequence0S,
    SimpleStatement,
    SingleLineComment,
    SingleQuotedAsciiStringLiteral,
    SingleQuotedAsciiStringLiteralRun,
    SingleQuotedAsciiStringLiteralRuns,
    SingleQuotedUnicodeStringLiteral,
    SingleQuotedUnicodeStringLiteralRun,
    SingleQuotedUnicodeStringLiteralRuns,
    SourceUnit,
    SourceUnitChoices0,
    SourceUnitChoices0S,
    StarImportDirective,
    StateVariableAttribute,
    StateVariableDeclaration,
    StateVariableDeclarationSequence0,
    StateVariableDeclarationStateVariableAttributes,
    Statement,
    StructDefinition,
    StructDefinitionOpenBraceAndStructMembersAndCloseBrace,
    StructDefinitionStructMembers,
    StructMember,
    TrailingTrivia,
    TrailingTriviaChoices0,
    TrailingTriviaChoices0S,
    TrailingTriviaChoices1,
    TryStatement,
    TryStatementCatchClauses,
    TryStatementSequence0,
    TupleDeconstructionStatement,
    TupleDeconstructionStatementOpenParenAndSequence0SAndCommasAndCloseParen,
    TupleDeconstructionStatementSequence0,
    TupleDeconstructionStatementSequence0SAndCommas,
    TypeExpression,
    TypeExpressionOpenParenAndTypeNameAndCloseParen,
    TypeName,
    TypeNameChoices0,
    TypeNameOpenBracketAndExpressionAndCloseBracket,
    TypeNameOpenBracketAndExpressionAndCloseBrackets,
    UnaryPrefixExpressionAnonexpfrag3,
    UnaryPrefixExpressionChoices0,
    UnarySuffixExpressionAnonexpfrag3,
    UnarySuffixExpressionChoices0,
    UncheckedBlock,
    UnicodeEscape,
    UnicodeStringLiteral,
    UnsignedFixedType,
    UnsignedIntegerType,
    UserDefinedValueTypeDefinition,
    UsingDirective,
    UsingDirectiveChoices0,
    UsingDirectiveChoices1,
    UsingDirectiveIdentifierPathsAndCommas,
    UsingDirectiveOpenBraceAndIdentifierPathsAndCommasAndCloseBrace,
    VariableDeclarationStatement,
    VariableDeclarationStatementSequence0,
    VersionPragmaOperator,
    VersionPragmaSpecifier,
    VersionPragmaSpecifierSequence0,
    VersionPragmaSpecifierSequence0S,
    VersionPragmaValue,
    WhileStatement,
    WhileStatementOpenParenAndExpressionAndCloseParen,
    YulAssignmentStatement,
    YulAssignmentStatementYulIdentifierPathsAndCommas,
    YulBlock,
    YulBlockYulStatements,
    YulDecimalNumberLiteral,
    YulDecimalNumberLiteralSequence0,
    YulExpression,
    YulForStatement,
    YulFunctionCall,
    YulFunctionCallOpenParenAndYulExpressionsAndCommasAndCloseParen,
    YulFunctionCallYulExpressionsAndCommas,
    YulFunctionDefinition,
    YulFunctionDefinitionArguments,
    YulFunctionDefinitionOpenParenAndArgumentsAndCloseParen,
    YulFunctionDefinitionResults,
    YulFunctionDefinitionSequence0,
    YulHexLiteral,
    YulIdentifierPath,
    YulIfStatement,
    YulKeyword,
    YulLiteral,
    YulStatement,
    YulSwitchStatement,
    YulSwitchStatementChoices1,
    YulSwitchStatementSequence0,
    YulSwitchStatementSequence0S,
    YulSwitchStatementSequence2,
    YulVariableDeclaration,
    YulVariableDeclarationSequence0,
    YulVariableDeclarationYulIdentifierPathsAndCommas,
}

#[derive(Clone, PartialEq, Eq, Serialize, Deserialize)]
pub enum TokenKind {
    DoubleQuotedAsciiStringLiteralChars,
    DoubleQuotedUnicodeStringLiteralChars,
    EndOfLine,
    HexByteEscapeFilter0S,
    MultilineCommentStars,
    PossiblySeparatedPairsOfHexDigitsFilter0S,
    PossiblySeparatedPairsOfHexDigitsFilter2S,
    RawIdentifierFilter1S,
    SignedFixedTypeFilter1S,
    SignedFixedTypeFilter2S,
    SingleLineCommentFilter0S,
    SingleQuotedAsciiStringLiteralChars,
    SingleQuotedUnicodeStringLiteralChars,
    UnicodeEscapeFilter0S,
    VersionPragmaValueFilter0S,
    Whitespace,
    YulDecimalNumberLiteralFilter2S,
    YulHexLiteralFilter0S,
}

#[derive(Clone, PartialEq, Eq, Serialize, Deserialize)]
pub enum TokenPartKind {
    Abicoder,
    Abstract,
    Address,
    After,
    Alias,
    Ampersand,
    AmpersandAmpersand,
    AmpersandEqual,
    Anonymous,
    Apply,
    As,
    Assembly,
    Auto,
    Backslash,
    Bang,
    BangEqual,
    Bool,
    Break,
    Byte,
    Bytes,
    Calldata,
    Caret,
    CaretEqual,
    Case,
    Catch,
    Char,
    CloseBrace,
    CloseBracket,
    CloseParen,
    Colon,
    ColonEqual,
    Comma,
    Constant,
    Constructor,
    Continue,
    Contract,
    Copyof,
    Days,
    Default,
    Define,
    Delete,
    Do,
    DoubleQuote,
    DoubleQuoteEvmasmDoubleQuote,
    Eight,
    EightEight,
    EightZero,
    Else,
    Emit,
    Enum,
    Equal,
    EqualEqual,
    EqualGreater,
    Error,
    Ether,
    Event,
    Experimental,
    External,
    Fallback,
    False,
    Filter0,
    Filter1,
    Filter2,
    Filter3,
    Final,
    Finney,
    Five,
    FiveSix,
    Fixed,
    For,
    Four,
    FourEight,
    FourZero,
    From,
    Function,
    Global,
    Greater,
    GreaterEqual,
    GreaterGreater,
    GreaterGreaterEqual,
    GreaterGreaterGreater,
    GreaterGreaterGreaterEqual,
    Gwei,
    Hex,
    Hours,
    If,
    Immutable,
    Implements,
    Import,
    In,
    Indexed,
    Inline,
    Int,
    Interface,
    Internal,
    Is,
    LatinSmallLetterU,
    LatinSmallLetterX,
    Leave,
    Less,
    LessEqual,
    LessLess,
    LessLessEqual,
    Let,
    Library,
    Macro,
    Mapping,
    Match,
    Memory,
    Minus,
    MinusEqual,
    MinusGreater,
    MinusMinus,
    Minutes,
    Modifier,
    Mutable,
    New,
    Nine,
    NineSix,
    NotStar,
    Null,
    Of,
    One,
    OneEight,
    OneEightFour,
    OneFive,
    OneFiveTwo,
    OneFour,
    OneFourFour,
    OneNine,
    OneNineTwo,
    OneOne,
    OneOneTwo,
    OneSeven,
    OneSevenSix,
    OneSix,
    OneSixEight,
    OneSixZero,
    OneThree,
    OneThreeSix,
    OneTwo,
    OneTwoEight,
    OneTwoZero,
    OneZero,
    OneZeroFour,
    OpenBrace,
    OpenBracket,
    OpenParen,
    Override,
    Partial,
    Payable,
    PercentEqual,
    Period,
    Pipe,
    PipeEqual,
    PipePipe,
    PlusEqual,
    PlusPlus,
    Pragma,
    Private,
    Promise,
    Public,
    Pure,
    Question,
    Quote,
    Receive,
    Reference,
    Relocatable,
    Return,
    Returns,
    Revert,
    Sealed,
    Seconds,
    Semicolon,
    Seven,
    SevenTwo,
    Six,
    SixFour,
    Sizeof,
    SlashEqual,
    SlashSlash,
    SlashStar,
    Solidity,
    Star,
    StarEqual,
    StarSlash,
    StarStar,
    Static,
    Storage,
    String,
    Struct,
    Supports,
    Switch,
    Szabo,
    Three,
    ThreeOne,
    ThreeTwo,
    ThreeZero,
    Tilde,
    True,
    Try,
    Two,
    TwoEight,
    TwoFive,
    TwoFiveSix,
    TwoFour,
    TwoFourEight,
    TwoFourZero,
    TwoNine,
    TwoOne,
    TwoOneSix,
    TwoSeven,
    TwoSix,
    TwoThree,
    TwoThreeTwo,
    TwoTwo,
    TwoTwoFour,
    TwoZero,
    TwoZeroEight,
    TwoZeroZero,
    Type,
    Typedef,
    Typeof,
    Ufixed,
    Unchecked,
    Underscore,
    UnicodeDoubleQuote,
    UnicodeQuote,
    Using,
    Var,
    View,
    Virtual,
    Weeks,
    Wei,
    While,
    Years,
    Zero,
    ZeroX,
}
