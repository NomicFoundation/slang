/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum CSTNodeType {
  None = 0,
  Rule = 1,
  Token = 2,
  Group = 3
}
export const enum Token {
  Abicoder = 0,
  Abstract = 1,
  Address = 2,
  After = 3,
  Alias = 4,
  Ampersand = 5,
  AmpersandAmpersand = 6,
  AmpersandEqual = 7,
  Anonymous = 8,
  Apply = 9,
  As = 10,
  AsciiEscape = 11,
  AsciiStringLiteral = 12,
  Assembly = 13,
  Auto = 14,
  Backslash = 15,
  Bang = 16,
  BangEqual = 17,
  Bool = 18,
  BooleanLiteral = 19,
  Break = 20,
  Byte = 21,
  Bytes = 22,
  Calldata = 23,
  Caret = 24,
  CaretEqual = 25,
  CarriageReturn = 26,
  Case = 27,
  Catch = 28,
  Char = 29,
  Chars = 30,
  CloseBrace = 31,
  CloseBracket = 32,
  CloseParen = 33,
  Colon = 34,
  ColonEqual = 35,
  Comma = 36,
  Constant = 37,
  Constructor = 38,
  Content = 39,
  Continue = 40,
  Contract = 41,
  Copyof = 42,
  Days = 43,
  DecimalExponent = 44,
  DecimalFloat = 45,
  DecimalInteger = 46,
  DecimalNumber = 47,
  Default = 48,
  Define = 49,
  Delete = 50,
  DelimitedPossiblySeparatedPairsOfHexDigits = 51,
  Do = 52,
  DoubleQuote = 53,
  DoubleQuoteEvmasmDoubleQuote = 54,
  DoubleQuotedAsciiStringLiteral = 55,
  DoubleQuotedUnicodeStringLiteral = 56,
  Eight = 57,
  EightEight = 58,
  EightZero = 59,
  Else = 60,
  Emit = 61,
  EndOfLine = 62,
  Enum = 63,
  Equal = 64,
  EqualEqual = 65,
  EqualGreater = 66,
  Error = 67,
  EscapeSequence = 68,
  Ether = 69,
  Event = 70,
  Experimental = 71,
  External = 72,
  Fallback = 73,
  False = 74,
  Final = 75,
  Finney = 76,
  Five = 77,
  FiveSix = 78,
  Fixed = 79,
  FixedBytesType = 80,
  For = 81,
  Four = 82,
  FourEight = 83,
  FourZero = 84,
  From = 85,
  Function = 86,
  Global = 87,
  Greater = 88,
  GreaterEqual = 89,
  GreaterGreater = 90,
  GreaterGreaterEqual = 91,
  GreaterGreaterGreater = 92,
  GreaterGreaterGreaterEqual = 93,
  Gwei = 94,
  Hex = 95,
  HexByteEscape = 96,
  HexCharacter = 97,
  HexNumber = 98,
  HexStringLiteral = 99,
  Hours = 100,
  Identifier = 101,
  IdentifierPart = 102,
  IdentifierStart = 103,
  If = 104,
  Immutable = 105,
  Implements = 106,
  Import = 107,
  In = 108,
  Indexed = 109,
  Inline = 110,
  Int = 111,
  Interface = 112,
  Internal = 113,
  Is = 114,
  Keyword = 115,
  LatinSmallLetterN = 116,
  LatinSmallLetterR = 117,
  LatinSmallLetterT = 118,
  LatinSmallLetterU = 119,
  LatinSmallLetterX = 120,
  Leave = 121,
  Less = 122,
  LessEqual = 123,
  LessLess = 124,
  LessLessEqual = 125,
  Let = 126,
  Library = 127,
  Linefeed = 128,
  Macro = 129,
  Mapping = 130,
  Match = 131,
  Memory = 132,
  Minus = 133,
  MinusEqual = 134,
  MinusGreater = 135,
  MinusMinus = 136,
  Minutes = 137,
  Modifier = 138,
  MultilineComment = 139,
  Mutable = 140,
  New = 141,
  Nine = 142,
  NineSix = 143,
  NotStar = 144,
  Null = 145,
  NumberUnit = 146,
  NumericLiteral = 147,
  Of = 148,
  One = 149,
  OneEight = 150,
  OneEightFour = 151,
  OneFive = 152,
  OneFiveTwo = 153,
  OneFour = 154,
  OneFourFour = 155,
  OneNine = 156,
  OneNineTwo = 157,
  OneOne = 158,
  OneOneTwo = 159,
  OneSeven = 160,
  OneSevenSix = 161,
  OneSix = 162,
  OneSixEight = 163,
  OneSixZero = 164,
  OneThree = 165,
  OneThreeSix = 166,
  OneTwo = 167,
  OneTwoEight = 168,
  OneTwoZero = 169,
  OneZero = 170,
  OneZeroFour = 171,
  OpenBrace = 172,
  OpenBracket = 173,
  OpenParen = 174,
  Override = 175,
  Partial = 176,
  Payable = 177,
  Percent = 178,
  PercentEqual = 179,
  Period = 180,
  Pipe = 181,
  PipeEqual = 182,
  PipePipe = 183,
  Plus = 184,
  PlusEqual = 185,
  PlusPlus = 186,
  PossiblySeparatedPairsOfHexDigits = 187,
  Pragma = 188,
  Private = 189,
  Promise = 190,
  Public = 191,
  Pure = 192,
  Question = 193,
  Quote = 194,
  RawIdentifier = 195,
  Receive = 196,
  Reference = 197,
  Relocatable = 198,
  ReservedKeyword = 199,
  Return = 200,
  Returns = 201,
  Revert = 202,
  Run = 203,
  Runs = 204,
  Sealed = 205,
  Seconds = 206,
  Semicolon = 207,
  Seven = 208,
  SevenTwo = 209,
  SignedFixedType = 210,
  SignedIntegerType = 211,
  SingleLineComment = 212,
  SingleQuotedAsciiStringLiteral = 213,
  SingleQuotedUnicodeStringLiteral = 214,
  Six = 215,
  SixFour = 216,
  Sizeof = 217,
  Slash = 218,
  SlashEqual = 219,
  SlashSlash = 220,
  SlashStar = 221,
  Solidity = 222,
  Star = 223,
  StarEqual = 224,
  StarSlash = 225,
  StarStar = 226,
  Stars = 227,
  Static = 228,
  Storage = 229,
  String = 230,
  Struct = 231,
  Supports = 232,
  Switch = 233,
  Szabo = 234,
  Three = 235,
  ThreeOne = 236,
  ThreeTwo = 237,
  ThreeZero = 238,
  Tilde = 239,
  True = 240,
  Try = 241,
  Two = 242,
  TwoEight = 243,
  TwoFive = 244,
  TwoFiveSix = 245,
  TwoFour = 246,
  TwoFourEight = 247,
  TwoFourZero = 248,
  TwoNine = 249,
  TwoOne = 250,
  TwoOneSix = 251,
  TwoSeven = 252,
  TwoSix = 253,
  TwoThree = 254,
  TwoThreeTwo = 255,
  TwoTwo = 256,
  TwoTwoFour = 257,
  TwoZero = 258,
  TwoZeroEight = 259,
  TwoZeroZero = 260,
  Type = 261,
  Typedef = 262,
  Typeof = 263,
  Unchecked = 264,
  Underscore = 265,
  UnicodeDoubleQuote = 266,
  UnicodeEscape = 267,
  UnicodeQuote = 268,
  UnicodeStringLiteral = 269,
  UnsignedFixedType = 270,
  UnsignedIntegerType = 271,
  Using = 272,
  Var = 273,
  VersionPragmaOperator = 274,
  VersionPragmaValue = 275,
  View = 276,
  Virtual = 277,
  Weeks = 278,
  Wei = 279,
  While = 280,
  Whitespace = 281,
  Years = 282,
  YulDecimalNumberLiteral = 283,
  YulHexLiteral = 284,
  YulIdentifier = 285,
  YulKeyword = 286,
  Zero = 287,
  ZeroX = 288
}
export const enum Rule {
  AbicoderPragmaSpecifier = 0,
  AddSubExpression = 1,
  AddressType = 2,
  AndExpression = 3,
  ArgumentList = 4,
  Arguments = 5,
  ArrayLiteral = 6,
  AssemblyFlags = 7,
  AssemblyStatement = 8,
  AssignmentExpression = 9,
  BitAndExpression = 10,
  BitOrExpression = 11,
  BitXOrExpression = 12,
  Block = 13,
  BreakStatement = 14,
  CatchClause = 15,
  CatchClauses = 16,
  ConditionalExpression = 17,
  ConstantDefinition = 18,
  ConstructorAttribute = 19,
  ConstructorAttributes = 20,
  ConstructorDefinition = 21,
  ContinueStatement = 22,
  ContractBodyElement = 23,
  ContractBodyElements = 24,
  ContractDefinition = 25,
  DataLocation = 26,
  Definition = 27,
  DeleteStatement = 28,
  DelimitedArguments = 29,
  DelimitedContractBodyElements = 30,
  DelimitedExpression = 31,
  DelimitedExpressions = 32,
  DelimitedSeparatedErrorParameters = 33,
  DelimitedSeparatedEventParameters = 34,
  DelimitedSeparatedIdentifierPaths = 35,
  DelimitedSeparatedIdentifiers = 36,
  DelimitedSeparatedNamedArguments = 37,
  DelimitedSeparatedSelectedImports = 38,
  DelimitedSeparatedYulExpressions = 39,
  DelimitedStructMembers = 40,
  DelimitedTypeName = 41,
  Directive = 42,
  DoWhileStatement = 43,
  ElementaryType = 44,
  EmitStatement = 45,
  EndOfFileTrivia = 46,
  EnumDefinition = 47,
  EqualityComparisonExpression = 48,
  ErrorDefinition = 49,
  ErrorParameter = 50,
  EventDefinition = 51,
  EventParameter = 52,
  ExperimentalPragmaSpecifier = 53,
  ExponentiationExpression = 54,
  Expression = 55,
  ExpressionStatement = 56,
  FallbackFunctionAttribute = 57,
  FallbackFunctionAttributes = 58,
  FallbackFunctionDefinition = 59,
  ForStatement = 60,
  FunctionAttribute = 61,
  FunctionAttributes = 62,
  FunctionCallExpression = 63,
  FunctionDefinition = 64,
  FunctionType = 65,
  IdentifierPath = 66,
  IfStatement = 67,
  ImportDirective = 68,
  ImportPath = 69,
  IndexAccessExpression = 70,
  InheritanceSpecifier = 71,
  InheritanceSpecifierList = 72,
  InterfaceDefinition = 73,
  LeadingTrivia = 74,
  LibraryDefinition = 75,
  MappingType = 76,
  MemberAccessExpression = 77,
  ModifierAttribute = 78,
  ModifierAttributes = 79,
  ModifierDefinition = 80,
  ModifierInvocation = 81,
  MulDivModExpression = 82,
  NamedArgument = 83,
  NamedArgumentList = 84,
  NewExpression = 85,
  OrExpression = 86,
  OrderComparisonExpression = 87,
  OverrideSpecifier = 88,
  ParameterDeclaration = 89,
  ParameterList = 90,
  ParenthesisExpression = 91,
  PayableExpression = 92,
  PositionalArgumentList = 93,
  PragmaDirective = 94,
  PrimaryExpression = 95,
  ReceiveFunctionAttribute = 96,
  ReceiveFunctionAttributes = 97,
  ReceiveFunctionDefinition = 98,
  Results = 99,
  ReturnStatement = 100,
  RevertStatement = 101,
  SelectedImport = 102,
  SelectingImportDirective = 103,
  SeparatedDoubleQuotedAsciiStringLiterals = 104,
  SeparatedErrorParameters = 105,
  SeparatedEventParameters = 106,
  SeparatedExpressions = 107,
  SeparatedIdentifierPaths = 108,
  SeparatedIdentifiers = 109,
  SeparatedInheritanceSpecifiers = 110,
  SeparatedNamedArguments = 111,
  SeparatedParameterDeclarations = 112,
  SeparatedSelectedImports = 113,
  SeparatedYulExpressions = 114,
  SeparatedYulIdentifierPaths = 115,
  ShiftExpression = 116,
  SimpleImportDirective = 117,
  SimpleStatement = 118,
  SourceUnit = 119,
  StarImportDirective = 120,
  StateVariableAttribute = 121,
  StateVariableAttributes = 122,
  StateVariableDeclaration = 123,
  Statement = 124,
  StructDefinition = 125,
  StructMember = 126,
  StructMembers = 127,
  TrailingTrivia = 128,
  TryStatement = 129,
  TupleDeconstructionStatement = 130,
  TypeExpression = 131,
  TypeName = 132,
  UnaryPrefixExpression = 133,
  UnarySuffixExpression = 134,
  UncheckedBlock = 135,
  UserDefinedValueTypeDefinition = 136,
  UsingDirective = 137,
  VariableDeclarationStatement = 138,
  VersionPragmaSpecifier = 139,
  WhileStatement = 140,
  YulAssignmentStatement = 141,
  YulBlock = 142,
  YulBreakStatement = 143,
  YulContinueStatement = 144,
  YulExpression = 145,
  YulForStatement = 146,
  YulFunctionCall = 147,
  YulFunctionDefinition = 148,
  YulIdentifierPath = 149,
  YulIfStatement = 150,
  YulLeaveStatement = 151,
  YulLiteral = 152,
  YulStatement = 153,
  YulStatements = 154,
  YulSwitchStatement = 155,
  YulVariableDeclaration = 156
}
export const enum LexNodeType {
  None = 0,
  Chars = 1,
  Choice = 2,
  Sequence = 3,
  Named = 4
}
export class Language {
  constructor(version: string)
  version(): string
  parseAbiCoderPragmaSpecifier(source: string): object
  parseAddSubExpression(source: string): object
  parseAddressType(source: string): object
  parseAndExpression(source: string): object
  parseArgumentList(source: string): object
  parseArrayLiteral(source: string): object
  parseAsciiEscape(source: string): object
  parseAsciiStringLiteral(source: string): object
  parseAssemblyFlags(source: string): object
  parseAssemblyStatement(source: string): object
  parseAssignmentExpression(source: string): object
  parseBitAndExpression(source: string): object
  parseBitOrExpression(source: string): object
  parseBitXOrExpression(source: string): object
  parseBlock(source: string): object
  parseBooleanLiteral(source: string): object
  parseBreakStatement(source: string): object
  parseCatchClause(source: string): object
  parseConditionalExpression(source: string): object
  parseConstantDefinition(source: string): object
  parseConstructorAttribute(source: string): object
  parseConstructorDefinition(source: string): object
  parseContinueStatement(source: string): object
  parseContractBodyElement(source: string): object
  parseContractDefinition(source: string): object
  parseDataLocation(source: string): object
  parseDecimalExponent(source: string): object
  parseDecimalFloat(source: string): object
  parseDecimalInteger(source: string): object
  parseDecimalNumber(source: string): object
  parseDefinition(source: string): object
  parseDeleteStatement(source: string): object
  parseDirective(source: string): object
  parseDoWhileStatement(source: string): object
  parseDoubleQuotedAsciiStringLiteral(source: string): object
  parseDoubleQuotedUnicodeStringLiteral(source: string): object
  parseElementaryType(source: string): object
  parseEmitStatement(source: string): object
  parseEndOfFileTrivia(source: string): object
  parseEndOfLine(source: string): object
  parseEnumDefinition(source: string): object
  parseEqualityComparisonExpression(source: string): object
  parseErrorDefinition(source: string): object
  parseErrorParameter(source: string): object
  parseEscapeSequence(source: string): object
  parseEventDefinition(source: string): object
  parseEventParameter(source: string): object
  parseExperimentalPragmaSpecifier(source: string): object
  parseExponentiationExpression(source: string): object
  parseExpression(source: string): object
  parseExpressionStatement(source: string): object
  parseFallbackFunctionAttribute(source: string): object
  parseFallbackFunctionDefinition(source: string): object
  parseFixedBytesType(source: string): object
  parseForStatement(source: string): object
  parseFunctionAttribute(source: string): object
  parseFunctionCallExpression(source: string): object
  parseFunctionDefinition(source: string): object
  parseFunctionType(source: string): object
  parseHexByteEscape(source: string): object
  parseHexCharacter(source: string): object
  parseHexNumber(source: string): object
  parseHexStringLiteral(source: string): object
  parseIdentifier(source: string): object
  parseIdentifierPart(source: string): object
  parseIdentifierPath(source: string): object
  parseIdentifierStart(source: string): object
  parseIfStatement(source: string): object
  parseImportDirective(source: string): object
  parseImportPath(source: string): object
  parseIndexAccessExpression(source: string): object
  parseInheritanceSpecifier(source: string): object
  parseInheritanceSpecifierList(source: string): object
  parseInterfaceDefinition(source: string): object
  parseKeyword(source: string): object
  parseLeadingTrivia(source: string): object
  parseLibraryDefinition(source: string): object
  parseMappingType(source: string): object
  parseMemberAccessExpression(source: string): object
  parseModifierAttribute(source: string): object
  parseModifierDefinition(source: string): object
  parseModifierInvocation(source: string): object
  parseMulDivModExpression(source: string): object
  parseMultilineComment(source: string): object
  parseNamedArgument(source: string): object
  parseNamedArgumentList(source: string): object
  parseNewExpression(source: string): object
  parseNumberUnit(source: string): object
  parseNumericLiteral(source: string): object
  parseOrExpression(source: string): object
  parseOrderComparisonExpression(source: string): object
  parseOverrideSpecifier(source: string): object
  parseParameterDeclaration(source: string): object
  parseParameterList(source: string): object
  parseParenthesisExpression(source: string): object
  parsePayableExpression(source: string): object
  parsePositionalArgumentList(source: string): object
  parsePossiblySeparatedPairsOfHexDigits(source: string): object
  parsePragmaDirective(source: string): object
  parsePrimaryExpression(source: string): object
  parseRawIdentifier(source: string): object
  parseReceiveFunctionAttribute(source: string): object
  parseReceiveFunctionDefinition(source: string): object
  parseReservedKeyword(source: string): object
  parseReturnStatement(source: string): object
  parseRevertStatement(source: string): object
  parseSelectedImport(source: string): object
  parseSelectingImportDirective(source: string): object
  parseShiftExpression(source: string): object
  parseSignedFixedType(source: string): object
  parseSignedIntegerType(source: string): object
  parseSimpleImportDirective(source: string): object
  parseSimpleStatement(source: string): object
  parseSingleLineComment(source: string): object
  parseSingleQuotedAsciiStringLiteral(source: string): object
  parseSingleQuotedUnicodeStringLiteral(source: string): object
  parseSourceUnit(source: string): object
  parseStarImportDirective(source: string): object
  parseStateVariableAttribute(source: string): object
  parseStateVariableDeclaration(source: string): object
  parseStatement(source: string): object
  parseStructDefinition(source: string): object
  parseStructMember(source: string): object
  parseTrailingTrivia(source: string): object
  parseTryStatement(source: string): object
  parseTupleDeconstructionStatement(source: string): object
  parseTypeExpression(source: string): object
  parseTypeName(source: string): object
  parseUnaryPrefixExpression(source: string): object
  parseUnarySuffixExpression(source: string): object
  parseUncheckedBlock(source: string): object
  parseUnicodeEscape(source: string): object
  parseUnicodeStringLiteral(source: string): object
  parseUnsignedFixedType(source: string): object
  parseUnsignedIntegerType(source: string): object
  parseUserDefinedValueTypeDefinition(source: string): object
  parseUsingDirective(source: string): object
  parseVariableDeclarationStatement(source: string): object
  parseVersionPragmaOperator(source: string): object
  parseVersionPragmaSpecifier(source: string): object
  parseVersionPragmaValue(source: string): object
  parseWhileStatement(source: string): object
  parseWhitespace(source: string): object
  parseYulAssignmentStatement(source: string): object
  parseYulBlock(source: string): object
  parseYulBreakStatement(source: string): object
  parseYulContinueStatement(source: string): object
  parseYulDecimalNumberLiteral(source: string): object
  parseYulExpression(source: string): object
  parseYulForStatement(source: string): object
  parseYulFunctionCall(source: string): object
  parseYulFunctionDefinition(source: string): object
  parseYulHexLiteral(source: string): object
  parseYulIdentifier(source: string): object
  parseYulIdentifierPath(source: string): object
  parseYulIfStatement(source: string): object
  parseYulKeyword(source: string): object
  parseYulLeaveStatement(source: string): object
  parseYulLiteral(source: string): object
  parseYulStatement(source: string): object
  parseYulSwitchStatement(source: string): object
  parseYulVariableDeclaration(source: string): object
}
