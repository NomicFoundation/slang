name: "jobs/publish"

permissions:
  contents: "write" # to create new branches and releases
  pull-requests: "write" # to create new pull requests for changesets

on:
  # Run when invoked from other workflows:
  workflow_call: {}

jobs:
  changesets:
    runs-on: "ubuntu-22.04"

    steps:
      #
      # _DEVCONTAINER_PREPARATION_STEPS_ (keep in sync)
      # Cache is updated in the "ci" workflow, then reused here.
      #

      - name: "Clone repository"
        uses: "actions/checkout@v3.4.0"

      - name: "Prepare Repository"
        # Mark the repository as a safe directory in git: https://github.com/actions/checkout/issues/766
        run: "git config --global --add safe.directory $GITHUB_WORKSPACE"

      - name: "Restore CI cache"
        uses: "actions/cache/restore@v3.3.1"
        with:
          key: "ci-cache-${{ hashFiles('**/Cargo.lock', '**/package-lock.json', '**/Pipfile.lock') }}"
          fail-on-cache-miss: true
          path: |
            **/.hermit/
            **/node_modules/
            **/target/

      - name: "Build devcontainer"
        uses: "./.devcontainer"
        with:
          entrypoint: "echo"

      #
      # Publish Changesets:
      #

      - name: "scripts/bin/infra setup npm"
        uses: "./.devcontainer"
        with:
          entrypoint: "scripts/bin/infra"
        env:
          SLANG_INFRA_CLI_EXTRA_ARGS: "setup npm"

      - name: "scripts/bin/infra publish changesets"
        id: "changesets"
        uses: "changesets/action@v1.4.1"
        with:
          title: "Bump Slang Version"
          commit: "Bump Slang Version"
          createGithubReleases: false
          version: "scripts/bin/infra"
        env:
          SLANG_INFRA_CLI_EXTRA_ARGS: "publish changesets"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    outputs:
      hasChangesets: "${{ steps.changesets.outputs.hasChangesets }}"

  assets:
    needs: "changesets"
    runs-on: "ubuntu-22.04"
    if: "${{ needs.changesets.outputs.hasChangesets == 'false' }}"

    steps:
      #
      # _DEVCONTAINER_PREPARATION_STEPS_ (keep in sync)
      # Cache is updated in the "ci" workflow, then reused here.
      #

      - name: "Clone repository"
        uses: "actions/checkout@v3.4.0"

      - name: "Prepare Repository"
        # Mark the repository as a safe directory in git: https://github.com/actions/checkout/issues/766
        run: "git config --global --add safe.directory $GITHUB_WORKSPACE"

      - name: "Restore CI cache"
        uses: "actions/cache/restore@v3.3.1"
        with:
          key: "ci-cache-${{ hashFiles('**/Cargo.lock', '**/package-lock.json', '**/Pipfile.lock') }}"
          fail-on-cache-miss: true
          path: |
            **/.hermit/
            **/node_modules/
            **/target/

      - name: "Build devcontainer"
        uses: "./.devcontainer"
        with:
          entrypoint: "echo"

      #
      # Build and Publish:
      #

      - name: "scripts/bin/infra setup cargo npm"
        uses: "./.devcontainer"
        with:
          entrypoint: "scripts/bin/infra"
        env:
          SLANG_INFRA_CLI_EXTRA_ARGS: "setup cargo npm"

      - name: "scripts/bin/infra publish npm"
        uses: "./.devcontainer"
        with:
          entrypoint: "scripts/bin/infra"
        env:
          SLANG_INFRA_CLI_EXTRA_ARGS: "publish npm"
          NPM_TOKEN: "${{ secrets.NPM_TOKEN }}"

      - name: "scripts/bin/infra publish cargo"
        uses: "./.devcontainer"
        with:
          entrypoint: "scripts/bin/infra"
        env:
          SLANG_INFRA_CLI_EXTRA_ARGS: "publish cargo"
          CARGO_REGISTRY_TOKEN: "${{ secrets.CARGO_REGISTRY_TOKEN }}"

      - name: "scripts/bin/infra publish github-release"
        uses: "./.devcontainer"
        with:
          entrypoint: "scripts/bin/infra"
        env:
          SLANG_INFRA_CLI_EXTRA_ARGS: "publish github-release"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: "scripts/bin/infra publish lock-files"
        uses: "./.devcontainer"
        with:
          entrypoint: "scripts/bin/infra"
        env:
          SLANG_INFRA_CLI_EXTRA_ARGS: "publish lock-files"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
