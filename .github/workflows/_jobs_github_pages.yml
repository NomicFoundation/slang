name: "jobs/github-pages"

permissions:
  pages: "write" # to deploy to Pages
  id-token: "write" # to verify the deployment originates from an appropriate source

on:
  # Run when invoked from other workflows:
  workflow_call: {}

jobs:
  run:
    runs-on: "ubuntu-22.04" # _SLANG_DEV_CONTAINER_BASE_IMAGE_ (keep in sync)

    environment:
      name: "github-pages"
      url: "${{ steps.deployment.outputs.page_url }}"

    steps:
      #
      # _DEVCONTAINER_PREPARATION_STEPS_ (keep in sync)
      # Cache is updated in the "ci" workflow, then reused here.
      #

      - name: "Clone repository"
        uses: "actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f"

      - name: "Restore CI cache"
        uses: "actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8"
        with:
          key: "cache-${{ github.ref_name }}-${{ hashFiles('Cargo.lock') }}-${{ hashFiles('package-lock.json') }}"
          restore-keys: |
            cache-${{ github.ref_name }}-
            cache-main-
            cache-
          path: |
            ~/.cache/hermit/
            ~/.local/share/virtualenvs/
            .hermit/

      #
      # Deploy to GitHub Pages:
      #

      - run: "scripts/bin/infra setup pipenv"
      - run: "scripts/bin/infra check mkdocs"

      - name: "Configure GitHub Pages"
        uses: "actions/configure-pages@7110e9e03ffb4a421945e5d0607007b8e9f1f52b"

      - name: "Upload artifacts"
        uses: "actions/upload-pages-artifact@64bcae551a7b18bcb9a09042ddf1960979799187"
        with:
          path: "documentation/target/site" # _SLANG_MKDOCS_DOCUMENTATION_SITE_DIR_ (keep in sync)

      - name: "Deploy to GitHub Pages"
        id: "deployment"
        uses: "actions/deploy-pages@73e62e651178eeba977de2dc9f4c7645b3d01015"
