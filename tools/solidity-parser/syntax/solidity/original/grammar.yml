# yaml-language-server: $schema=../../../../syntax-schema/syntax/schema/topic.schema.json

- name: IGNORE
  is_token: true
  config: { ignore: true }
  zeroOrMore:
    choice:
      - reference: Whitespace
      - reference: Comment
      - reference: LineComment
- name: Whitespace
  is_token: true
  config: { ignore: true }
  choice:
    - terminal: " "
    - terminal: "\t"
    - terminal: "\r"
    - terminal: "\n"
- name: Comment
  is_token: true
  config: { ignore: true }
  sequence:
    - terminal: /*
    - zeroOrMore:
        choice:
          - not:
              terminal: "*"
          - sequence:
              - oneOrMore:
                  terminal: "*"
              - not:
                  choice:
                    - terminal: "*"
                    - terminal: /
    - oneOrMore:
        terminal: "*"
    - terminal: /
- name: LineComment
  is_token: true
  config: { ignore: true }
  sequence:
    - terminal: //
    - zeroOrMore:
        not:
          choice:
            - terminal: "\n"
            - terminal: "\r"
- name: sourceUnit
  config:
    prelude: |
      use syntax_schema::chumsky::combinators::NomicParser;
      use super::builder;

      pub type SourceUnitParserResultType = ();
    ignore: true
  sequence:
    - reference: IGNORE
    - zeroOrMore:
        choice:
          - reference: directive
          - reference: definition
    - end: ~
- name: directive
  config: { ignore: true }
  choice:
    - reference: pragmaDirective
    - reference: importDirective
    - reference: usingDirective
- name: definition
  config: { ignore: true }
  choice:
    - reference: contractDefinition
    - reference: interfaceDefinition
    - reference: libraryDefinition
    - reference: functionDefinition
    - reference: constantDefinition
    - reference: structDefinition
    - reference: enumDefinition
    - reference: userDefinedValueTypeDefinition
    - reference: errorDefinition
- name: importDirective
  config: { ignore: true }
  sequence:
    - terminal: import
    - choice:
        - reference: simpleImportDirective
        - reference: starImportDirective
        - reference: selectingImportDirective
    - terminal: ;
- name: simpleImportDirective
  config: { ignore: true }
  sequence:
    - reference: importPath
    - zeroOrMore:
        sequence:
          - terminal: as
          - reference: Identifier
- name: starImportDirective
  config: { ignore: true }
  sequence:
    - terminal: "*"
    - terminal: as
    - reference: Identifier
    - terminal: from
    - reference: importPath
- name: selectingImportDirective
  config: { ignore: true }
  sequence:
    - terminal: "{"
    - oneOrMore:
        reference: selectedImport
        separator:
          terminal: ","
    - terminal: "}"
    - terminal: from
    - reference: importPath
- name: selectedImport
  config: { ignore: true }
  sequence:
    - reference: Identifier
    - optional:
        sequence:
          - terminal: as
          - reference: Identifier
- name: importPath
  config: { ignore: true }
  reference: asciiStringLiteral
- name: usingDirective
  config: { ignore: true }
  sequence:
    - terminal: using
    - choice:
        - reference: IdentifierPath
        - sequence:
            - terminal: "{"
            - oneOrMore:
                reference: IdentifierPath
                separator:
                  terminal: ","
            - terminal: "}"
    - terminal: for
    - choice:
        - terminal: "*"
        - reference: typeName
    - optional:
        terminal: global
    - terminal: ;
- name: contractDefinition
  config: { ignore: true }
  sequence:
    - optional:
        terminal: abstract
    - terminal: contract
    - reference: Identifier
    - optional:
        reference: inheritanceSpecifierList
    - terminal: "{"
    - zeroOrMore:
        reference: contractBodyElement
    - terminal: "}"
- name: interfaceDefinition
  config: { ignore: true }
  sequence:
    - terminal: interface
    - reference: Identifier
    - optional:
        reference: inheritanceSpecifierList
    - terminal: "{"
    - zeroOrMore:
        reference: contractBodyElement
    - terminal: "}"
- name: inheritanceSpecifierList
  config: { ignore: true }
  sequence:
    - terminal: is
    - oneOrMore:
        reference: inheritanceSpecifier
        separator:
          terminal: ","
- name: inheritanceSpecifier
  config: { ignore: true }
  sequence:
    - reference: IdentifierPath
    - optional:
        reference: argumentList
- name: libraryDefinition
  config: { ignore: true }
  sequence:
    - terminal: library
    - reference: Identifier
    - terminal: "{"
    - zeroOrMore:
        reference: contractBodyElement
    - terminal: "}"
- name: functionDefinition
  config: { ignore: true }
  sequence:
    - terminal: function
    - choice:
        - reference: Identifier
        - terminal: fallback
        - terminal: receive
    - reference: parameterList
    - zeroOrMore:
        reference: functionAttribute
    - optional:
        sequence:
          - terminal: returns
          - reference: nonEmptyParameterList
    - choice:
        - terminal: ;
        - reference: block
- name: functionAttribute
  config: { ignore: true }
  choice:
    - reference: visibilitySpecifier
    - reference: stateMutabilitySpecifier
    - reference: modifierInvocation
    - terminal: virtual
    - reference: overrideSpecifier
- name: constantDefinition
  config: { ignore: true }
  sequence:
    - reference: typeName
    - terminal: constant
    - reference: Identifier
    - terminal: "="
    - reference: expression
    - terminal: ;
- name: structDefinition
  config: { ignore: true }
  sequence:
    - terminal: struct
    - reference: Identifier
    - terminal: "{"
    - oneOrMore:
        sequence:
          - reference: typeName
          - reference: Identifier
          - terminal: ;
    - terminal: "}"
- name: enumDefinition
  config: { ignore: true }
  sequence:
    - terminal: enum
    - reference: Identifier
    - terminal: "{"
    - oneOrMore:
        reference: Identifier
        separator:
          terminal: ","
    - terminal: "}"
- name: userDefinedValueTypeDefinition
  config: { ignore: true }
  sequence:
    - terminal: type
    - reference: Identifier
    - terminal: is
    - reference: elementaryTypeWithPayable
    - terminal: ;
- name: eventDefinition
  config: { ignore: true }
  sequence:
    - terminal: event
    - reference: Identifier
    - terminal: (
    - zeroOrMore:
        reference: eventParameter
        separator:
          terminal: ","
    - terminal: )
    - optional:
        terminal: anonymous
    - terminal: ;
- name: eventParameter
  config: { ignore: true }
  sequence:
    - reference: typeName
    - optional:
        terminal: indexed
    - optional:
        reference: Identifier
- name: errorDefinition
  config: { ignore: true }
  sequence:
    - terminal: error
    - reference: Identifier
    - terminal: (
    - zeroOrMore:
        reference: errorParameter
        separator:
          terminal: ","
    - terminal: )
    - terminal: ;
- name: errorParameter
  config: { ignore: true }
  sequence:
    - reference: typeName
    - optional:
        reference: Identifier
- name: contractBodyElement
  config: { ignore: true }
  choice:
    - reference: usingDirective
    - reference: constructorDefinition
    - reference: functionDefinition
    - reference: fallbackFunctionDefinition
    - reference: receiveFunctionDefinition
    - reference: modifierDefinition
    - reference: structDefinition
    - reference: enumDefinition
    - reference: userDefinedValueTypeDefinition
    - reference: eventDefinition
    - reference: errorDefinition
    - reference: stateVariableDeclaration
- name: constructorDefinition
  config: { ignore: true }
  sequence:
    - terminal: constructor
    - reference: parameterList
    - zeroOrMore:
        reference: constructorAttribute
    - reference: block
- name: constructorAttribute
  config: { ignore: true }
  choice:
    - reference: modifierInvocation
    - terminal: payable
    - terminal: internal
    - terminal: public
- name: fallbackFunctionDefinition
  config: { ignore: true }
  sequence:
    - terminal: fallback
    - reference: parameterList
    - zeroOrMore:
        reference: fallbackFunctionAttribute
    - optional:
        sequence:
          - terminal: returns
          - reference: nonEmptyParameterList
    - choice:
        - terminal: ;
        - reference: block
- name: fallbackFunctionAttribute
  config: { ignore: true }
  choice:
    - terminal: external
    - reference: stateMutabilitySpecifier
    - reference: modifierInvocation
    - terminal: virtual
    - reference: overrideSpecifier
- name: receiveFunctionDefinition
  config: { ignore: true }
  sequence:
    - terminal: receive
    - terminal: (
    - terminal: )
    - zeroOrMore:
        reference: receiveFunctionAttribute
    - choice:
        - terminal: ;
        - reference: block
- name: receiveFunctionAttribute
  config: { ignore: true }
  choice:
    - terminal: external
    - terminal: payable
    - reference: modifierInvocation
    - terminal: virtual
    - reference: overrideSpecifier
- name: modifierDefinition
  config: { ignore: true }
  sequence:
    - terminal: modifier
    - reference: Identifier
    - optional:
        reference: parameterList
    - zeroOrMore:
        reference: methodAttribute
    - choice:
        - terminal: ;
        - reference: block
- name: methodAttribute
  config: { ignore: true }
  choice:
    - terminal: virtual
    - reference: overrideSpecifier
- name: stateVariableDeclaration
  config: { ignore: true }
  sequence:
    - reference: typeName
    - zeroOrMore:
        reference: stateVariableAttribute
    - reference: Identifier
    - optional:
        sequence:
          - terminal: "="
          - reference: expression
    - terminal: ;
- name: stateVariableAttribute
  config: { ignore: true }
  choice:
    - terminal: public
    - terminal: private
    - terminal: internal
    - terminal: constant
    - reference: overrideSpecifier
    - terminal: immutable
- name: argumentList
  config: { ignore: true }
  sequence:
    - terminal: (
    - optional:
        choice:
          - reference: positionalArgumentList
          - reference: namedArgumentList
    - terminal: )
- name: positionalArgumentList
  config: { ignore: true }
  oneOrMore:
    reference: expression
    separator:
      terminal: ","
- name: namedArgumentList
  config: { ignore: true }
  sequence:
    - terminal: "{"
    - zeroOrMore:
        reference: namedArgument
        separator:
          terminal: ","
    - terminal: "}"
- name: namedArgument
  config: { ignore: true }
  sequence:
    - reference: Identifier
    - terminal: ":"
    - reference: expression
- name: modifierInvocation
  config: { map: to_str }
  sequence:
    - reference: IdentifierPath
    - optional:
        reference: argumentList
- name: parameterList
  config: { ignore: true }
  sequence:
    - terminal: (
    - zeroOrMore:
        reference: parameterDeclaration
        separator:
          terminal: ","
    - terminal: )
- name: nonEmptyParameterList
  config: { ignore: true }
  sequence:
    - terminal: (
    - oneOrMore:
        reference: parameterDeclaration
        separator:
          terminal: ","
    - terminal: )
- name: parameterDeclaration
  config: { ignore: true }
  sequence:
    - reference: typeName
    - optional:
        reference: dataLocation
    - optional:
        reference: Identifier
- name: visibilitySpecifier
  config: { nomap: true }
  choice:
    - terminal: internal
    - terminal: external
    - terminal: private
    - terminal: public
- name: stateMutabilitySpecifier
  config: { nomap: true }
  choice:
    - terminal: pure
    - terminal: view
    - terminal: payable
- name: overrideSpecifier
  config: { map: to_str }
  sequence:
    - terminal: override
    - optional:
        sequence:
          - terminal: (
          - repeat:
              min: 1
              max: 1
              reference: IdentifierPath
              separator:
                terminal: ","
          - terminal: )
- name: IdentifierPath
  config: { map: to_str }
  oneOrMore:
    reference: Identifier
    separator:
      terminal: "."
- name: typeName
  config: { ignore: true }
  sequence:
    - choice:
        - reference: elementaryTypeWithPayable
        - reference: functionType
        - reference: mappingType
        - reference: IdentifierPath
    - zeroOrMore:
        sequence:
          - terminal: "["
          - optional:
              reference: expression
          - terminal: "]"
- name: elementaryTypeWithPayable
  config: { nomap: true }
  choice:
    - sequence:
        - terminal: address
        - optional:
            terminal: payable
      config: { map: to_str }
    - reference: elementaryType
- name: elementaryTypeWithoutPayable
  config: { nomap: true }
  choice:
    - terminal: address
    - reference: elementaryType
- name: elementaryType
  config: { nomap: true }
  choice:
    - terminal: bool
    - terminal: string
    - terminal: bytes
    - reference: SignedIntegerType
    - reference: UnsignedIntegerType
    - reference: FixedBytesType
    - reference: FixedType
    - reference: UfixedType
- name: functionType
  config: { ignore: true }
  sequence:
    - terminal: function
    - reference: parameterList
    - zeroOrMore:
        choice:
          - reference: visibilitySpecifier
          - reference: stateMutabilitySpecifier
    - optional:
        sequence:
          - terminal: returns
          - reference: nonEmptyParameterList
- name: mappingType
  config: { ignore: true }
  sequence:
    - terminal: mapping
    - terminal: (
    - choice:
        - reference: elementaryTypeWithoutPayable
        - reference: IdentifierPath
    - terminal: "=>"
    - reference: typeName
    - terminal: )
- name: dataLocation
  config: { ignore: true }
  choice:
    - terminal: memory
    - terminal: storage
    - terminal: calldata
- name: expression
  config: { ignore: true }
  reference: assignmentExpression
- name: assignmentExpression
  config: { ignore: true }
  sequence:
    - reference: conditionalExpression
    - reference: assignmentOperator
    - reference: expression
- name: assignmentOperator
  config: { ignore: true }
  choice:
    - terminal: "="
    - terminal: "|="
    - terminal: ^=
    - terminal: "&="
    - terminal: "<<="
    - terminal: ">>="
    - terminal: ">>>="
    - terminal: +=
    - terminal: "-="
    - terminal: "*="
    - terminal: /=
    - terminal: "%="
- name: conditionalExpression
  config: { ignore: true }
  sequence:
    - reference: orExpression
    - terminal: "?"
    - reference: expression
    - terminal: ":"
    - reference: expression
- name: orExpression
  config: { ignore: true }
  sequence:
    - reference: andExpression
    - zeroOrMore:
        sequence:
          - terminal: "||"
          - reference: andExpression
- name: andExpression
  config: { ignore: true }
  sequence:
    - reference: equalityComparisonExpression
    - zeroOrMore:
        sequence:
          - terminal: "&&"
          - reference: equalityComparisonExpression
- name: equalityComparisonExpression
  config: { ignore: true }
  sequence:
    - reference: orderComparisonExpression
    - zeroOrMore:
        sequence:
          - reference: equalityComparisonOperator
          - reference: orderComparisonExpression
- name: equalityComparisonOperator
  config: { ignore: true }
  choice:
    - terminal: "=="
    - terminal: "!="
- name: orderComparisonExpression
  config: { ignore: true }
  sequence:
    - reference: bitOrExpression
    - zeroOrMore:
        sequence:
          - reference: orderComparisonOperator
          - reference: bitOrExpression
- name: orderComparisonOperator
  config: { ignore: true }
  choice:
    - terminal: "<"
    - terminal: ">"
    - terminal: "<="
    - terminal: ">="
- name: bitOrExpression
  config: { ignore: true }
  sequence:
    - reference: bitXorExpression
    - zeroOrMore:
        sequence:
          - terminal: "|"
          - reference: bitXorExpression
- name: bitXorExpression
  config: { ignore: true }
  sequence:
    - reference: bitAndExpression
    - zeroOrMore:
        sequence:
          - terminal: ^
          - reference: bitAndExpression
- name: bitAndExpression
  config: { ignore: true }
  sequence:
    - reference: shiftExpression
    - zeroOrMore:
        sequence:
          - terminal: "&"
          - reference: shiftExpression
- name: shiftExpression
  config: { ignore: true }
  sequence:
    - reference: addSubExpression
    - zeroOrMore:
        sequence:
          - reference: shiftOperator
          - reference: addSubExpression
- name: shiftOperator
  config: { ignore: true }
  choice:
    - terminal: "<<"
    - terminal: ">>"
    - terminal: ">>>"
- name: addSubExpression
  config: { ignore: true }
  sequence:
    - reference: mulDivModExpression
    - zeroOrMore:
        sequence:
          - reference: addSubOperator
          - reference: mulDivModExpression
- name: addSubOperator
  config: { ignore: true }
  choice:
    - terminal: +
    - terminal: "-"
- name: mulDivModExpression
  config: { ignore: true }
  sequence:
    - reference: expExpression
    - zeroOrMore:
        sequence:
          - reference: mulDivModOperator
          - reference: expExpression
- name: mulDivModOperator
  config: { ignore: true }
  choice:
    - terminal: "*"
    - terminal: /
    - terminal: "%"
- name: expExpression
  config: { ignore: true }
  sequence:
    - reference: unarySuffixExpression
    - terminal: "**"
    - reference: expression
- name: unarySuffixExpression
  config: { ignore: true }
  sequence:
    - reference: unaryPrefixExpression
    - reference: unarySuffixOperator
- name: unarySuffixOperator
  config: { ignore: true }
  choice:
    - terminal: ++
    - terminal: "--"
- name: unaryPrefixExpression
  config: { ignore: true }
  sequence:
    - reference: unaryPrefixOperator
    - reference: functionCallExpression
- name: unaryPrefixOperator
  config: { ignore: true }
  choice:
    - terminal: ++
    - terminal: "--"
    - terminal: "!"
    - terminal: "~"
    - terminal: delete
    - terminal: "-"
- name: functionCallExpression
  config: { ignore: true }
  sequence:
    - reference: functionCallOptionsExpression
    - zeroOrMore:
        reference: argumentList
- name: functionCallOptionsExpression
  config: { ignore: true }
  sequence:
    - reference: memberAccessExpression
    - zeroOrMore:
        sequence:
          - terminal: "{"
          - oneOrMore:
              reference: namedArgument
              separator:
                terminal: ","
          - terminal: "}"
- name: memberAccessExpression
  config: { ignore: true }
  sequence:
    - reference: indexAccessExpression
    - zeroOrMore:
        sequence:
          - terminal: "."
          - choice:
              - reference: Identifier
              - terminal: address
- name: indexAccessExpression
  config: { ignore: true }
  sequence:
    - reference: primaryExpression
    - zeroOrMore:
        sequence:
          - terminal: "["
          - optional:
              reference: expression
          - optional:
              sequence:
                - terminal: ":"
                - optional:
                    reference: expression
          - terminal: "]"
- name: primaryExpression
  config: { ignore: true }
  choice:
    - sequence:
        - terminal: payable
        - reference: argumentList
    - sequence:
        - terminal: type
        - terminal: (
        - reference: typeName
        - terminal: )
    - sequence:
        - terminal: new
        - reference: typeName
    - sequence:
        - terminal: (
        - oneOrMore:
            optional:
              reference: expression
            separator:
              terminal: ","
        - terminal: )
    - sequence:
        - terminal: "["
        - oneOrMore:
            reference: expression
            separator:
              terminal: ","
        - terminal: "]"
    - reference: Identifier
    - reference: literal
    - reference: elementaryTypeWithoutPayable
- name: literal
  config: { ignore: true }
  choice:
    - reference: asciiStringLiteral
    - reference: unicodeStringLiteral
    - reference: numericLiteral
    - reference: HexStringLiteral
    - reference: BooleanLiteral
- name: asciiStringLiteral
  config: { ignore: true }
  oneOrMore:
    reference: AsciiStringLiteral
- name: unicodeStringLiteral
  config: { ignore: true }
  oneOrMore:
    reference: UnicodeStringLiteral
- name: numericLiteral
  config: { ignore: true }
  sequence:
    - choice:
        - reference: DecimalNumber
        - reference: HexNumber
    - optional:
        reference: NumberUnit
- name: block
  config: { ignore: true }
  sequence:
    - terminal: "{"
    - zeroOrMore:
        choice:
          - reference: statement
          - reference: uncheckedBlock
    - terminal: "}"
- name: uncheckedBlock
  config: { ignore: true }
  sequence:
    - terminal: unchecked
    - reference: block
- name: statement
  config: { ignore: true }
  choice:
    - reference: block
    - reference: simpleStatement
    - reference: ifStatement
    - reference: forStatement
    - reference: whileStatement
    - reference: doWhileStatement
    - reference: continueStatement
    - reference: breakStatement
    - reference: tryStatement
    - reference: returnStatement
    - reference: emitStatement
    - reference: revertStatement
    - reference: assemblyStatement
- name: simpleStatement
  config: { ignore: true }
  choice:
    - reference: variableDeclarationStatement
    - reference: expressionStatement
- name: ifStatement
  config: { ignore: true }
  sequence:
    - terminal: if
    - terminal: (
    - reference: expression
    - terminal: )
    - reference: statement
    - optional:
        sequence:
          - terminal: else
          - reference: statement
- name: forStatement
  config: { ignore: true }
  sequence:
    - terminal: for
    - terminal: (
    - choice:
        - reference: simpleStatement
        - terminal: ;
    - choice:
        - reference: expressionStatement
        - terminal: ;
    - optional:
        reference: expression
    - terminal: )
    - reference: statement
- name: whileStatement
  config: { ignore: true }
  sequence:
    - terminal: while
    - terminal: (
    - reference: expression
    - terminal: )
    - reference: statement
- name: doWhileStatement
  config: { ignore: true }
  sequence:
    - terminal: do
    - reference: statement
    - terminal: while
    - terminal: (
    - reference: expression
    - terminal: )
    - terminal: ;
- name: continueStatement
  config: { ignore: true }
  sequence:
    - terminal: continue
    - terminal: ;
- name: breakStatement
  config: { ignore: true }
  sequence:
    - terminal: break
    - terminal: ;
- name: tryStatement
  config: { ignore: true }
  sequence:
    - terminal: try
    - reference: expression
    - optional:
        sequence:
          - terminal: returns
          - reference: nonEmptyParameterList
    - reference: block
    - reference: catchClause
    - zeroOrMore:
        reference: catchClause
- name: catchClause
  config: { ignore: true }
  sequence:
    - terminal: catch
    - optional:
        sequence:
          - optional:
              reference: Identifier
          - reference: nonEmptyParameterList
    - reference: block
- name: returnStatement
  config: { ignore: true }
  sequence:
    - terminal: return
    - optional:
        reference: expression
    - terminal: ;
- name: emitStatement
  config: { ignore: true }
  sequence:
    - terminal: emit
    - reference: expression
    - reference: argumentList
    - terminal: ;
- name: revertStatement
  config: { ignore: true }
  sequence:
    - terminal: revert
    - reference: expression
    - reference: argumentList
    - terminal: ;
- name: variableDeclarationList
  config: { ignore: true }
  oneOrMore:
    reference: variableDeclaration
    separator:
      terminal: ","
- name: variableDeclarationTuple
  config: { ignore: true }
  sequence:
    - terminal: (
    - zeroOrMore:
        terminal: ","
    - reference: variableDeclaration
    - zeroOrMore:
        sequence:
          - terminal: ","
          - optional:
              reference: variableDeclaration
    - terminal: )
- name: variableDeclarationStatement
  config: { ignore: true }
  sequence:
    - choice:
        - sequence:
            - reference: variableDeclaration
            - optional:
                sequence:
                  - terminal: "="
                  - reference: expression
        - sequence:
            - reference: variableDeclarationTuple
            - terminal: "="
            - reference: expression
    - terminal: ;
- name: variableDeclaration
  config: { ignore: true }
  sequence:
    - reference: typeName
    - optional:
        reference: dataLocation
    - reference: Identifier
- name: expressionStatement
  config: { ignore: true }
  sequence:
    - reference: expression
    - terminal: ;
- name: assemblyStatement
  config: { ignore: true }
  sequence:
    - terminal: assembly
    - optional:
        terminal: '"evmasm"'
    - optional:
        reference: assemblyFlags
    - reference: yulBlock
- name: assemblyFlags
  config: { ignore: true }
  sequence:
    - terminal: (
    - oneOrMore:
        reference: DoubleQuotedAsciiStringLiteral
        separator:
          terminal: ","
    - terminal: )
- name: Identifier
  config: { ignore: true }
  is_token: true
  difference:
    minuend:
      reference: RawIdentifier
    subtrahend:
      reference: ReservedWord
- name: ReservedWord
  config: { ignore: true }
  is_token: true
  choice:
    - reference: Keyword
    - reference: ReservedKeyword
    - reference: NumberUnit
    - reference: BooleanLiteral
- name: Keyword
  config: { ignore: true }
  is_token: true
  choice:
    - terminal: pragma
    - terminal: abstract
    - terminal: anonymous
    - terminal: address
    - terminal: as
    - terminal: assembly
    - terminal: bool
    - terminal: break
    - terminal: bytes
    - terminal: calldata
    - terminal: catch
    - terminal: constant
    - terminal: constructor
    - terminal: continue
    - terminal: contract
    - terminal: delete
    - terminal: do
    - terminal: else
    - terminal: emit
    - terminal: enum
    - terminal: event
    - terminal: external
    - terminal: fallback
    - terminal: "false"
    - terminal: for
    - terminal: function
    - terminal: hex
    - terminal: if
    - terminal: immutable
    - terminal: import
    - terminal: indexed
    - terminal: interface
    - terminal: internal
    - terminal: is
    - terminal: library
    - terminal: mapping
    - terminal: memory
    - terminal: modifier
    - terminal: new
    - terminal: override
    - terminal: payable
    - terminal: private
    - terminal: public
    - terminal: pure
    - terminal: receive
    - terminal: return
    - terminal: returns
    - terminal: storage
    - terminal: string
    - terminal: struct
    - terminal: "true"
    - terminal: try
    - terminal: type
    - terminal: unchecked
    - terminal: using
    - terminal: view
    - terminal: virtual
    - terminal: while
    - reference: SignedIntegerType
    - reference: UnsignedIntegerType
    - reference: FixedBytesType
    - terminal: fixed
    - terminal: ufixed
- name: ReservedKeyword
  config: { ignore: true }
  is_token: true
  choice:
    - terminal: after
    - terminal: alias
    - terminal: apply
    - terminal: auto
    - terminal: byte
    - terminal: case
    - terminal: copyof
    - terminal: default
    - terminal: define
    - terminal: final
    - terminal: implements
    - terminal: in
    - terminal: inline
    - terminal: let
    - terminal: macro
    - terminal: match
    - terminal: mutable
    - terminal: "null"
    - terminal: of
    - terminal: partial
    - terminal: promise
    - terminal: reference
    - terminal: relocatable
    - terminal: sealed
    - terminal: sizeof
    - terminal: static
    - terminal: supports
    - terminal: switch
    - terminal: typedef
    - terminal: typeof
    - terminal: var
- name: pragmaDirective
  config: { ignore: true }
  is_token: true
  sequence:
    - terminal: pragma
    - not:
        terminal: ;
    - zeroOrMore:
        not:
          terminal: ;
    - terminal: ;
- name: RawIdentifier
  is_token: true
  config:
    chain: true
    nomap: true
  sequence:
    - reference: IdentifierStart
    - zeroOrMore:
        reference: IdentifierPart
- name: IdentifierStart
  is_token: true
  choice:
    - terminal: _
    - terminal: $
    - range:
        from: a
        to: z
    - range:
        from: A
        to: Z
- name: IdentifierPart
  is_token: true
  choice:
    - reference: IdentifierStart
    - range:
        from: "0"
        to: "9"
- name: SignedIntegerType
  config: { map: to_str }
  is_token: true
  sequence:
    - terminal: int
    - choice:
        - terminal: "8"
        - terminal: "16"
        - terminal: "24"
        - terminal: "32"
        - terminal: "40"
        - terminal: "48"
        - terminal: "56"
        - terminal: "64"
        - terminal: "72"
        - terminal: "80"
        - terminal: "88"
        - terminal: "96"
        - terminal: "104"
        - terminal: "112"
        - terminal: "120"
        - terminal: "128"
        - terminal: "136"
        - terminal: "144"
        - terminal: "152"
        - terminal: "160"
        - terminal: "168"
        - terminal: "176"
        - terminal: "184"
        - terminal: "192"
        - terminal: "200"
        - terminal: "208"
        - terminal: "216"
        - terminal: "224"
        - terminal: "232"
        - terminal: "240"
        - terminal: "248"
        - terminal: "256"
- name: UnsignedIntegerType
  config: { map: to_str }
  is_token: true
  sequence:
    - terminal: u
    - reference: SignedIntegerType
- name: FixedBytesType
  config: { map: to_str }
  is_token: true
  sequence:
    - terminal: bytes
    - choice:
        - terminal: "1"
        - terminal: "2"
        - terminal: "3"
        - terminal: "4"
        - terminal: "5"
        - terminal: "6"
        - terminal: "7"
        - terminal: "8"
        - terminal: "9"
        - terminal: "10"
        - terminal: "11"
        - terminal: "12"
        - terminal: "13"
        - terminal: "14"
        - terminal: "15"
        - terminal: "16"
        - terminal: "17"
        - terminal: "18"
        - terminal: "19"
        - terminal: "20"
        - terminal: "21"
        - terminal: "22"
        - terminal: "23"
        - terminal: "24"
        - terminal: "25"
        - terminal: "26"
        - terminal: "27"
        - terminal: "28"
        - terminal: "29"
        - terminal: "30"
        - terminal: "31"
        - terminal: "32"
- name: FixedType
  config: { map: to_str }
  is_token: true
  sequence:
    - terminal: fixed
    - optional:
        sequence:
          - range:
              from: "1"
              to: "9"
          - zeroOrMore:
              range:
                from: "0"
                to: "9"
          - terminal: x
          - range:
              from: "1"
              to: "9"
          - zeroOrMore:
              range:
                from: "0"
                to: "9"
- name: UfixedType
  config: { map: to_str }
  is_token: true
  sequence:
    - terminal: u
    - reference: FixedType
- name: BooleanLiteral
  config: { ignore: true }
  is_token: true
  choice:
    - terminal: "true"
    - terminal: "false"
- name: DecimalNumber
  config: { ignore: true }
  is_token: true
  sequence:
    - choice:
        - reference: DecimalInteger
        - reference: DecimalFloat
    - optional:
        reference: DecimalExponent
- name: DecimalInteger
  config: { ignore: true }
  is_token: true
  oneOrMore:
    range:
      from: "0"
      to: "9"
    separator:
      optional:
        terminal: _
- name: DecimalFloat
  config: { ignore: true }
  is_token: true
  sequence:
    - optional:
        reference: DecimalInteger
    - terminal: "."
    - reference: DecimalInteger
- name: DecimalExponent
  config: { ignore: true }
  is_token: true
  sequence:
    - choice:
        - terminal: e
        - terminal: E
    - optional:
        terminal: "-"
    - reference: DecimalInteger
- name: HexNumber
  config: { ignore: true }
  is_token: true
  sequence:
    - terminal: "0"
    - terminal: x
    - oneOrMore:
        reference: HexCharacter
        separator:
          optional:
            terminal: _
- name: NumberUnit
  config: { ignore: true }
  is_token: true
  choice:
    - terminal: wei
    - terminal: gwei
    - terminal: ether
    - terminal: seconds
    - terminal: minutes
    - terminal: hours
    - terminal: days
    - terminal: weeks
    - terminal: years
- name: HexStringLiteral
  config: { ignore: true }
  is_token: true
  sequence:
    - terminal: hex
    - choice:
        - sequence:
            - terminal: '"'
            - optional:
                reference: PossiblySeparatedPairsOfHexDigits
            - terminal: '"'
        - sequence:
            - terminal: "'"
            - optional:
                reference: PossiblySeparatedPairsOfHexDigits
            - terminal: "'"
- name: PossiblySeparatedPairsOfHexDigits
  config: { ignore: true }
  is_token: true
  oneOrMore:
    repeat:
      min: 2
      max: 2
      reference: HexCharacter
    separator:
      optional:
        terminal: _
- name: HexCharacter
  config: { ignore: true }
  is_token: true
  choice:
    - range:
        from: "0"
        to: "9"
    - range:
        from: a
        to: f
    - range:
        from: A
        to: F
- name: AsciiStringLiteral
  config: { ignore: true }
  is_token: true
  choice:
    - reference: SingleQuotedAsciiStringLiteral
    - reference: DoubleQuotedAsciiStringLiteral
- name: SingleQuotedAsciiStringLiteral
  config: { ignore: true }
  is_token: true
  sequence:
    - terminal: "'"
    - zeroOrMore:
        choice:
          - difference:
              minuend:
                range:
                  from: " "
                  to: "~"
              subtrahend:
                choice:
                  - terminal: "'"
                  - terminal: "\\"
          - reference: EscapeSequence
    - terminal: "'"
- name: DoubleQuotedAsciiStringLiteral
  config: { ignore: true }
  is_token: true
  sequence:
    - terminal: '"'
    - zeroOrMore:
        choice:
          - difference:
              minuend:
                range:
                  from: " "
                  to: "~"
              subtrahend:
                choice:
                  - terminal: '"'
                  - terminal: "\\"
          - reference: EscapeSequence
    - terminal: '"'
- name: UnicodeStringLiteral
  config: { ignore: true }
  is_token: true
  choice:
    - reference: SingleQuotedUnicodeStringLiteral
    - reference: DoubleQuotedUnicodeStringLiteral
- name: SingleQuotedUnicodeStringLiteral
  config: { ignore: true }
  is_token: true
  sequence:
    - terminal: "unicode'"
    - zeroOrMore:
        choice:
          - not:
              choice:
                - terminal: "'"
                - terminal: "\\"
                - terminal: "\n"
                - terminal: "\r"
          - reference: EscapeSequence
    - terminal: "'"
- name: DoubleQuotedUnicodeStringLiteral
  config: { ignore: true }
  is_token: true
  sequence:
    - terminal: 'unicode"'
    - zeroOrMore:
        choice:
          - not:
              choice:
                - terminal: '"'
                - terminal: "\\"
                - terminal: "\n"
                - terminal: "\r"
          - reference: EscapeSequence
    - terminal: '"'
- name: EscapeSequence
  config: { nomap: true }
  is_token: true
  sequence:
    - terminal: "\\"
    - choice:
        - reference: AsciiEscape
        - reference: HexByteEscape
        - reference: UnicodeEscape
- name: AsciiEscape
  config: { map: to_char }
  is_token: true
  choice:
    - terminal: n
    - terminal: r
    - terminal: t
    - terminal: "'"
    - terminal: '"'
    - terminal: "\\"
    - terminal: "\n"
    - terminal: "\r"
- name: HexByteEscape
  config: { map: to_char }
  is_token: true
  sequence:
    - terminal: x
    - repeat:
        min: 2
        max: 2
        reference: HexCharacter
- name: UnicodeEscape
  config: { map: to_char }
  is_token: true
  sequence:
    - terminal: u
    - repeat:
        min: 4
        max: 4
        reference: HexCharacter
- name: yulBlock
  config: { ignore: true }
  sequence:
    - terminal: "{"
    - zeroOrMore:
        reference: yulStatement
    - terminal: "}"
- name: yulStatement
  config: { ignore: true }
  choice:
    - reference: yulBlock
    - reference: yulVariableDeclaration
    - reference: yulFunctionDefinition
    - reference: yulAssignment
    - reference: yulFunctionCall
    - reference: yulIfStatement
    - reference: yulForStatement
    - reference: yulSwitchStatement
    - reference: yulLeaveStatement
    - reference: yulBreakStatement
    - reference: yulContinueStatement
- name: yulVariableDeclaration
  config: { ignore: true }
  sequence:
    - terminal: let
    - reference: YulIdentifier
    - optional:
        choice:
          - sequence:
              - terminal: ":="
              - reference: yulExpression
          - sequence:
              - optional:
                  sequence:
                    - terminal: ","
                    - reference: YulIdentifier
              - optional:
                  sequence:
                    - terminal: ":="
                    - reference: yulFunctionCall
- name: yulFunctionDefinition
  config: { ignore: true }
  sequence:
    - terminal: function
    - reference: YulIdentifier
    - terminal: (
    - zeroOrMore:
        reference: YulIdentifier
        separator:
          terminal: ","
    - terminal: )
    - optional:
        sequence:
          - terminal: "->"
          - oneOrMore:
              reference: YulIdentifier
              separator:
                terminal: ","
    - reference: yulBlock
- name: yulAssignment
  config: { ignore: true }
  sequence:
    - reference: yulPath
    - choice:
        - sequence:
            - terminal: ":="
            - reference: yulExpression
        - sequence:
            - oneOrMore:
                sequence:
                  - terminal: ","
                  - reference: yulPath
            - terminal: ":="
            - reference: yulFunctionCall
- name: yulFunctionCall
  config: { ignore: true }
  sequence:
    - choice:
        - reference: YulIdentifier
        - reference: YulEVMBuiltinFunctionName
    - terminal: (
    - zeroOrMore:
        reference: yulExpression
        separator:
          terminal: ","
    - terminal: )
- name: yulIfStatement
  config: { ignore: true }
  sequence:
    - terminal: if
    - reference: yulExpression
    - reference: yulBlock
- name: yulLeaveStatement
  config: { ignore: true }
  terminal: leave
- name: yulBreakStatement
  config: { ignore: true }
  terminal: break
- name: yulContinueStatement
  config: { ignore: true }
  terminal: continue
- name: yulForStatement
  config: { ignore: true }
  sequence:
    - terminal: for
    - reference: yulBlock
    - reference: yulExpression
    - reference: yulBlock
    - reference: yulBlock
- name: yulSwitchStatement
  config: { ignore: true }
  sequence:
    - terminal: switch
    - reference: yulExpression
    - choice:
        - sequence:
            - oneOrMore:
                sequence:
                  - terminal: case
                  - reference: yulLiteral
                  - reference: yulBlock
            - optional:
                sequence:
                  - terminal: default
                  - reference: yulBlock
        - sequence:
            - terminal: default
            - reference: yulBlock
- name: yulExpression
  config: { ignore: true }
  choice:
    - reference: yulPath
    - reference: yulFunctionCall
    - reference: yulLiteral
- name: yulPath
  config: { ignore: true }
  sequence:
    - reference: YulIdentifier
    - zeroOrMore:
        sequence:
          - terminal: "."
          - choice:
              - reference: YulIdentifier
              - reference: YulEVMBuiltinFunctionName
- name: yulLiteral
  config: { ignore: true }
  choice:
    - reference: YulDecimalNumberLiteral
    - reference: YulHexLiteral
    - reference: asciiStringLiteral
    - reference: BooleanLiteral
    - reference: HexStringLiteral
- name: YulIdentifier
  config: { ignore: true }
  is_token: true
  difference:
    minuend:
      reference: RawIdentifier
    subtrahend:
      reference: YulReservedWord
- name: YulReservedWord
  config: { ignore: true }
  is_token: true
  choice:
    - reference: YulKeyword
    - reference: YulEVMBuiltinFunctionName
    - reference: BooleanLiteral
- name: YulKeyword
  config: { ignore: true }
  is_token: true
  choice:
    - terminal: break
    - terminal: case
    - terminal: continue
    - terminal: default
    - terminal: for
    - terminal: function
    - terminal: if
    - terminal: leave
    - terminal: let
    - terminal: switch
    - terminal: hex
- name: YulEVMBuiltinFunctionName
  config: { ignore: true }
  is_token: true
  choice:
    - terminal: stop
    - terminal: add
    - terminal: sub
    - terminal: mul
    - terminal: div
    - terminal: sdiv
    - terminal: mod
    - terminal: smod
    - terminal: exp
    - terminal: not
    - terminal: lt
    - terminal: gt
    - terminal: slt
    - terminal: sgt
    - terminal: eq
    - terminal: iszero
    - terminal: and
    - terminal: or
    - terminal: xor
    - terminal: byte
    - terminal: shl
    - terminal: shr
    - terminal: sar
    - terminal: addmod
    - terminal: mulmod
    - terminal: signextend
    - terminal: keccak256
    - terminal: pop
    - terminal: mload
    - terminal: mstore
    - terminal: mstore8
    - terminal: sload
    - terminal: sstore
    - terminal: msize
    - terminal: gas
    - terminal: address
    - terminal: balance
    - terminal: selfbalance
    - terminal: caller
    - terminal: callvalue
    - terminal: calldataload
    - terminal: calldatasize
    - terminal: calldatacopy
    - terminal: extcodesize
    - terminal: extcodecopy
    - terminal: returndatasize
    - terminal: returndatacopy
    - terminal: extcodehash
    - terminal: create
    - terminal: create2
    - terminal: call
    - terminal: callcode
    - terminal: delegatecall
    - terminal: staticcall
    - terminal: return
    - terminal: revert
    - terminal: selfdestruct
    - terminal: invalid
    - terminal: log0
    - terminal: log1
    - terminal: log2
    - terminal: log3
    - terminal: log4
    - terminal: chainid
    - terminal: origin
    - terminal: gasprice
    - terminal: blockhash
    - terminal: coinbase
    - terminal: timestamp
    - terminal: number
    - terminal: difficulty
    - terminal: gaslimit
    - terminal: basefee
- name: YulDecimalNumberLiteral
  config: { ignore: true }
  is_token: true
  choice:
    - terminal: "0"
      config: { map: to_str }
    - sequence:
        - range:
            from: "1"
            to: "9"
        - zeroOrMore:
            range:
              from: "0"
              to: "9"
      config: { chain: true, map: to_str }
- name: YulHexLiteral
  config: { ignore: true }
  is_token: true
  sequence:
    - terminal: "0x"
    - choice:
        - range:
            from: "0"
            to: "9"
        - range:
            from: a
            to: f
        - range:
            from: A
            to: F
    - zeroOrMore:
        choice:
          - range:
              from: "0"
              to: "9"
          - range:
              from: a
              to: f
          - range:
              from: A
              to: F
