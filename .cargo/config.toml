[profile.dev.build-override]
debug = true

[profile.release]
incremental = true
lto = true

[build]
# TODO: Replace with `[lints]` once we upgrade to Rust 1.74
# https://blog.rust-lang.org/2023/11/16/Rust-1.74.0.html#lint-configuration-through-cargo
rustflags = [
	# rustc additional warnings:
	"-Wunused_crate_dependencies",
	# Rust 2018 idioms that are not yet warn-by-default:
	"-Welided_lifetimes_in_paths",
	"-Wunused_extern_crates",
	"-Wexplicit_outlives_requirements",
	# ðŸ“Ž Lints that are enabled (warn/deny) by default
	"-Wclippy::all",
	# Restriction (optional, neutral lints)
	"-Wclippy::exit",                            # Prefer not `process::exit`ing directly
	"-Wclippy::rest_pat_in_fully_bound_structs", # Prefer not to use `..` in fully bound structs
	"-Wclippy::verbose_file_reads",              # Prefer simpler and more concise `fs::read_to_string`
	# Pedantic
	"-Wclippy::pedantic",                           # Warn about pedantic lints, except...
	"-Aclippy::implicit_clone",                     # A lot of false positives, tuned down in Clippy bundled with Rust 1.73
	"-Aclippy::match_same_arms",                    # It's often clearer to have the same arm twice
	"-Aclippy::missing_errors_doc",                 # Most of our code is internal; let's not clutter the docs until...
	"-Aclippy::missing_panics_doc",                 # ... we care about the public documentation in our shipped crates
	"-Aclippy::module_name_repetitions",            # It seems we prefer it this way; we'd need to discuss that
	"-Aclippy::must_use_candidate",                 # Overzealous, we'd have to `[must_use]` a lot of things
	"-Aclippy::redundant_closure_for_method_calls", # Not always clearer, let's not pepper `allow`s whenever needed
]
