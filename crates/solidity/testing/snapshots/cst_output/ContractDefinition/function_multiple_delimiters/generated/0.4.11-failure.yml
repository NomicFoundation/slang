# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ // SPDX-License-Identifier: MIT                                                     │ 0..31
  2  │ contract ABC {                                                                      │ 32..46
  3  │   function sendValue(address payable recipient, uint256 amount) internal {          │ 47..121
  4  │     require(address(this).balance >= amount, "Address: insufficient balance");      │ 122..200
  5  │                                                                                     │ 201..201
  6  │     (bool success, ) = recipient.call{ value: amount }("");                         │ 202..261
  7  │     require(success, "Address: unable to send value, recipient may have reverted"); │ 262..345
  8  │   }                                                                                 │ 346..349
  9  │ }                                                                                   │ 350..351

Errors: # 1 total
  - >
    Error: Expected Semicolon.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractDefinition/function_multiple_delimiters/input.sol:6:38]
       │
     6 │     (bool success, ) = recipient.call{ value: amount }("");
       │                                      ──────────┬──────────  
       │                                                ╰──────────── Error occurred here.
    ───╯

Tree:
  - ContractDefinition: # 0..352 "// SPDX-License-Identifier: MIT\ncontract ABC {\n  f..."
      - LeadingTrivia: # 0..32 "// SPDX-License-Identifier: MIT\n"
          - (variant:) SingleLineComment: "// SPDX-License-Identifier: MIT" # 0..31
      - (contract_keyword:) ContractKeyword: "contract" # 32..40
      - (name:) Identifier: "ABC" # 41..44
      - OpenBrace: "{" # 45..46
      - ContractMembers: # 47..350 "  function sendValue(address payable recipient, ui..."
          - ContractMember: # 47..350 "  function sendValue(address payable recipient, ui..."
              - (variant:) FunctionDefinition: # 47..350 "  function sendValue(address payable recipient, ui..."
                  - (function_keyword:) FunctionKeyword: "function" # 49..57
                  - (name:) FunctionName: # 57..67 " sendValue"
                      - (variant:) Identifier: "sendValue" # 58..67
                  - (parameters:) ParametersDeclaration: # 67..110 "(address payable recipient, uint256 amount)"
                      - OpenParen: "(" # 67..68
                      - Parameters: # 68..109 "address payable recipient, uint256 amount"
                          - Parameter: # 68..93 "address payable recipient"
                              - (type_name:) TypeName: # 68..83 "address payable"
                                  - ElementaryType: # 68..83 "address payable"
                                      - (variant:) AddressType: # 68..83 "address payable"
                                          - (address_keyword:) AddressKeyword: "address" # 68..75
                                          - (payable_keyword:) PayableKeyword: "payable" # 76..83
                              - (name:) Identifier: "recipient" # 84..93
                          - Comma: "," # 93..94
                          - Parameter: # 94..109 " uint256 amount"
                              - (type_name:) TypeName: # 94..102 " uint256"
                                  - ElementaryType: # 94..102 " uint256"
                                      - (variant:) UintKeyword: "uint256" # 95..102
                              - (name:) Identifier: "amount" # 103..109
                      - CloseParen: ")" # 109..110
                  - (attributes:) FunctionAttributes: # 110..119 " internal"
                      - FunctionAttribute: # 110..119 " internal"
                          - (variant:) InternalKeyword: "internal" # 111..119
                  - (body:) FunctionBody: # 119..350 ' {\n    require(address(this).balance >= amount, "A...'
                      - (variant:) Block: # 119..350 ' {\n    require(address(this).balance >= amount, "A...'
                          - OpenBrace: "{" # 120..121
                          - Statements: # 122..346 '    require(address(this).balance >= amount, "Addr...'
                              - Statement: # 122..201 '    require(address(this).balance >= amount, "Addr...'
                                  - (variant:) ExpressionStatement: # 122..201 '    require(address(this).balance >= amount, "Addr...'
                                      - Expression: # 122..199 '    require(address(this).balance >= amount, "Addr...'
                                          - (operand:) FunctionCallExpression: # 122..199 '    require(address(this).balance >= amount, "Addr...'
                                              - (left_operand:) Expression: # 122..133 "    require"
                                                  - Identifier: "require" # 126..133
                                              - (operator:) ArgumentsDeclaration: # 133..199 '(address(this).balance >= amount, "Address: insuff...'
                                                  - (variant:) PositionalArgumentsDeclaration: # 133..199 '(address(this).balance >= amount, "Address: insuff...'
                                                      - OpenParen: "(" # 133..134
                                                      - PositionalArguments: # 134..198 'address(this).balance >= amount, "Address: insuffi...'
                                                          - Expression: # 134..165 "address(this).balance >= amount"
                                                              - (operand:) ComparisonExpression: # 134..165 "address(this).balance >= amount"
                                                                  - (left_operand:) Expression: # 134..155 "address(this).balance"
                                                                      - (operand:) MemberAccessExpression: # 134..155 "address(this).balance"
                                                                          - (left_operand:) Expression: # 134..147 "address(this)"
                                                                              - (operand:) FunctionCallExpression: # 134..147 "address(this)"
                                                                                  - (left_operand:) Expression: # 134..141 "address"
                                                                                      - ElementaryType: # 134..141 "address"
                                                                                          - (variant:) AddressType: # 134..141 "address"
                                                                                              - (address_keyword:) AddressKeyword: "address" # 134..141
                                                                                  - (operator:) ArgumentsDeclaration: # 141..147 "(this)"
                                                                                      - (variant:) PositionalArgumentsDeclaration: # 141..147 "(this)"
                                                                                          - OpenParen: "(" # 141..142
                                                                                          - PositionalArguments: # 142..146 "this"
                                                                                              - Expression: # 142..146 "this"
                                                                                                  - Identifier: "this" # 142..146
                                                                                          - CloseParen: ")" # 146..147
                                                                          - (operator:) Period: "." # 147..148
                                                                          - (operator:) MemberAccess: # 148..155 "balance"
                                                                              - (variant:) Identifier: "balance" # 148..155
                                                                  - (operator:) GreaterThanEqual: ">=" # 156..158
                                                                  - (right_operand:) Expression: # 158..165 " amount"
                                                                      - Identifier: "amount" # 159..165
                                                          - Comma: "," # 165..166
                                                          - Expression: # 166..198 ' "Address: insufficient balance"'
                                                              - StringExpression: # 166..198 ' "Address: insufficient balance"'
                                                                  - (variant:) AsciiStringLiterals: # 166..198 ' "Address: insufficient balance"'
                                                                      - AsciiStringLiteral: '"Address: insufficient balance"' # 167..198
                                                      - CloseParen: ")" # 198..199
                                      - Semicolon: ";" # 199..200
                              - Statement: # 201..262 "\n    (bool success, ) = recipient.call{ value: amo..."
                                  - (variant:) TupleDeconstructionStatement: # 201..262 "\n    (bool success, ) = recipient.call{ value: amo..."
                                      - OpenParen: "(" # 206..207
                                      - TupleDeconstructionElements: # 207..220 "bool success,"
                                          - TupleDeconstructionElement: # 207..219 "bool success"
                                              - TupleMember: # 207..219 "bool success"
                                                  - (variant:) TypedTupleMember: # 207..219 "bool success"
                                                      - (type_name:) TypeName: # 207..211 "bool"
                                                          - ElementaryType: # 207..211 "bool"
                                                              - (variant:) BoolKeyword: "bool" # 207..211
                                                      - (name:) Identifier: "success" # 212..219
                                          - Comma: "," # 219..220
                                          - TupleDeconstructionElement: [] # 220..220
                                      - CloseParen: ")" # 221..222
                                      - (equal:) Equal: "=" # 223..224
                                      - (expression:) Expression: # 224..239 " recipient.call"
                                          - (operand:) MemberAccessExpression: # 224..239 " recipient.call"
                                              - (left_operand:) Expression: # 224..234 " recipient"
                                                  - Identifier: "recipient" # 225..234
                                              - (operator:) Period: "." # 234..235
                                              - (operator:) MemberAccess: # 235..239 "call"
                                                  - (variant:) Identifier: "call" # 235..239
                                      - SKIPPED: '{ value: amount }("")' # 239..260
                                      - Semicolon: ";" # 260..261
                              - Statement: # 262..346 '    require(success, "Address: unable to send valu...'
                                  - (variant:) ExpressionStatement: # 262..346 '    require(success, "Address: unable to send valu...'
                                      - Expression: # 262..344 '    require(success, "Address: unable to send valu...'
                                          - (operand:) FunctionCallExpression: # 262..344 '    require(success, "Address: unable to send valu...'
                                              - (left_operand:) Expression: # 262..273 "    require"
                                                  - Identifier: "require" # 266..273
                                              - (operator:) ArgumentsDeclaration: # 273..344 '(success, "Address: unable to send value, recipien...'
                                                  - (variant:) PositionalArgumentsDeclaration: # 273..344 '(success, "Address: unable to send value, recipien...'
                                                      - OpenParen: "(" # 273..274
                                                      - PositionalArguments: # 274..343 'success, "Address: unable to send value, recipient...'
                                                          - Expression: # 274..281 "success"
                                                              - Identifier: "success" # 274..281
                                                          - Comma: "," # 281..282
                                                          - Expression: # 282..343 ' "Address: unable to send value, recipient may hav...'
                                                              - StringExpression: # 282..343 ' "Address: unable to send value, recipient may hav...'
                                                                  - (variant:) AsciiStringLiterals: # 282..343 ' "Address: unable to send value, recipient may hav...'
                                                                      - AsciiStringLiteral: '"Address: unable to send value, recipient may have...' # 283..343
                                                      - CloseParen: ")" # 343..344
                                      - Semicolon: ";" # 344..345
                          - CloseBrace: "}" # 348..349
      - CloseBrace: "}" # 350..351
