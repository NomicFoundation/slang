# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ // SPDX-License-Identifier: MIT                                                     │ 0..31
  2  │ contract ABC {                                                                      │ 32..46
  3  │   function sendValue(address payable recipient, uint256 amount) internal {          │ 47..121
  4  │     require(address(this).balance >= amount, "Address: insufficient balance");      │ 122..200
  5  │                                                                                     │ 201..201
  6  │     (bool success, ) = recipient.call{ value: amount }("");                         │ 202..261
  7  │     require(success, "Address: unable to send value, recipient may have reverted"); │ 262..345
  8  │   }                                                                                 │ 346..349
  9  │ }                                                                                   │ 350..351

Errors: # 1 total
  - >
    Error: Expected Semicolon.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractDefinition/function_multiple_delimiters/input.sol:6:38]
       │
     6 │     (bool success, ) = recipient.call{ value: amount }("");
       │                                      ──────────┬──────────  
       │                                                ╰──────────── Error occurred here.
    ───╯

Tree:
  - ContractDefinition (Rule): # 0..352 "// SPDX-License-Identifier: MIT\ncontract ABC {\n  f..."
      - LeadingTrivia (Rule): # 0..32 "// SPDX-License-Identifier: MIT\n"
          - SingleLineComment (Trivia): "// SPDX-License-Identifier: MIT" # 0..31
      - ContractKeyword (Token): "contract" # 32..40
      - Identifier (Token): "ABC" # 41..44
      - OpenBrace (Token): "{" # 45..46
      - ContractMembers (Rule): # 47..350 "  function sendValue(address payable recipient, ui..."
          - FunctionDefinition (Rule): # 47..350 "  function sendValue(address payable recipient, ui..."
              - FunctionKeyword (Token): "function" # 49..57
              - Identifier (Token): "sendValue" # 58..67
              - ParametersDeclaration (Rule): # 67..110 "(address payable recipient, uint256 amount)"
                  - OpenParen (Token): "(" # 67..68
                  - Parameters (Rule): # 68..109 "address payable recipient, uint256 amount"
                      - Parameter (Rule): # 68..93 "address payable recipient"
                          - TypeName (Rule): # 68..83 "address payable"
                              - AddressType (Rule): # 68..83 "address payable"
                                  - AddressKeyword (Token): "address" # 68..75
                                  - PayableKeyword (Token): "payable" # 76..83
                          - Identifier (Token): "recipient" # 84..93
                      - Comma (Token): "," # 93..94
                      - Parameter (Rule): # 94..109 " uint256 amount"
                          - TypeName (Rule): # 94..102 " uint256"
                              - UintKeyword (Token): "uint256" # 95..102
                          - Identifier (Token): "amount" # 103..109
                  - CloseParen (Token): ")" # 109..110
              - FunctionAttributes (Rule): # 110..119 " internal"
                  - InternalKeyword (Token): "internal" # 111..119
              - Block (Rule): # 119..350 ' {\n    require(address(this).balance >= amount, "A...'
                  - OpenBrace (Token): "{" # 120..121
                  - Statements (Rule): # 122..346 '    require(address(this).balance >= amount, "Addr...'
                      - ExpressionStatement (Rule): # 122..201 '    require(address(this).balance >= amount, "Addr...'
                          - Expression (Rule): # 122..199 '    require(address(this).balance >= amount, "Addr...'
                              - FunctionCallExpression (Rule): # 122..199 '    require(address(this).balance >= amount, "Addr...'
                                  - Expression (Rule): # 122..133 "    require"
                                      - Identifier (Token): "require" # 126..133
                                  - ArgumentsDeclaration (Rule): # 133..199 '(address(this).balance >= amount, "Address: insuff...'
                                      - OpenParen (Token): "(" # 133..134
                                      - PositionalArguments (Rule): # 134..198 'address(this).balance >= amount, "Address: insuffi...'
                                          - Expression (Rule): # 134..165 "address(this).balance >= amount"
                                              - BinaryExpression (Rule): # 134..165 "address(this).balance >= amount"
                                                  - Expression (Rule): # 134..155 "address(this).balance"
                                                      - MemberAccessExpression (Rule): # 134..155 "address(this).balance"
                                                          - Expression (Rule): # 134..147 "address(this)"
                                                              - FunctionCallExpression (Rule): # 134..147 "address(this)"
                                                                  - Expression (Rule): # 134..141 "address"
                                                                      - AddressType (Rule): # 134..141 "address"
                                                                          - AddressKeyword (Token): "address" # 134..141
                                                                  - ArgumentsDeclaration (Rule): # 141..147 "(this)"
                                                                      - OpenParen (Token): "(" # 141..142
                                                                      - PositionalArguments (Rule): # 142..146 "this"
                                                                          - Expression (Rule): # 142..146 "this"
                                                                              - Identifier (Token): "this" # 142..146
                                                                      - CloseParen (Token): ")" # 146..147
                                                          - Period (Token): "." # 147..148
                                                          - Identifier (Token): "balance" # 148..155
                                                  - GreaterThanEqual (Token): ">=" # 156..158
                                                  - Expression (Rule): # 158..165 " amount"
                                                      - Identifier (Token): "amount" # 159..165
                                          - Comma (Token): "," # 165..166
                                          - Expression (Rule): # 166..198 ' "Address: insufficient balance"'
                                              - AsciiStringLiterals (Rule): # 166..198 ' "Address: insufficient balance"'
                                                  - AsciiStringLiteral (Token): '"Address: insufficient balance"' # 167..198
                                      - CloseParen (Token): ")" # 198..199
                          - Semicolon (Token): ";" # 199..200
                      - TupleDeconstructionStatement (Rule): # 201..262 "\n    (bool success, ) = recipient.call{ value: amo..."
                          - OpenParen (Token): "(" # 206..207
                          - TupleDeconstructionElements (Rule): # 207..220 "bool success,"
                              - TupleDeconstructionElement (Rule): # 207..219 "bool success"
                                  - TypedTupleMember (Rule): # 207..219 "bool success"
                                      - TypeName (Rule): # 207..211 "bool"
                                          - BoolKeyword (Token): "bool" # 207..211
                                      - Identifier (Token): "success" # 212..219
                              - Comma (Token): "," # 219..220
                              - TupleDeconstructionElement (Rule): [] # 220..220
                          - CloseParen (Token): ")" # 221..222
                          - Equal (Token): "=" # 223..224
                          - Expression (Rule): # 224..239 " recipient.call"
                              - MemberAccessExpression (Rule): # 224..239 " recipient.call"
                                  - Expression (Rule): # 224..234 " recipient"
                                      - Identifier (Token): "recipient" # 225..234
                                  - Period (Token): "." # 234..235
                                  - Identifier (Token): "call" # 235..239
                          - SKIPPED (Token): '{ value: amount }("")' # 239..260
                          - Semicolon (Token): ";" # 260..261
                      - ExpressionStatement (Rule): # 262..346 '    require(success, "Address: unable to send valu...'
                          - Expression (Rule): # 262..344 '    require(success, "Address: unable to send valu...'
                              - FunctionCallExpression (Rule): # 262..344 '    require(success, "Address: unable to send valu...'
                                  - Expression (Rule): # 262..273 "    require"
                                      - Identifier (Token): "require" # 266..273
                                  - ArgumentsDeclaration (Rule): # 273..344 '(success, "Address: unable to send value, recipien...'
                                      - OpenParen (Token): "(" # 273..274
                                      - PositionalArguments (Rule): # 274..343 'success, "Address: unable to send value, recipient...'
                                          - Expression (Rule): # 274..281 "success"
                                              - Identifier (Token): "success" # 274..281
                                          - Comma (Token): "," # 281..282
                                          - Expression (Rule): # 282..343 ' "Address: unable to send value, recipient may hav...'
                                              - AsciiStringLiterals (Rule): # 282..343 ' "Address: unable to send value, recipient may hav...'
                                                  - AsciiStringLiteral (Token): '"Address: unable to send value, recipient may have...' # 283..343
                                      - CloseParen (Token): ")" # 343..344
                          - Semicolon (Token): ";" # 344..345
                  - CloseBrace (Token): "}" # 348..349
      - CloseBrace (Token): "}" # 350..351
