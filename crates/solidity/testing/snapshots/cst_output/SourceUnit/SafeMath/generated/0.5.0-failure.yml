# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ library SafeMath {                                                               │ 0..18
  2  │   function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {  │ 19..98
  3  │     unchecked {                                                                  │ 99..114
  4  │       uint256 c = a + b;                                                         │ 115..139
  5  │       if (c < a) return (false, 0);                                              │ 140..175
  6  │       return (true, c);                                                          │ 176..199
  7  │     }                                                                            │ 200..205
  8  │   }                                                                              │ 206..209
  9  │ }                                                                                │ 210..211

Errors: # 1 total
  - >
    Error: Expected AddressKeyword or AsciiStringLiteral or AssemblyKeyword or BoolKeyword or BreakKeyword or ByteKeyword or BytesKeyword or CloseBrace or ContinueKeyword or DecimalLiteral or DeleteKeyword or DoKeyword or EmitKeyword or FalseKeyword or FixedKeyword or ForKeyword or FunctionKeyword or HexLiteral or HexStringLiteral or Identifier or IfKeyword or IntKeyword or MappingKeyword or NewKeyword or OpenBrace or OpenBracket or OpenParen or PayableKeyword or ReturnKeyword or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword or WhileKeyword.
       ╭─[crates/solidity/testing/snapshots/cst_output/SourceUnit/SafeMath/input.sol:3:5]
       │
     3 │ ╭─▶     unchecked {
       ┆ ┆   
     8 │ ├─▶   }
       │ │         
       │ ╰───────── Error occurred here.
    ───╯

Tree:
  - SourceUnit: # 0..212 "library SafeMath {\n  function tryAdd(uint256 a, ui..."
      - (inner:) SourceUnitMembers: # 0..212 "library SafeMath {\n  function tryAdd(uint256 a, ui..."
          - (inner:) SourceUnitMember: # 0..212 "library SafeMath {\n  function tryAdd(uint256 a, ui..."
              - (inner:) LibraryDefinition: # 0..212 "library SafeMath {\n  function tryAdd(uint256 a, ui..."
                  - LibraryKeyword: "library" # 0..7
                  - Identifier: "SafeMath" # 8..16
                  - OpenBrace: "{" # 17..18
                  - (inner:) LibraryMembers: # 19..210 "  function tryAdd(uint256 a, uint256 b) internal p..."
                      - (inner:) ContractMember: # 19..210 "  function tryAdd(uint256 a, uint256 b) internal p..."
                          - (inner:) FunctionDefinition: # 19..210 "  function tryAdd(uint256 a, uint256 b) internal p..."
                              - FunctionKeyword: "function" # 21..29
                              - (inner:) FunctionName: # 29..36 " tryAdd"
                                  - Identifier: "tryAdd" # 30..36
                              - (inner:) ParametersDeclaration: # 36..58 "(uint256 a, uint256 b)"
                                  - OpenParen: "(" # 36..37
                                  - (inner:) Parameters: # 37..57 "uint256 a, uint256 b"
                                      - (inner:) Parameter: # 37..46 "uint256 a"
                                          - (inner:) TypeName: # 37..44 "uint256"
                                              - (inner:) ElementaryType: # 37..44 "uint256"
                                                  - UintKeyword: "uint256" # 37..44
                                          - Identifier: "a" # 45..46
                                      - Comma: "," # 46..47
                                      - (inner:) Parameter: # 47..57 " uint256 b"
                                          - (inner:) TypeName: # 47..55 " uint256"
                                              - (inner:) ElementaryType: # 47..55 " uint256"
                                                  - UintKeyword: "uint256" # 48..55
                                          - Identifier: "b" # 56..57
                                  - CloseParen: ")" # 57..58
                              - (inner:) FunctionAttributes: # 58..72 " internal pure"
                                  - (inner:) FunctionAttribute: # 58..67 " internal"
                                      - InternalKeyword: "internal" # 59..67
                                  - (inner:) FunctionAttribute: # 67..72 " pure"
                                      - PureKeyword: "pure" # 68..72
                              - (inner:) ReturnsDeclaration: # 72..96 " returns (bool, uint256)"
                                  - ReturnsKeyword: "returns" # 73..80
                                  - (inner:) ParametersDeclaration: # 80..96 " (bool, uint256)"
                                      - OpenParen: "(" # 81..82
                                      - (inner:) Parameters: # 82..95 "bool, uint256"
                                          - (inner:) Parameter: # 82..86 "bool"
                                              - (inner:) TypeName: # 82..86 "bool"
                                                  - (inner:) ElementaryType: # 82..86 "bool"
                                                      - BoolKeyword: "bool" # 82..86
                                          - Comma: "," # 86..87
                                          - (inner:) Parameter: # 87..95 " uint256"
                                              - (inner:) TypeName: # 87..95 " uint256"
                                                  - (inner:) ElementaryType: # 87..95 " uint256"
                                                      - UintKeyword: "uint256" # 88..95
                                      - CloseParen: ")" # 95..96
                              - (inner:) FunctionBody: # 96..210 " {\n    unchecked {\n      uint256 c = a + b;\n      ..."
                                  - (inner:) Block: # 96..210 " {\n    unchecked {\n      uint256 c = a + b;\n      ..."
                                      - OpenBrace: "{" # 97..98
                                      - SKIPPED: "unchecked {\n      uint256 c = a + b;\n      if (c <..." # 103..208
                                      - CloseBrace: "}" # 208..209
                  - CloseBrace: "}" # 210..211
