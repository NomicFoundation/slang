# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ function all() override(some.ident unexpected tokens, ISomeInterface, Other) public {               │ 0..85
  2  │   msg.sender.call{do: 1, arg: 1 }();                                                                │ 86..122
  3  │   msg.sender.call{, empty: 1, parse: 2 }();                                                         │ 123..166
  4  │   msg.sender.call{arg: 1, missing_expr: , no_semicolon, , }();                                      │ 167..229
  5  │   msg.sender.call{arg: 1 unexpected tokens, not: 2, recovered, yet: 3, }();                         │ 230..305
  6  │                                                                                                     │ 306..306
  7  │ }                                                                                                   │ 307..308
  8  │                                                                                                     │ 309..309
  9  │ function empty() override(some.ident, /* empty */, other.arg.here, and.here);                       │ 310..387
  10 │                                                                                                     │ 388..388
  11 │ function nested_lists() override(some.ident, next.do.that, other.while, next.one, final, ultimate); │ 389..488
  12 │ function nested_lists() override(some., next.arg, next.one, ultimate);                              │ 489..559

Errors: # 10 total
  - >
    Error: Expected CloseParen or Comma.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:1:36]
       │
     1 │ function all() override(some.ident unexpected tokens, ISomeInterface, Other) public {
       │                                    ────────────────────┬───────────────────  
       │                                                        ╰───────────────────── Error occurred here.
    ───╯
  - >
    Error: Expected Semicolon.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:2:18]
       │
     2 │   msg.sender.call{do: 1, arg: 1 }();
       │                  ─────────┬────────  
       │                           ╰────────── Error occurred here.
    ───╯
  - >
    Error: Expected Semicolon.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:3:18]
       │
     3 │   msg.sender.call{, empty: 1, parse: 2 }();
       │                  ────────────┬────────────  
       │                              ╰────────────── Error occurred here.
    ───╯
  - >
    Error: Expected Semicolon.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:4:18]
       │
     4 │   msg.sender.call{arg: 1, missing_expr: , no_semicolon, , }();
       │                  ──────────────────────┬─────────────────────  
       │                                        ╰─────────────────────── Error occurred here.
    ───╯
  - >
    Error: Expected Semicolon.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:5:18]
       │
     5 │   msg.sender.call{arg: 1 unexpected tokens, not: 2, recovered, yet: 3, }();
       │                  ────────────────────────────┬────────────────────────────  
       │                                              ╰────────────────────────────── Error occurred here.
    ───╯
  - >
    Error: Expected Identifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:9:50]
       │
     9 │ function empty() override(some.ident, /* empty */, other.arg.here, and.here);
       │                                                  ─────────────┬────────────  
       │                                                               ╰────────────── Error occurred here.
    ───╯
  - >
    Error: Expected Identifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:11:51]
        │
     11 │ function nested_lists() override(some.ident, next.do.that, other.while, next.one, final, ultimate);
        │                                                   ───┬───  
        │                                                      ╰───── Error occurred here.
    ────╯
  - >
    Error: Expected Identifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:11:66]
        │
     11 │ function nested_lists() override(some.ident, next.do.that, other.while, next.one, final, ultimate);
        │                                                                  ──┬──  
        │                                                                    ╰──── Error occurred here.
    ────╯
  - >
    Error: Expected Identifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:11:83]
        │
     11 │ function nested_lists() override(some.ident, next.do.that, other.while, next.one, final, ultimate);
        │                                                                                   ───────┬───────  
        │                                                                                          ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected Identifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:12:39]
        │
     12 │ function nested_lists() override(some., next.arg, next.one, ultimate);
        │                                       │ 
        │                                       ╰─ Error occurred here.
    ────╯

Tree:
  - ContractMembers: # 0..560 "function all() override(some.ident unexpected toke..."
      - (item) ContractMember: # 0..309 "function all() override(some.ident unexpected toke..."
          - (variant) FunctionDefinition: # 0..309 "function all() override(some.ident unexpected toke..."
              - (function_keyword) FunctionKeyword: "function" # 0..8
              - (name) FunctionName: # 8..12 " all"
                  - (variant) Identifier: "all" # 9..12
              - (parameters) ParametersDeclaration: # 12..14 "()"
                  - (open_paren) OpenParen: "(" # 12..13
                  - (close_paren) CloseParen: ")" # 13..14
              - (attributes) FunctionAttributes: # 14..83 " override(some.ident unexpected tokens, ISomeInter..."
                  - (item) FunctionAttribute: # 14..76 " override(some.ident unexpected tokens, ISomeInter..."
                      - (variant) OverrideSpecifier: # 14..76 " override(some.ident unexpected tokens, ISomeInter..."
                          - (override_keyword) OverrideKeyword: "override" # 15..23
                          - (overridden) OverridePathsDeclaration: # 23..76 "(some.ident unexpected tokens, ISomeInterface, Oth..."
                              - (open_paren) OpenParen: "(" # 23..24
                              - (paths) OverridePaths: # 24..34 "some.ident"
                                  - (item) IdentifierPath: # 24..34 "some.ident"
                                      - (item) Identifier: "some" # 24..28
                                      - (separator) Period: "." # 28..29
                                      - (item) Identifier: "ident" # 29..34
                              - SKIPPED: "unexpected tokens, ISomeInterface, Other" # 35..75
                              - (close_paren) CloseParen: ")" # 75..76
                  - (item) FunctionAttribute: # 76..83 " public"
                      - (variant) PublicKeyword: "public" # 77..83
              - (body) FunctionBody: # 83..309 " {\n  msg.sender.call{do: 1, arg: 1 }();\n  msg.send..."
                  - (variant) Block: # 83..309 " {\n  msg.sender.call{do: 1, arg: 1 }();\n  msg.send..."
                      - (open_brace) OpenBrace: "{" # 84..85
                      - (statements) Statements: # 86..306 "  msg.sender.call{do: 1, arg: 1 }();\n  msg.sender...."
                          - (item) Statement: # 86..123 "  msg.sender.call{do: 1, arg: 1 }();\n"
                              - (variant) ExpressionStatement: # 86..123 "  msg.sender.call{do: 1, arg: 1 }();\n"
                                  - (expression) Expression: # 86..103 "  msg.sender.call"
                                      - (variant) MemberAccessExpression: # 86..103 "  msg.sender.call"
                                          - (operand) Expression: # 86..98 "  msg.sender"
                                              - (variant) MemberAccessExpression: # 86..98 "  msg.sender"
                                                  - (operand) Expression: # 86..91 "  msg"
                                                      - (variant) Identifier: "msg" # 88..91
                                                  - (period) Period: "." # 91..92
                                                  - (member) MemberAccess: # 92..98 "sender"
                                                      - (variant) Identifier: "sender" # 92..98
                                          - (period) Period: "." # 98..99
                                          - (member) MemberAccess: # 99..103 "call"
                                              - (variant) Identifier: "call" # 99..103
                                  - SKIPPED: "{do: 1, arg: 1 }()" # 103..121
                                  - (semicolon) Semicolon: ";" # 121..122
                          - (item) Statement: # 123..167 "  msg.sender.call{, empty: 1, parse: 2 }();\n"
                              - (variant) ExpressionStatement: # 123..167 "  msg.sender.call{, empty: 1, parse: 2 }();\n"
                                  - (expression) Expression: # 123..140 "  msg.sender.call"
                                      - (variant) MemberAccessExpression: # 123..140 "  msg.sender.call"
                                          - (operand) Expression: # 123..135 "  msg.sender"
                                              - (variant) MemberAccessExpression: # 123..135 "  msg.sender"
                                                  - (operand) Expression: # 123..128 "  msg"
                                                      - (variant) Identifier: "msg" # 125..128
                                                  - (period) Period: "." # 128..129
                                                  - (member) MemberAccess: # 129..135 "sender"
                                                      - (variant) Identifier: "sender" # 129..135
                                          - (period) Period: "." # 135..136
                                          - (member) MemberAccess: # 136..140 "call"
                                              - (variant) Identifier: "call" # 136..140
                                  - SKIPPED: "{, empty: 1, parse: 2 }()" # 140..165
                                  - (semicolon) Semicolon: ";" # 165..166
                          - (item) Statement: # 167..230 "  msg.sender.call{arg: 1, missing_expr: , no_semic..."
                              - (variant) ExpressionStatement: # 167..230 "  msg.sender.call{arg: 1, missing_expr: , no_semic..."
                                  - (expression) Expression: # 167..184 "  msg.sender.call"
                                      - (variant) MemberAccessExpression: # 167..184 "  msg.sender.call"
                                          - (operand) Expression: # 167..179 "  msg.sender"
                                              - (variant) MemberAccessExpression: # 167..179 "  msg.sender"
                                                  - (operand) Expression: # 167..172 "  msg"
                                                      - (variant) Identifier: "msg" # 169..172
                                                  - (period) Period: "." # 172..173
                                                  - (member) MemberAccess: # 173..179 "sender"
                                                      - (variant) Identifier: "sender" # 173..179
                                          - (period) Period: "." # 179..180
                                          - (member) MemberAccess: # 180..184 "call"
                                              - (variant) Identifier: "call" # 180..184
                                  - SKIPPED: "{arg: 1, missing_expr: , no_semicolon, , }()" # 184..228
                                  - (semicolon) Semicolon: ";" # 228..229
                          - (item) Statement: # 230..306 "  msg.sender.call{arg: 1 unexpected tokens, not: 2..."
                              - (variant) ExpressionStatement: # 230..306 "  msg.sender.call{arg: 1 unexpected tokens, not: 2..."
                                  - (expression) Expression: # 230..247 "  msg.sender.call"
                                      - (variant) MemberAccessExpression: # 230..247 "  msg.sender.call"
                                          - (operand) Expression: # 230..242 "  msg.sender"
                                              - (variant) MemberAccessExpression: # 230..242 "  msg.sender"
                                                  - (operand) Expression: # 230..235 "  msg"
                                                      - (variant) Identifier: "msg" # 232..235
                                                  - (period) Period: "." # 235..236
                                                  - (member) MemberAccess: # 236..242 "sender"
                                                      - (variant) Identifier: "sender" # 236..242
                                          - (period) Period: "." # 242..243
                                          - (member) MemberAccess: # 243..247 "call"
                                              - (variant) Identifier: "call" # 243..247
                                  - SKIPPED: "{arg: 1 unexpected tokens, not: 2, recovered, yet:..." # 247..304
                                  - (semicolon) Semicolon: ";" # 304..305
                      - (close_brace) CloseBrace: "}" # 307..308
      - (item) ContractMember: # 309..388 "\nfunction empty() override(some.ident, /* empty */..."
          - (variant) FunctionDefinition: # 309..388 "\nfunction empty() override(some.ident, /* empty */..."
              - (function_keyword) FunctionKeyword: "function" # 310..318
              - (name) FunctionName: # 318..324 " empty"
                  - (variant) Identifier: "empty" # 319..324
              - (parameters) ParametersDeclaration: # 324..326 "()"
                  - (open_paren) OpenParen: "(" # 324..325
                  - (close_paren) CloseParen: ")" # 325..326
              - (attributes) FunctionAttributes: # 326..386 " override(some.ident, /* empty */, other.arg.here,..."
                  - (item) FunctionAttribute: # 326..386 " override(some.ident, /* empty */, other.arg.here,..."
                      - (variant) OverrideSpecifier: # 326..386 " override(some.ident, /* empty */, other.arg.here,..."
                          - (override_keyword) OverrideKeyword: "override" # 327..335
                          - (overridden) OverridePathsDeclaration: # 335..386 "(some.ident, /* empty */, other.arg.here, and.here..."
                              - (open_paren) OpenParen: "(" # 335..336
                              - (paths) OverridePaths: # 336..347 "some.ident,"
                                  - (item) IdentifierPath: # 336..346 "some.ident"
                                      - (item) Identifier: "some" # 336..340
                                      - (separator) Period: "." # 340..341
                                      - (item) Identifier: "ident" # 341..346
                                  - (separator) Comma: "," # 346..347
                              - LeadingTrivia: # 347..359 " /* empty */"
                                  - MultilineComment: "/* empty */" # 348..359
                              - SKIPPED: ", other.arg.here, and.here" # 359..385
                              - (close_paren) CloseParen: ")" # 385..386
              - (body) FunctionBody: # 386..388 ";\n"
                  - (variant) Semicolon: ";" # 386..387
      - (item) ContractMember: # 388..489 "\nfunction nested_lists() override(some.ident, next..."
          - (variant) FunctionDefinition: # 388..489 "\nfunction nested_lists() override(some.ident, next..."
              - (function_keyword) FunctionKeyword: "function" # 389..397
              - (name) FunctionName: # 397..410 " nested_lists"
                  - (variant) Identifier: "nested_lists" # 398..410
              - (parameters) ParametersDeclaration: # 410..412 "()"
                  - (open_paren) OpenParen: "(" # 410..411
                  - (close_paren) CloseParen: ")" # 411..412
              - (attributes) FunctionAttributes: # 412..487 " override(some.ident, next.do.that, other.while, n..."
                  - (item) FunctionAttribute: # 412..487 " override(some.ident, next.do.that, other.while, n..."
                      - (variant) OverrideSpecifier: # 412..487 " override(some.ident, next.do.that, other.while, n..."
                          - (override_keyword) OverrideKeyword: "override" # 413..421
                          - (overridden) OverridePathsDeclaration: # 421..487 "(some.ident, next.do.that, other.while, next.one, ..."
                              - (open_paren) OpenParen: "(" # 421..422
                              - (paths) OverridePaths: # 422..470 "some.ident, next.do.that, other.while, next.one,"
                                  - (item) IdentifierPath: # 422..432 "some.ident"
                                      - (item) Identifier: "some" # 422..426
                                      - (separator) Period: "." # 426..427
                                      - (item) Identifier: "ident" # 427..432
                                  - (separator) Comma: "," # 432..433
                                  - (item) IdentifierPath: # 433..439 " next."
                                      - (item) Identifier: "next" # 434..438
                                      - (separator) Period: "." # 438..439
                                  - SKIPPED: "do.that" # 439..446
                                  - Comma: "," # 446..447
                                  - (item) IdentifierPath: # 447..454 " other."
                                      - (item) Identifier: "other" # 448..453
                                      - (separator) Period: "." # 453..454
                                  - SKIPPED: "while" # 454..459
                                  - Comma: "," # 459..460
                                  - (item) IdentifierPath: # 460..469 " next.one"
                                      - (item) Identifier: "next" # 461..465
                                      - (separator) Period: "." # 465..466
                                      - (item) Identifier: "one" # 466..469
                                  - (separator) Comma: "," # 469..470
                              - SKIPPED: "final, ultimate" # 471..486
                              - (close_paren) CloseParen: ")" # 486..487
              - (body) FunctionBody: # 487..489 ";\n"
                  - (variant) Semicolon: ";" # 487..488
      - (item) ContractMember: # 489..560 "function nested_lists() override(some., next.arg, ..."
          - (variant) FunctionDefinition: # 489..560 "function nested_lists() override(some., next.arg, ..."
              - (function_keyword) FunctionKeyword: "function" # 489..497
              - (name) FunctionName: # 497..510 " nested_lists"
                  - (variant) Identifier: "nested_lists" # 498..510
              - (parameters) ParametersDeclaration: # 510..512 "()"
                  - (open_paren) OpenParen: "(" # 510..511
                  - (close_paren) CloseParen: ")" # 511..512
              - (attributes) FunctionAttributes: # 512..558 " override(some., next.arg, next.one, ultimate)"
                  - (item) FunctionAttribute: # 512..558 " override(some., next.arg, next.one, ultimate)"
                      - (variant) OverrideSpecifier: # 512..558 " override(some., next.arg, next.one, ultimate)"
                          - (override_keyword) OverrideKeyword: "override" # 513..521
                          - (overridden) OverridePathsDeclaration: # 521..558 "(some., next.arg, next.one, ultimate)"
                              - (open_paren) OpenParen: "(" # 521..522
                              - (paths) OverridePaths: # 522..557 "some., next.arg, next.one, ultimate"
                                  - (item) IdentifierPath: # 522..527 "some."
                                      - (item) Identifier: "some" # 522..526
                                      - (separator) Period: "." # 526..527
                                  - SKIPPED: "" # 527..527
                                  - Comma: "," # 527..528
                                  - (item) IdentifierPath: # 528..537 " next.arg"
                                      - (item) Identifier: "next" # 529..533
                                      - (separator) Period: "." # 533..534
                                      - (item) Identifier: "arg" # 534..537
                                  - (separator) Comma: "," # 537..538
                                  - (item) IdentifierPath: # 538..547 " next.one"
                                      - (item) Identifier: "next" # 539..543
                                      - (separator) Period: "." # 543..544
                                      - (item) Identifier: "one" # 544..547
                                  - (separator) Comma: "," # 547..548
                                  - (item) IdentifierPath: # 548..557 " ultimate"
                                      - (item) Identifier: "ultimate" # 549..557
                              - (close_paren) CloseParen: ")" # 557..558
              - (body) FunctionBody: # 558..560 ";\n"
                  - (variant) Semicolon: ";" # 558..559
