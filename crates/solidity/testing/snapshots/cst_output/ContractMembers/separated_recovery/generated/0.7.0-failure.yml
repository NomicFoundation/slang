# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ function all() override(some.ident unexpected tokens, ISomeInterface, Other) public {               │ 0..85
  2  │   msg.sender.call{do: 1, arg: 1 }();                                                                │ 86..122
  3  │   msg.sender.call{, empty: 1, parse: 2 }();                                                         │ 123..166
  4  │   msg.sender.call{arg: 1, missing_expr: , no_semicolon, , }();                                      │ 167..229
  5  │   msg.sender.call{arg: 1 unexpected tokens, not: 2, recovered, yet: 3, }();                         │ 230..305
  6  │                                                                                                     │ 306..306
  7  │ }                                                                                                   │ 307..308
  8  │                                                                                                     │ 309..309
  9  │ function empty() override(some.ident, /* empty */, other.arg.here, and.here);                       │ 310..387
  10 │                                                                                                     │ 388..388
  11 │ function nested_lists() override(some.ident, next.do.that, other.while, next.one, final, ultimate); │ 389..488
  12 │ function nested_lists() override(some., next.arg, next.one, ultimate);                              │ 489..559

Errors: # 12 total
  - >
    Error: Expected CloseParen or Comma.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:1:36]
       │
     1 │ function all() override(some.ident unexpected tokens, ISomeInterface, Other) public {
       │                                    ────────────────────┬───────────────────  
       │                                                        ╰───────────────────── Error occurred here.
    ───╯
  - >
    Error: Expected CloseBrace or Identifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:2:19]
       │
     2 │   msg.sender.call{do: 1, arg: 1 }();
       │                   ───────┬──────  
       │                          ╰──────── Error occurred here.
    ───╯
  - >
    Error: Expected CloseBrace or Identifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:3:19]
       │
     3 │   msg.sender.call{, empty: 1, parse: 2 }();
       │                   ──────────┬──────────  
       │                             ╰──────────── Error occurred here.
    ───╯
  - >
    Error: Expected AddressKeyword or AsciiStringLiteral or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or FalseKeyword or FixedKeyword or HexLiteral or HexStringLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or PayableKeyword or StringKeyword or TrueKeyword or TypeKeyword or UfixedKeyword or UintKeyword or UnicodeStringLiteral.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:4:40]
       │
     4 │   msg.sender.call{arg: 1, missing_expr: , no_semicolon, , }();
       │                                        ┬  
       │                                        ╰── Error occurred here.
    ───╯
  - >
    Error: Expected Colon.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:4:55]
       │
     4 │   msg.sender.call{arg: 1, missing_expr: , no_semicolon, , }();
       │                                                       │ 
       │                                                       ╰─ Error occurred here.
    ───╯
  - >
    Error: Expected Identifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:4:57]
       │
     4 │   msg.sender.call{arg: 1, missing_expr: , no_semicolon, , }();
       │                                                         ─┬  
       │                                                          ╰── Error occurred here.
    ───╯
  - >
    Error: Expected CloseBrace or Comma.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:5:26]
       │
     5 │   msg.sender.call{arg: 1 unexpected tokens, not: 2, recovered, yet: 3, }();
       │                          ───────────────────────┬──────────────────────  
       │                                                 ╰──────────────────────── Error occurred here.
    ───╯
  - >
    Error: Expected Identifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:9:50]
       │
     9 │ function empty() override(some.ident, /* empty */, other.arg.here, and.here);
       │                                                  ─────────────┬────────────  
       │                                                               ╰────────────── Error occurred here.
    ───╯
  - >
    Error: Expected Identifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:11:51]
        │
     11 │ function nested_lists() override(some.ident, next.do.that, other.while, next.one, final, ultimate);
        │                                                   ───┬───  
        │                                                      ╰───── Error occurred here.
    ────╯
  - >
    Error: Expected Identifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:11:66]
        │
     11 │ function nested_lists() override(some.ident, next.do.that, other.while, next.one, final, ultimate);
        │                                                                  ──┬──  
        │                                                                    ╰──── Error occurred here.
    ────╯
  - >
    Error: Expected Identifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:11:83]
        │
     11 │ function nested_lists() override(some.ident, next.do.that, other.while, next.one, final, ultimate);
        │                                                                                   ───────┬───────  
        │                                                                                          ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected Identifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/ContractMembers/separated_recovery/input.sol:12:39]
        │
     12 │ function nested_lists() override(some., next.arg, next.one, ultimate);
        │                                       │ 
        │                                       ╰─ Error occurred here.
    ────╯

Tree:
  - (TODO:) ContractMembers: # 0..560 "function all() override(some.ident unexpected toke..."
      - (inner:) ContractMember: # 0..309 "function all() override(some.ident unexpected toke..."
          - (inner:) FunctionDefinition: # 0..309 "function all() override(some.ident unexpected toke..."
              - (dummy:) FunctionKeyword: "function" # 0..8
              - (inner:) FunctionName: # 8..12 " all"
                  - (dummy:) Identifier: "all" # 9..12
              - (inner:) ParametersDeclaration: # 12..14 "()"
                  - (dummy:) OpenParen: "(" # 12..13
                  - (dummy:) CloseParen: ")" # 13..14
              - (inner:) FunctionAttributes: # 14..83 " override(some.ident unexpected tokens, ISomeInter..."
                  - (inner:) FunctionAttribute: # 14..76 " override(some.ident unexpected tokens, ISomeInter..."
                      - (inner:) OverrideSpecifier: # 14..76 " override(some.ident unexpected tokens, ISomeInter..."
                          - (dummy:) OverrideKeyword: "override" # 15..23
                          - (inner:) OverridePathsDeclaration: # 23..76 "(some.ident unexpected tokens, ISomeInterface, Oth..."
                              - (dummy:) OpenParen: "(" # 23..24
                              - (inner:) OverridePaths: # 24..34 "some.ident"
                                  - (inner:) IdentifierPath: # 24..34 "some.ident"
                                      - (dummy:) Identifier: "some" # 24..28
                                      - (dummy:) Period: "." # 28..29
                                      - (dummy:) Identifier: "ident" # 29..34
                              - (skipped:) SKIPPED: "unexpected tokens, ISomeInterface, Other" # 35..75
                              - (dummy:) CloseParen: ")" # 75..76
                  - (inner:) FunctionAttribute: # 76..83 " public"
                      - (dummy:) PublicKeyword: "public" # 77..83
              - (inner:) FunctionBody: # 83..309 " {\n  msg.sender.call{do: 1, arg: 1 }();\n  msg.send..."
                  - (inner:) Block: # 83..309 " {\n  msg.sender.call{do: 1, arg: 1 }();\n  msg.send..."
                      - (dummy:) OpenBrace: "{" # 84..85
                      - (inner:) Statements: # 86..306 "  msg.sender.call{do: 1, arg: 1 }();\n  msg.sender...."
                          - (inner:) Statement: # 86..123 "  msg.sender.call{do: 1, arg: 1 }();\n"
                              - (inner:) ExpressionStatement: # 86..123 "  msg.sender.call{do: 1, arg: 1 }();\n"
                                  - (inner:) Expression: # 86..121 "  msg.sender.call{do: 1, arg: 1 }()"
                                      - (operand:) FunctionCallExpression: # 86..121 "  msg.sender.call{do: 1, arg: 1 }()"
                                          - (left_operand:) Expression: # 86..103 "  msg.sender.call"
                                              - (operand:) MemberAccessExpression: # 86..103 "  msg.sender.call"
                                                  - (left_operand:) Expression: # 86..98 "  msg.sender"
                                                      - (operand:) MemberAccessExpression: # 86..98 "  msg.sender"
                                                          - (left_operand:) Expression: # 86..91 "  msg"
                                                              - (dummy:) Identifier: "msg" # 88..91
                                                          - (operator:) Period: "." # 91..92
                                                          - (operator:) MemberAccess: # 92..98 "sender"
                                                              - (dummy:) Identifier: "sender" # 92..98
                                                  - (operator:) Period: "." # 98..99
                                                  - (operator:) MemberAccess: # 99..103 "call"
                                                      - (dummy:) Identifier: "call" # 99..103
                                          - (operator:) FunctionCallOptions: # 103..119 "{do: 1, arg: 1 }"
                                              - (inner:) NamedArgumentGroups: # 103..119 "{do: 1, arg: 1 }"
                                                  - (inner:) NamedArgumentGroup: # 103..119 "{do: 1, arg: 1 }"
                                                      - (dummy:) OpenBrace: "{" # 103..104
                                                      - (skipped:) SKIPPED: "do: 1, arg: 1 " # 104..118
                                                      - (dummy:) CloseBrace: "}" # 118..119
                                          - (operator:) ArgumentsDeclaration: # 119..121 "()"
                                              - (inner:) PositionalArgumentsDeclaration: # 119..121 "()"
                                                  - (dummy:) OpenParen: "(" # 119..120
                                                  - (dummy:) CloseParen: ")" # 120..121
                                  - (dummy:) Semicolon: ";" # 121..122
                          - (inner:) Statement: # 123..167 "  msg.sender.call{, empty: 1, parse: 2 }();\n"
                              - (inner:) ExpressionStatement: # 123..167 "  msg.sender.call{, empty: 1, parse: 2 }();\n"
                                  - (inner:) Expression: # 123..165 "  msg.sender.call{, empty: 1, parse: 2 }()"
                                      - (operand:) FunctionCallExpression: # 123..165 "  msg.sender.call{, empty: 1, parse: 2 }()"
                                          - (left_operand:) Expression: # 123..140 "  msg.sender.call"
                                              - (operand:) MemberAccessExpression: # 123..140 "  msg.sender.call"
                                                  - (left_operand:) Expression: # 123..135 "  msg.sender"
                                                      - (operand:) MemberAccessExpression: # 123..135 "  msg.sender"
                                                          - (left_operand:) Expression: # 123..128 "  msg"
                                                              - (dummy:) Identifier: "msg" # 125..128
                                                          - (operator:) Period: "." # 128..129
                                                          - (operator:) MemberAccess: # 129..135 "sender"
                                                              - (dummy:) Identifier: "sender" # 129..135
                                                  - (operator:) Period: "." # 135..136
                                                  - (operator:) MemberAccess: # 136..140 "call"
                                                      - (dummy:) Identifier: "call" # 136..140
                                          - (operator:) FunctionCallOptions: # 140..163 "{, empty: 1, parse: 2 }"
                                              - (inner:) NamedArgumentGroups: # 140..163 "{, empty: 1, parse: 2 }"
                                                  - (inner:) NamedArgumentGroup: # 140..163 "{, empty: 1, parse: 2 }"
                                                      - (dummy:) OpenBrace: "{" # 140..141
                                                      - (skipped:) SKIPPED: ", empty: 1, parse: 2 " # 141..162
                                                      - (dummy:) CloseBrace: "}" # 162..163
                                          - (operator:) ArgumentsDeclaration: # 163..165 "()"
                                              - (inner:) PositionalArgumentsDeclaration: # 163..165 "()"
                                                  - (dummy:) OpenParen: "(" # 163..164
                                                  - (dummy:) CloseParen: ")" # 164..165
                                  - (dummy:) Semicolon: ";" # 165..166
                          - (inner:) Statement: # 167..230 "  msg.sender.call{arg: 1, missing_expr: , no_semic..."
                              - (inner:) ExpressionStatement: # 167..230 "  msg.sender.call{arg: 1, missing_expr: , no_semic..."
                                  - (inner:) Expression: # 167..228 "  msg.sender.call{arg: 1, missing_expr: , no_semic..."
                                      - (operand:) FunctionCallExpression: # 167..228 "  msg.sender.call{arg: 1, missing_expr: , no_semic..."
                                          - (left_operand:) Expression: # 167..184 "  msg.sender.call"
                                              - (operand:) MemberAccessExpression: # 167..184 "  msg.sender.call"
                                                  - (left_operand:) Expression: # 167..179 "  msg.sender"
                                                      - (operand:) MemberAccessExpression: # 167..179 "  msg.sender"
                                                          - (left_operand:) Expression: # 167..172 "  msg"
                                                              - (dummy:) Identifier: "msg" # 169..172
                                                          - (operator:) Period: "." # 172..173
                                                          - (operator:) MemberAccess: # 173..179 "sender"
                                                              - (dummy:) Identifier: "sender" # 173..179
                                                  - (operator:) Period: "." # 179..180
                                                  - (operator:) MemberAccess: # 180..184 "call"
                                                      - (dummy:) Identifier: "call" # 180..184
                                          - (operator:) FunctionCallOptions: # 184..226 "{arg: 1, missing_expr: , no_semicolon, , }"
                                              - (inner:) NamedArgumentGroups: # 184..226 "{arg: 1, missing_expr: , no_semicolon, , }"
                                                  - (inner:) NamedArgumentGroup: # 184..226 "{arg: 1, missing_expr: , no_semicolon, , }"
                                                      - (dummy:) OpenBrace: "{" # 184..185
                                                      - (inner:) NamedArguments: # 185..222 "arg: 1, missing_expr: , no_semicolon,"
                                                          - (inner:) NamedArgument: # 185..191 "arg: 1"
                                                              - (dummy:) Identifier: "arg" # 185..188
                                                              - (dummy:) Colon: ":" # 188..189
                                                              - (inner:) Expression: # 189..191 " 1"
                                                                  - (inner:) DecimalNumberExpression: # 189..191 " 1"
                                                                      - (dummy:) DecimalLiteral: "1" # 190..191
                                                          - (dummy:) Comma: "," # 191..192
                                                          - (inner:) NamedArgument: # 192..206 " missing_expr:"
                                                              - (dummy:) Identifier: "missing_expr" # 193..205
                                                              - (dummy:) Colon: ":" # 205..206
                                                          - (skipped:) SKIPPED: " " # 206..207
                                                          - (dummy:) Comma: "," # 207..208
                                                          - (inner:) NamedArgument: # 208..221 " no_semicolon"
                                                              - (dummy:) Identifier: "no_semicolon" # 209..221
                                                          - (skipped:) SKIPPED: "" # 221..221
                                                          - (dummy:) Comma: "," # 221..222
                                                      - (skipped:) SKIPPED: ", " # 223..225
                                                      - (dummy:) CloseBrace: "}" # 225..226
                                          - (operator:) ArgumentsDeclaration: # 226..228 "()"
                                              - (inner:) PositionalArgumentsDeclaration: # 226..228 "()"
                                                  - (dummy:) OpenParen: "(" # 226..227
                                                  - (dummy:) CloseParen: ")" # 227..228
                                  - (dummy:) Semicolon: ";" # 228..229
                          - (inner:) Statement: # 230..306 "  msg.sender.call{arg: 1 unexpected tokens, not: 2..."
                              - (inner:) ExpressionStatement: # 230..306 "  msg.sender.call{arg: 1 unexpected tokens, not: 2..."
                                  - (inner:) Expression: # 230..304 "  msg.sender.call{arg: 1 unexpected tokens, not: 2..."
                                      - (operand:) FunctionCallExpression: # 230..304 "  msg.sender.call{arg: 1 unexpected tokens, not: 2..."
                                          - (left_operand:) Expression: # 230..247 "  msg.sender.call"
                                              - (operand:) MemberAccessExpression: # 230..247 "  msg.sender.call"
                                                  - (left_operand:) Expression: # 230..242 "  msg.sender"
                                                      - (operand:) MemberAccessExpression: # 230..242 "  msg.sender"
                                                          - (left_operand:) Expression: # 230..235 "  msg"
                                                              - (dummy:) Identifier: "msg" # 232..235
                                                          - (operator:) Period: "." # 235..236
                                                          - (operator:) MemberAccess: # 236..242 "sender"
                                                              - (dummy:) Identifier: "sender" # 236..242
                                                  - (operator:) Period: "." # 242..243
                                                  - (operator:) MemberAccess: # 243..247 "call"
                                                      - (dummy:) Identifier: "call" # 243..247
                                          - (operator:) FunctionCallOptions: # 247..302 "{arg: 1 unexpected tokens, not: 2, recovered, yet:..."
                                              - (inner:) NamedArgumentGroups: # 247..302 "{arg: 1 unexpected tokens, not: 2, recovered, yet:..."
                                                  - (inner:) NamedArgumentGroup: # 247..302 "{arg: 1 unexpected tokens, not: 2, recovered, yet:..."
                                                      - (dummy:) OpenBrace: "{" # 247..248
                                                      - (inner:) NamedArguments: # 248..254 "arg: 1"
                                                          - (inner:) NamedArgument: # 248..254 "arg: 1"
                                                              - (dummy:) Identifier: "arg" # 248..251
                                                              - (dummy:) Colon: ":" # 251..252
                                                              - (inner:) Expression: # 252..254 " 1"
                                                                  - (inner:) DecimalNumberExpression: # 252..254 " 1"
                                                                      - (dummy:) DecimalLiteral: "1" # 253..254
                                                      - (skipped:) SKIPPED: "unexpected tokens, not: 2, recovered, yet: 3, " # 255..301
                                                      - (dummy:) CloseBrace: "}" # 301..302
                                          - (operator:) ArgumentsDeclaration: # 302..304 "()"
                                              - (inner:) PositionalArgumentsDeclaration: # 302..304 "()"
                                                  - (dummy:) OpenParen: "(" # 302..303
                                                  - (dummy:) CloseParen: ")" # 303..304
                                  - (dummy:) Semicolon: ";" # 304..305
                      - (dummy:) CloseBrace: "}" # 307..308
      - (inner:) ContractMember: # 309..388 "\nfunction empty() override(some.ident, /* empty */..."
          - (inner:) FunctionDefinition: # 309..388 "\nfunction empty() override(some.ident, /* empty */..."
              - (dummy:) FunctionKeyword: "function" # 310..318
              - (inner:) FunctionName: # 318..324 " empty"
                  - (dummy:) Identifier: "empty" # 319..324
              - (inner:) ParametersDeclaration: # 324..326 "()"
                  - (dummy:) OpenParen: "(" # 324..325
                  - (dummy:) CloseParen: ")" # 325..326
              - (inner:) FunctionAttributes: # 326..386 " override(some.ident, /* empty */, other.arg.here,..."
                  - (inner:) FunctionAttribute: # 326..386 " override(some.ident, /* empty */, other.arg.here,..."
                      - (inner:) OverrideSpecifier: # 326..386 " override(some.ident, /* empty */, other.arg.here,..."
                          - (dummy:) OverrideKeyword: "override" # 327..335
                          - (inner:) OverridePathsDeclaration: # 335..386 "(some.ident, /* empty */, other.arg.here, and.here..."
                              - (dummy:) OpenParen: "(" # 335..336
                              - (inner:) OverridePaths: # 336..347 "some.ident,"
                                  - (inner:) IdentifierPath: # 336..346 "some.ident"
                                      - (dummy:) Identifier: "some" # 336..340
                                      - (dummy:) Period: "." # 340..341
                                      - (dummy:) Identifier: "ident" # 341..346
                                  - (dummy:) Comma: "," # 346..347
                              - (inner:) LeadingTrivia: # 347..359 " /* empty */"
                                  - (dummy:) MultilineComment: "/* empty */" # 348..359
                              - (skipped:) SKIPPED: ", other.arg.here, and.here" # 359..385
                              - (dummy:) CloseParen: ")" # 385..386
              - (inner:) FunctionBody: # 386..388 ";\n"
                  - (dummy:) Semicolon: ";" # 386..387
      - (inner:) ContractMember: # 388..489 "\nfunction nested_lists() override(some.ident, next..."
          - (inner:) FunctionDefinition: # 388..489 "\nfunction nested_lists() override(some.ident, next..."
              - (dummy:) FunctionKeyword: "function" # 389..397
              - (inner:) FunctionName: # 397..410 " nested_lists"
                  - (dummy:) Identifier: "nested_lists" # 398..410
              - (inner:) ParametersDeclaration: # 410..412 "()"
                  - (dummy:) OpenParen: "(" # 410..411
                  - (dummy:) CloseParen: ")" # 411..412
              - (inner:) FunctionAttributes: # 412..487 " override(some.ident, next.do.that, other.while, n..."
                  - (inner:) FunctionAttribute: # 412..487 " override(some.ident, next.do.that, other.while, n..."
                      - (inner:) OverrideSpecifier: # 412..487 " override(some.ident, next.do.that, other.while, n..."
                          - (dummy:) OverrideKeyword: "override" # 413..421
                          - (inner:) OverridePathsDeclaration: # 421..487 "(some.ident, next.do.that, other.while, next.one, ..."
                              - (dummy:) OpenParen: "(" # 421..422
                              - (inner:) OverridePaths: # 422..470 "some.ident, next.do.that, other.while, next.one,"
                                  - (inner:) IdentifierPath: # 422..432 "some.ident"
                                      - (dummy:) Identifier: "some" # 422..426
                                      - (dummy:) Period: "." # 426..427
                                      - (dummy:) Identifier: "ident" # 427..432
                                  - (dummy:) Comma: "," # 432..433
                                  - (inner:) IdentifierPath: # 433..439 " next."
                                      - (dummy:) Identifier: "next" # 434..438
                                      - (dummy:) Period: "." # 438..439
                                  - (skipped:) SKIPPED: "do.that" # 439..446
                                  - (dummy:) Comma: "," # 446..447
                                  - (inner:) IdentifierPath: # 447..454 " other."
                                      - (dummy:) Identifier: "other" # 448..453
                                      - (dummy:) Period: "." # 453..454
                                  - (skipped:) SKIPPED: "while" # 454..459
                                  - (dummy:) Comma: "," # 459..460
                                  - (inner:) IdentifierPath: # 460..469 " next.one"
                                      - (dummy:) Identifier: "next" # 461..465
                                      - (dummy:) Period: "." # 465..466
                                      - (dummy:) Identifier: "one" # 466..469
                                  - (dummy:) Comma: "," # 469..470
                              - (skipped:) SKIPPED: "final, ultimate" # 471..486
                              - (dummy:) CloseParen: ")" # 486..487
              - (inner:) FunctionBody: # 487..489 ";\n"
                  - (dummy:) Semicolon: ";" # 487..488
      - (inner:) ContractMember: # 489..560 "function nested_lists() override(some., next.arg, ..."
          - (inner:) FunctionDefinition: # 489..560 "function nested_lists() override(some., next.arg, ..."
              - (dummy:) FunctionKeyword: "function" # 489..497
              - (inner:) FunctionName: # 497..510 " nested_lists"
                  - (dummy:) Identifier: "nested_lists" # 498..510
              - (inner:) ParametersDeclaration: # 510..512 "()"
                  - (dummy:) OpenParen: "(" # 510..511
                  - (dummy:) CloseParen: ")" # 511..512
              - (inner:) FunctionAttributes: # 512..558 " override(some., next.arg, next.one, ultimate)"
                  - (inner:) FunctionAttribute: # 512..558 " override(some., next.arg, next.one, ultimate)"
                      - (inner:) OverrideSpecifier: # 512..558 " override(some., next.arg, next.one, ultimate)"
                          - (dummy:) OverrideKeyword: "override" # 513..521
                          - (inner:) OverridePathsDeclaration: # 521..558 "(some., next.arg, next.one, ultimate)"
                              - (dummy:) OpenParen: "(" # 521..522
                              - (inner:) OverridePaths: # 522..557 "some., next.arg, next.one, ultimate"
                                  - (inner:) IdentifierPath: # 522..527 "some."
                                      - (dummy:) Identifier: "some" # 522..526
                                      - (dummy:) Period: "." # 526..527
                                  - (skipped:) SKIPPED: "" # 527..527
                                  - (dummy:) Comma: "," # 527..528
                                  - (inner:) IdentifierPath: # 528..537 " next.arg"
                                      - (dummy:) Identifier: "next" # 529..533
                                      - (dummy:) Period: "." # 533..534
                                      - (dummy:) Identifier: "arg" # 534..537
                                  - (dummy:) Comma: "," # 537..538
                                  - (inner:) IdentifierPath: # 538..547 " next.one"
                                      - (dummy:) Identifier: "next" # 539..543
                                      - (dummy:) Period: "." # 543..544
                                      - (dummy:) Identifier: "one" # 544..547
                                  - (dummy:) Comma: "," # 547..548
                                  - (inner:) IdentifierPath: # 548..557 " ultimate"
                                      - (dummy:) Identifier: "ultimate" # 549..557
                              - (dummy:) CloseParen: ")" # 557..558
              - (inner:) FunctionBody: # 558..560 ";\n"
                  - (dummy:) Semicolon: ";" # 558..559
