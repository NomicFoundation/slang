# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ (uint32 a, uint32 b) = abi.decode(data, (uint32, uint32));                       │ 0..58

Errors: []

Tree:
  - (TupleDeconstructionStatement): # "(uint32 a, uint32 b) = abi.decode(data, (uint32, u..." (0..58)
      - (open_paren꞉ OpenParen): "(" # (0..1)
      - (elements꞉ TupleDeconstructionElements): # "uint32 a, uint32 b" (1..19)
          - (item꞉ TupleDeconstructionElement) ► (member꞉ TupleMember) ► (variant꞉ TypedTupleMember): # "uint32 a" (1..9)
              - (type_name꞉ TypeName) ► (variant꞉ ElementaryType) ► (variant꞉ UintKeyword): "uint32" # (1..7)
              - (leading_trivia꞉ Whitespace): " " # (7..8)
              - (name꞉ Identifier): "a" # (8..9)
          - (separator꞉ Comma): "," # (9..10)
          - (item꞉ TupleDeconstructionElement) ► (member꞉ TupleMember) ► (variant꞉ TypedTupleMember): # " uint32 b" (10..19)
              - (type_name꞉ TypeName) ► (variant꞉ ElementaryType): # " uint32" (10..17)
                  - (leading_trivia꞉ Whitespace): " " # (10..11)
                  - (variant꞉ UintKeyword): "uint32" # (11..17)
              - (leading_trivia꞉ Whitespace): " " # (17..18)
              - (name꞉ Identifier): "b" # (18..19)
      - (close_paren꞉ CloseParen): ")" # (19..20)
      - (leading_trivia꞉ Whitespace): " " # (20..21)
      - (equal꞉ Equal): "=" # (21..22)
      - (expression꞉ Expression) ► (variant꞉ FunctionCallExpression): # " abi.decode(data, (uint32, uint32))" (22..57)
          - (operand꞉ Expression) ► (variant꞉ MemberAccessExpression): # " abi.decode" (22..33)
              - (operand꞉ Expression): # " abi" (22..26)
                  - (leading_trivia꞉ Whitespace): " " # (22..23)
                  - (variant꞉ Identifier): "abi" # (23..26)
              - (period꞉ Period): "." # (26..27)
              - (member꞉ MemberAccess) ► (variant꞉ Identifier): "decode" # (27..33)
          - (arguments꞉ ArgumentsDeclaration) ► (variant꞉ PositionalArgumentsDeclaration): # "(data, (uint32, uint32))" (33..57)
              - (open_paren꞉ OpenParen): "(" # (33..34)
              - (arguments꞉ PositionalArguments): # "data, (uint32, uint32)" (34..56)
                  - (item꞉ Expression) ► (variant꞉ Identifier): "data" # (34..38)
                  - (separator꞉ Comma): "," # (38..39)
                  - (item꞉ Expression) ► (variant꞉ TupleExpression): # " (uint32, uint32)" (39..56)
                      - (leading_trivia꞉ Whitespace): " " # (39..40)
                      - (open_paren꞉ OpenParen): "(" # (40..41)
                      - (items꞉ TupleValues): # "uint32, uint32" (41..55)
                          - (item꞉ TupleValue) ► (expression꞉ Expression) ► (variant꞉ ElementaryType) ► (variant꞉ UintKeyword): "uint32" # (41..47)
                          - (separator꞉ Comma): "," # (47..48)
                          - (item꞉ TupleValue) ► (expression꞉ Expression) ► (variant꞉ ElementaryType): # " uint32" (48..55)
                              - (leading_trivia꞉ Whitespace): " " # (48..49)
                              - (variant꞉ UintKeyword): "uint32" # (49..55)
                      - (close_paren꞉ CloseParen): ")" # (55..56)
              - (close_paren꞉ CloseParen): ")" # (56..57)
      - (semicolon꞉ Semicolon): ";" # (57..58)
