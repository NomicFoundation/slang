# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ (uint32 a, uint32[] memory b) = abi.decode(data, (uint32, uint32[]));            │ 0..69

Errors: []

Tree:
  - (TupleDeconstructionStatement): # "(uint32 a, uint32[] memory b) = abi.decode(data, (..." (0..69)
      - (open_paren꞉ OpenParen): "(" # (0..1)
      - (elements꞉ TupleDeconstructionElements): # "uint32 a, uint32[] memory b" (1..28)
          - (item꞉ TupleDeconstructionElement) ► (member꞉ TupleMember) ► (variant꞉ TypedTupleMember): # "uint32 a" (1..9)
              - (type_name꞉ TypeName) ► (variant꞉ ElementaryType) ► (variant꞉ UintKeyword): "uint32" # (1..7)
              - (LeadingTrivia) ► (Whitespace): " " # (7..8)
              - (name꞉ Identifier): "a" # (8..9)
          - (separator꞉ Comma): "," # (9..10)
          - (item꞉ TupleDeconstructionElement) ► (member꞉ TupleMember) ► (variant꞉ TypedTupleMember): # " uint32[] memory b" (10..28)
              - (type_name꞉ TypeName) ► (variant꞉ ArrayTypeName): # " uint32[]" (10..19)
                  - (operand꞉ TypeName) ► (variant꞉ ElementaryType): # " uint32" (10..17)
                      - (LeadingTrivia) ► (Whitespace): " " # (10..11)
                      - (variant꞉ UintKeyword): "uint32" # (11..17)
                  - (open_bracket꞉ OpenBracket): "[" # (17..18)
                  - (close_bracket꞉ CloseBracket): "]" # (18..19)
              - (storage_location꞉ StorageLocation): # " memory" (19..26)
                  - (LeadingTrivia) ► (Whitespace): " " # (19..20)
                  - (variant꞉ MemoryKeyword): "memory" # (20..26)
              - (LeadingTrivia) ► (Whitespace): " " # (26..27)
              - (name꞉ Identifier): "b" # (27..28)
      - (close_paren꞉ CloseParen): ")" # (28..29)
      - (LeadingTrivia) ► (Whitespace): " " # (29..30)
      - (equal꞉ Equal): "=" # (30..31)
      - (expression꞉ Expression) ► (variant꞉ FunctionCallExpression): # " abi.decode(data, (uint32, uint32[]))" (31..68)
          - (operand꞉ Expression) ► (variant꞉ MemberAccessExpression): # " abi.decode" (31..42)
              - (operand꞉ Expression): # " abi" (31..35)
                  - (LeadingTrivia) ► (Whitespace): " " # (31..32)
                  - (variant꞉ Identifier): "abi" # (32..35)
              - (period꞉ Period): "." # (35..36)
              - (member꞉ MemberAccess) ► (variant꞉ Identifier): "decode" # (36..42)
          - (arguments꞉ ArgumentsDeclaration) ► (variant꞉ PositionalArgumentsDeclaration): # "(data, (uint32, uint32[]))" (42..68)
              - (open_paren꞉ OpenParen): "(" # (42..43)
              - (arguments꞉ PositionalArguments): # "data, (uint32, uint32[])" (43..67)
                  - (item꞉ Expression) ► (variant꞉ Identifier): "data" # (43..47)
                  - (separator꞉ Comma): "," # (47..48)
                  - (item꞉ Expression) ► (variant꞉ TupleExpression): # " (uint32, uint32[])" (48..67)
                      - (LeadingTrivia) ► (Whitespace): " " # (48..49)
                      - (open_paren꞉ OpenParen): "(" # (49..50)
                      - (items꞉ TupleValues): # "uint32, uint32[]" (50..66)
                          - (item꞉ TupleValue) ► (expression꞉ Expression) ► (variant꞉ ElementaryType) ► (variant꞉ UintKeyword): "uint32" # (50..56)
                          - (separator꞉ Comma): "," # (56..57)
                          - (item꞉ TupleValue) ► (expression꞉ Expression) ► (variant꞉ IndexAccessExpression): # " uint32[]" (57..66)
                              - (operand꞉ Expression) ► (variant꞉ ElementaryType): # " uint32" (57..64)
                                  - (LeadingTrivia) ► (Whitespace): " " # (57..58)
                                  - (variant꞉ UintKeyword): "uint32" # (58..64)
                              - (open_bracket꞉ OpenBracket): "[" # (64..65)
                              - (close_bracket꞉ CloseBracket): "]" # (65..66)
                      - (close_paren꞉ CloseParen): ")" # (66..67)
              - (close_paren꞉ CloseParen): ")" # (67..68)
      - (semicolon꞉ Semicolon): ";" # (68..69)
