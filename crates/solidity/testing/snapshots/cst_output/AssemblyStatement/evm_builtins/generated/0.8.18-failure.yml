# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ assembly {                                                                       │ 0..10
  2  │ 	{ let add := 0 }                                                                │ 11..28
  3  │ 	{ let addmod := 0 }                                                             │ 29..49
  4  │ 	{ let address := 0 }                                                            │ 50..71
  5  │ 	{ let and := 0 }                                                                │ 72..89
  6  │ 	{ let balance := 0 }                                                            │ 90..111
  7  │ 	{ let basefee := 0 }                                                            │ 112..133
  8  │ 	{ let blockhash := 0 }                                                          │ 134..157
  9  │ 	{ let byte := 0 }                                                               │ 158..176
  10 │ 	{ let call := 0 }                                                               │ 177..195
  11 │ 	{ let callcode := 0 }                                                           │ 196..218
  12 │ 	{ let calldatacopy := 0 }                                                       │ 219..245
  13 │ 	{ let calldataload := 0 }                                                       │ 246..272
  14 │ 	{ let calldatasize := 0 }                                                       │ 273..299
  15 │ 	{ let caller := 0 }                                                             │ 300..320
  16 │ 	{ let callvalue := 0 }                                                          │ 321..344
  17 │ 	{ let chainid := 0 }                                                            │ 345..366
  18 │ 	{ let coinbase := 0 }                                                           │ 367..389
  19 │ 	{ let create := 0 }                                                             │ 390..410
  20 │ 	{ let create2 := 0 }                                                            │ 411..432
  21 │ 	{ let delegatecall := 0 }                                                       │ 433..459
  22 │ 	{ let difficulty := 0 }                                                         │ 460..484
  23 │ 	{ let div := 0 }                                                                │ 485..502
  24 │ 	{ let eq := 0 }                                                                 │ 503..519
  25 │ 	{ let exp := 0 }                                                                │ 520..537
  26 │ 	{ let extcodecopy := 0 }                                                        │ 538..563
  27 │ 	{ let extcodehash := 0 }                                                        │ 564..589
  28 │ 	{ let extcodesize := 0 }                                                        │ 590..615
  29 │ 	{ let gas := 0 }                                                                │ 616..633
  30 │ 	{ let gaslimit := 0 }                                                           │ 634..656
  31 │ 	{ let gasprice := 0 }                                                           │ 657..679
  32 │ 	{ let gt := 0 }                                                                 │ 680..696
  33 │ 	{ let invalid := 0 }                                                            │ 697..718
  34 │ 	{ let iszero := 0 }                                                             │ 719..739
  35 │ 	{ let keccak256 := 0 }                                                          │ 740..763
  36 │ 	{ let log0 := 0 }                                                               │ 764..782
  37 │ 	{ let log1 := 0 }                                                               │ 783..801
  38 │ 	{ let log2 := 0 }                                                               │ 802..820
  39 │ 	{ let log3 := 0 }                                                               │ 821..839
  40 │ 	{ let log4 := 0 }                                                               │ 840..858
  41 │ 	{ let lt := 0 }                                                                 │ 859..875
  42 │ 	{ let mload := 0 }                                                              │ 876..895
  43 │ 	{ let mod := 0 }                                                                │ 896..913
  44 │ 	{ let msize := 0 }                                                              │ 914..933
  45 │ 	{ let mstore := 0 }                                                             │ 934..954
  46 │ 	{ let mstore8 := 0 }                                                            │ 955..976
  47 │ 	{ let mul := 0 }                                                                │ 977..994
  48 │ 	{ let mulmod := 0 }                                                             │ 995..1015
  49 │ 	{ let not := 0 }                                                                │ 1016..1033
  50 │ 	{ let number := 0 }                                                             │ 1034..1054
  51 │ 	{ let or := 0 }                                                                 │ 1055..1071
  52 │ 	{ let origin := 0 }                                                             │ 1072..1092
  53 │ 	{ let pop := 0 }                                                                │ 1093..1110
  54 │ 	{ let return := 0 }                                                             │ 1111..1131
  55 │ 	{ let returndatacopy := 0 }                                                     │ 1132..1160
  56 │ 	{ let returndatasize := 0 }                                                     │ 1161..1189
  57 │ 	{ let revert := 0 }                                                             │ 1190..1210
  58 │ 	{ let sar := 0 }                                                                │ 1211..1228
  59 │ 	{ let sdiv := 0 }                                                               │ 1229..1247
  60 │ 	{ let selfbalance := 0 }                                                        │ 1248..1273
  61 │ 	{ let selfdestruct := 0 }                                                       │ 1274..1300
  62 │ 	{ let sgt := 0 }                                                                │ 1301..1318
  63 │ 	{ let shl := 0 }                                                                │ 1319..1336
  64 │ 	{ let shr := 0 }                                                                │ 1337..1354
  65 │ 	{ let signextend := 0 }                                                         │ 1355..1379
  66 │ 	{ let sload := 0 }                                                              │ 1380..1399
  67 │ 	{ let slt := 0 }                                                                │ 1400..1417
  68 │ 	{ let smod := 0 }                                                               │ 1418..1436
  69 │ 	{ let sstore := 0 }                                                             │ 1437..1457
  70 │ 	{ let staticcall := 0 }                                                         │ 1458..1482
  71 │ 	{ let stop := 0 }                                                               │ 1483..1501
  72 │ 	{ let sub := 0 }                                                                │ 1502..1519
  73 │ 	{ let timestamp := 0 }                                                          │ 1520..1543
  74 │ 	{ let xor := 0 }                                                                │ 1544..1561
  75 │ 	{ let sha3 := 0 }                                                               │ 1562..1580
  76 │ 	{ let prevrandao := 0 }                                                         │ 1581..1605
  77 │ 	let res := add()                                                                │ 1606..1623
  78 │ 	let res := addmod()                                                             │ 1624..1644
  79 │ 	let res := address()                                                            │ 1645..1666
  80 │ 	let res := and()                                                                │ 1667..1684
  81 │ 	let res := balance()                                                            │ 1685..1706
  82 │ 	let res := basefee()                                                            │ 1707..1728
  83 │ 	let res := blockhash()                                                          │ 1729..1752
  84 │ 	let res := byte()                                                               │ 1753..1771
  85 │ 	let res := call()                                                               │ 1772..1790
  86 │ 	let res := callcode()                                                           │ 1791..1813
  87 │ 	let res := calldatacopy()                                                       │ 1814..1840
  88 │ 	let res := calldataload()                                                       │ 1841..1867
  89 │ 	let res := calldatasize()                                                       │ 1868..1894
  90 │ 	let res := caller()                                                             │ 1895..1915
  91 │ 	let res := callvalue()                                                          │ 1916..1939
  92 │ 	let res := chainid()                                                            │ 1940..1961
  93 │ 	let res := coinbase()                                                           │ 1962..1984
  94 │ 	let res := create()                                                             │ 1985..2005
  95 │ 	let res := create2()                                                            │ 2006..2027
  96 │ 	let res := delegatecall()                                                       │ 2028..2054
  97 │ 	let res := difficulty()                                                         │ 2055..2079
  98 │ 	let res := div()                                                                │ 2080..2097
  99 │ 	let res := eq()                                                                 │ 2098..2114
  100 │ 	let res := exp()                                                                │ 2115..2132
  101 │ 	let res := extcodecopy()                                                        │ 2133..2158
  102 │ 	let res := extcodehash()                                                        │ 2159..2184
  103 │ 	let res := extcodesize()                                                        │ 2185..2210
  104 │ 	let res := gas()                                                                │ 2211..2228
  105 │ 	let res := gaslimit()                                                           │ 2229..2251
  106 │ 	let res := gasprice()                                                           │ 2252..2274
  107 │ 	let res := gt()                                                                 │ 2275..2291
  108 │ 	let res := invalid()                                                            │ 2292..2313
  109 │ 	let res := iszero()                                                             │ 2314..2334
  110 │ 	let res := keccak256()                                                          │ 2335..2358
  111 │ 	let res := log0()                                                               │ 2359..2377
  112 │ 	let res := log1()                                                               │ 2378..2396
  113 │ 	let res := log2()                                                               │ 2397..2415
  114 │ 	let res := log3()                                                               │ 2416..2434
  115 │ 	let res := log4()                                                               │ 2435..2453
  116 │ 	let res := lt()                                                                 │ 2454..2470
  117 │ 	let res := mload()                                                              │ 2471..2490
  118 │ 	let res := mod()                                                                │ 2491..2508
  119 │ 	let res := msize()                                                              │ 2509..2528
  120 │ 	let res := mstore()                                                             │ 2529..2549
  121 │ 	let res := mstore8()                                                            │ 2550..2571
  122 │ 	let res := mul()                                                                │ 2572..2589
  123 │ 	let res := mulmod()                                                             │ 2590..2610
  124 │ 	let res := not()                                                                │ 2611..2628
  125 │ 	let res := number()                                                             │ 2629..2649
  126 │ 	let res := or()                                                                 │ 2650..2666
  127 │ 	let res := origin()                                                             │ 2667..2687
  128 │ 	let res := pop()                                                                │ 2688..2705
  129 │ 	let res := return()                                                             │ 2706..2726
  130 │ 	let res := returndatacopy()                                                     │ 2727..2755
  131 │ 	let res := returndatasize()                                                     │ 2756..2784
  132 │ 	let res := revert()                                                             │ 2785..2805
  133 │ 	let res := sar()                                                                │ 2806..2823
  134 │ 	let res := sdiv()                                                               │ 2824..2842
  135 │ 	let res := selfbalance()                                                        │ 2843..2868
  136 │ 	let res := selfdestruct()                                                       │ 2869..2895
  137 │ 	let res := sgt()                                                                │ 2896..2913
  138 │ 	let res := shl()                                                                │ 2914..2931
  139 │ 	let res := shr()                                                                │ 2932..2949
  140 │ 	let res := signextend()                                                         │ 2950..2974
  141 │ 	let res := sload()                                                              │ 2975..2994
  142 │ 	let res := slt()                                                                │ 2995..3012
  143 │ 	let res := smod()                                                               │ 3013..3031
  144 │ 	let res := sstore()                                                             │ 3032..3052
  145 │ 	let res := staticcall()                                                         │ 3053..3077
  146 │ 	let res := stop()                                                               │ 3078..3096
  147 │ 	let res := sub()                                                                │ 3097..3114
  148 │ 	let res := timestamp()                                                          │ 3115..3138
  149 │ 	let res := xor()                                                                │ 3139..3156
  150 │ 	let res := sha3()                                                               │ 3157..3175
  151 │ 	let res := prevrandao()                                                         │ 3176..3200
  152 │ }                                                                                │ 3201..3202

Errors: # 75 total
  - >
    Error: Expected YulIdentifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:2:8]
       │
     2 │     { let add := 0 }
       │           ────┬────  
       │               ╰────── Error occurred here.
    ───╯
  - >
    Error: Expected YulIdentifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:3:8]
       │
     3 │     { let addmod := 0 }
       │           ──────┬─────  
       │                 ╰─────── Error occurred here.
    ───╯
  - >
    Error: Expected YulIdentifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:4:8]
       │
     4 │     { let address := 0 }
       │           ──────┬──────  
       │                 ╰──────── Error occurred here.
    ───╯
  - >
    Error: Expected YulIdentifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:5:8]
       │
     5 │     { let and := 0 }
       │           ────┬────  
       │               ╰────── Error occurred here.
    ───╯
  - >
    Error: Expected YulIdentifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:6:8]
       │
     6 │     { let balance := 0 }
       │           ──────┬──────  
       │                 ╰──────── Error occurred here.
    ───╯
  - >
    Error: Expected YulIdentifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:7:8]
       │
     7 │     { let basefee := 0 }
       │           ──────┬──────  
       │                 ╰──────── Error occurred here.
    ───╯
  - >
    Error: Expected YulIdentifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:8:8]
       │
     8 │     { let blockhash := 0 }
       │           ───────┬───────  
       │                  ╰───────── Error occurred here.
    ───╯
  - >
    Error: Expected YulIdentifier.
       ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:9:8]
       │
     9 │     { let byte := 0 }
       │           ─────┬────  
       │                ╰────── Error occurred here.
    ───╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:10:8]
        │
     10 │     { let call := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:11:8]
        │
     11 │     { let callcode := 0 }
        │           ───────┬──────  
        │                  ╰──────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:12:8]
        │
     12 │     { let calldatacopy := 0 }
        │           ─────────┬────────  
        │                    ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:13:8]
        │
     13 │     { let calldataload := 0 }
        │           ─────────┬────────  
        │                    ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:14:8]
        │
     14 │     { let calldatasize := 0 }
        │           ─────────┬────────  
        │                    ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:15:8]
        │
     15 │     { let caller := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:16:8]
        │
     16 │     { let callvalue := 0 }
        │           ───────┬───────  
        │                  ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:17:8]
        │
     17 │     { let chainid := 0 }
        │           ──────┬──────  
        │                 ╰──────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:18:8]
        │
     18 │     { let coinbase := 0 }
        │           ───────┬──────  
        │                  ╰──────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:19:8]
        │
     19 │     { let create := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:20:8]
        │
     20 │     { let create2 := 0 }
        │           ──────┬──────  
        │                 ╰──────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:21:8]
        │
     21 │     { let delegatecall := 0 }
        │           ─────────┬────────  
        │                    ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:22:8]
        │
     22 │     { let difficulty := 0 }
        │           ────────┬───────  
        │                   ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:23:8]
        │
     23 │     { let div := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:24:8]
        │
     24 │     { let eq := 0 }
        │           ────┬───  
        │               ╰───── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:25:8]
        │
     25 │     { let exp := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:26:8]
        │
     26 │     { let extcodecopy := 0 }
        │           ────────┬────────  
        │                   ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:27:8]
        │
     27 │     { let extcodehash := 0 }
        │           ────────┬────────  
        │                   ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:28:8]
        │
     28 │     { let extcodesize := 0 }
        │           ────────┬────────  
        │                   ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:29:8]
        │
     29 │     { let gas := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:30:8]
        │
     30 │     { let gaslimit := 0 }
        │           ───────┬──────  
        │                  ╰──────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:31:8]
        │
     31 │     { let gasprice := 0 }
        │           ───────┬──────  
        │                  ╰──────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:32:8]
        │
     32 │     { let gt := 0 }
        │           ────┬───  
        │               ╰───── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:33:8]
        │
     33 │     { let invalid := 0 }
        │           ──────┬──────  
        │                 ╰──────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:34:8]
        │
     34 │     { let iszero := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:35:8]
        │
     35 │     { let keccak256 := 0 }
        │           ───────┬───────  
        │                  ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:36:8]
        │
     36 │     { let log0 := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:37:8]
        │
     37 │     { let log1 := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:38:8]
        │
     38 │     { let log2 := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:39:8]
        │
     39 │     { let log3 := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:40:8]
        │
     40 │     { let log4 := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:41:8]
        │
     41 │     { let lt := 0 }
        │           ────┬───  
        │               ╰───── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:42:8]
        │
     42 │     { let mload := 0 }
        │           ─────┬─────  
        │                ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:43:8]
        │
     43 │     { let mod := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:44:8]
        │
     44 │     { let msize := 0 }
        │           ─────┬─────  
        │                ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:45:8]
        │
     45 │     { let mstore := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:46:8]
        │
     46 │     { let mstore8 := 0 }
        │           ──────┬──────  
        │                 ╰──────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:47:8]
        │
     47 │     { let mul := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:48:8]
        │
     48 │     { let mulmod := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:49:8]
        │
     49 │     { let not := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:50:8]
        │
     50 │     { let number := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:51:8]
        │
     51 │     { let or := 0 }
        │           ────┬───  
        │               ╰───── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:52:8]
        │
     52 │     { let origin := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:53:8]
        │
     53 │     { let pop := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:54:8]
        │
     54 │     { let return := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:55:8]
        │
     55 │     { let returndatacopy := 0 }
        │           ──────────┬─────────  
        │                     ╰─────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:56:8]
        │
     56 │     { let returndatasize := 0 }
        │           ──────────┬─────────  
        │                     ╰─────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:57:8]
        │
     57 │     { let revert := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:58:8]
        │
     58 │     { let sar := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:59:8]
        │
     59 │     { let sdiv := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:60:8]
        │
     60 │     { let selfbalance := 0 }
        │           ────────┬────────  
        │                   ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:61:8]
        │
     61 │     { let selfdestruct := 0 }
        │           ─────────┬────────  
        │                    ╰────────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:62:8]
        │
     62 │     { let sgt := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:63:8]
        │
     63 │     { let shl := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:64:8]
        │
     64 │     { let shr := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:65:8]
        │
     65 │     { let signextend := 0 }
        │           ────────┬───────  
        │                   ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:66:8]
        │
     66 │     { let sload := 0 }
        │           ─────┬─────  
        │                ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:67:8]
        │
     67 │     { let slt := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:68:8]
        │
     68 │     { let smod := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:69:8]
        │
     69 │     { let sstore := 0 }
        │           ──────┬─────  
        │                 ╰─────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:70:8]
        │
     70 │     { let staticcall := 0 }
        │           ────────┬───────  
        │                   ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:71:8]
        │
     71 │     { let stop := 0 }
        │           ─────┬────  
        │                ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:72:8]
        │
     72 │     { let sub := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:73:8]
        │
     73 │     { let timestamp := 0 }
        │           ───────┬───────  
        │                  ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:74:8]
        │
     74 │     { let xor := 0 }
        │           ────┬────  
        │               ╰────── Error occurred here.
    ────╯
  - >
    Error: Expected YulIdentifier.
        ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:76:8]
        │
     76 │     { let prevrandao := 0 }
        │           ────────┬───────  
        │                   ╰───────── Error occurred here.
    ────╯
  - >
    Error: Expected AsciiStringLiteral or CloseBrace or HexStringLiteral or YulAddKeyword or YulAddmodKeyword or YulAddressKeyword or YulAndKeyword or YulBalanceKeyword or YulBasefeeKeyword or YulBlockhashKeyword or YulByteKeyword or YulCallKeyword or YulCallcodeKeyword or YulCalldatacopyKeyword or YulCalldataloadKeyword or YulCalldatasizeKeyword or YulCallerKeyword or YulCallvalueKeyword or YulChainidKeyword or YulCoinbaseKeyword or YulCreate2Keyword or YulCreateKeyword or YulDecimalLiteral or YulDelegatecallKeyword or YulDivKeyword or YulEqKeyword or YulExpKeyword or YulExtcodecopyKeyword or YulExtcodehashKeyword or YulExtcodesizeKeyword or YulFalseKeyword or YulGasKeyword or YulGaslimitKeyword or YulGaspriceKeyword or YulGtKeyword or YulHexLiteral or YulIdentifier or YulInvalidKeyword or YulIszeroKeyword or YulKeccak256Keyword or YulLog0Keyword or YulLog1Keyword or YulLog2Keyword or YulLog3Keyword or YulLog4Keyword or YulLtKeyword or YulMloadKeyword or YulModKeyword or YulMsizeKeyword or YulMstore8Keyword or YulMstoreKeyword or YulMulKeyword or YulMulmodKeyword or YulNotKeyword or YulNumberKeyword or YulOrKeyword or YulOriginKeyword or YulPopKeyword or YulPrevrandaoKeyword or YulReturnKeyword or YulReturndatacopyKeyword or YulReturndatasizeKeyword or YulRevertKeyword or YulSarKeyword or YulSdivKeyword or YulSelfbalanceKeyword or YulSelfdestructKeyword or YulSgtKeyword or YulShlKeyword or YulShrKeyword or YulSignextendKeyword or YulSloadKeyword or YulSltKeyword or YulSmodKeyword or YulSstoreKeyword or YulStaticcallKeyword or YulStopKeyword or YulSubKeyword or YulTimestampKeyword or YulTrueKeyword or YulXorKeyword.
         ╭─[crates/solidity/testing/snapshots/cst_output/AssemblyStatement/evm_builtins/input.sol:97:2]
         │
      97 │ ╭─▶     let res := difficulty()
         ┆ ┆   
     151 │ ├─▶     let res := prevrandao()
         │ │                                 
         │ ╰───────────────────────────────── Error occurred here.
    ─────╯

Tree:
  - (AssemblyStatement): # "assembly {\n\t{ let add := 0 }\n\t{ let addmod := 0 }\n..." (0..3203)
      - (assembly_keyword꞉ AssemblyKeyword): "assembly" # (0..8)
      - (body꞉ YulBlock): # " {\n\t{ let add := 0 }\n\t{ let addmod := 0 }\n\t{ let a..." (8..3203)
          - (LeadingTrivia) ► (Whitespace): " " # (8..9)
          - (open_brace꞉ OpenBrace): "{" # (9..10)
          - (TrailingTrivia) ► (EndOfLine): "\n" # (10..11)
          - (statements꞉ YulStatements): # "\t{ let add := 0 }\n\t{ let addmod := 0 }\n\t{ let addr..." (11..2055)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let add := 0 }\n" (11..29)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (11..12)
                  - (open_brace꞉ OpenBrace): "{" # (12..13)
                  - (statements꞉ YulStatements): # " let" (13..17)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (13..17)
                          - (LeadingTrivia) ► (Whitespace): " " # (13..14)
                          - (let_keyword꞉ YulLetKeyword): "let" # (14..17)
                  - (LeadingTrivia) ► (Whitespace): " " # (17..18)
                  - (SKIPPED): "add := 0 " # (18..27)
                  - (close_brace꞉ CloseBrace): "}" # (27..28)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (28..29)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let addmod := 0 }\n" (29..50)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (29..30)
                  - (open_brace꞉ OpenBrace): "{" # (30..31)
                  - (statements꞉ YulStatements): # " let" (31..35)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (31..35)
                          - (LeadingTrivia) ► (Whitespace): " " # (31..32)
                          - (let_keyword꞉ YulLetKeyword): "let" # (32..35)
                  - (LeadingTrivia) ► (Whitespace): " " # (35..36)
                  - (SKIPPED): "addmod := 0 " # (36..48)
                  - (close_brace꞉ CloseBrace): "}" # (48..49)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (49..50)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let address := 0 }\n" (50..72)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (50..51)
                  - (open_brace꞉ OpenBrace): "{" # (51..52)
                  - (statements꞉ YulStatements): # " let" (52..56)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (52..56)
                          - (LeadingTrivia) ► (Whitespace): " " # (52..53)
                          - (let_keyword꞉ YulLetKeyword): "let" # (53..56)
                  - (LeadingTrivia) ► (Whitespace): " " # (56..57)
                  - (SKIPPED): "address := 0 " # (57..70)
                  - (close_brace꞉ CloseBrace): "}" # (70..71)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (71..72)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let and := 0 }\n" (72..90)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (72..73)
                  - (open_brace꞉ OpenBrace): "{" # (73..74)
                  - (statements꞉ YulStatements): # " let" (74..78)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (74..78)
                          - (LeadingTrivia) ► (Whitespace): " " # (74..75)
                          - (let_keyword꞉ YulLetKeyword): "let" # (75..78)
                  - (LeadingTrivia) ► (Whitespace): " " # (78..79)
                  - (SKIPPED): "and := 0 " # (79..88)
                  - (close_brace꞉ CloseBrace): "}" # (88..89)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (89..90)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let balance := 0 }\n" (90..112)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (90..91)
                  - (open_brace꞉ OpenBrace): "{" # (91..92)
                  - (statements꞉ YulStatements): # " let" (92..96)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (92..96)
                          - (LeadingTrivia) ► (Whitespace): " " # (92..93)
                          - (let_keyword꞉ YulLetKeyword): "let" # (93..96)
                  - (LeadingTrivia) ► (Whitespace): " " # (96..97)
                  - (SKIPPED): "balance := 0 " # (97..110)
                  - (close_brace꞉ CloseBrace): "}" # (110..111)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (111..112)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let basefee := 0 }\n" (112..134)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (112..113)
                  - (open_brace꞉ OpenBrace): "{" # (113..114)
                  - (statements꞉ YulStatements): # " let" (114..118)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (114..118)
                          - (LeadingTrivia) ► (Whitespace): " " # (114..115)
                          - (let_keyword꞉ YulLetKeyword): "let" # (115..118)
                  - (LeadingTrivia) ► (Whitespace): " " # (118..119)
                  - (SKIPPED): "basefee := 0 " # (119..132)
                  - (close_brace꞉ CloseBrace): "}" # (132..133)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (133..134)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let blockhash := 0 }\n" (134..158)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (134..135)
                  - (open_brace꞉ OpenBrace): "{" # (135..136)
                  - (statements꞉ YulStatements): # " let" (136..140)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (136..140)
                          - (LeadingTrivia) ► (Whitespace): " " # (136..137)
                          - (let_keyword꞉ YulLetKeyword): "let" # (137..140)
                  - (LeadingTrivia) ► (Whitespace): " " # (140..141)
                  - (SKIPPED): "blockhash := 0 " # (141..156)
                  - (close_brace꞉ CloseBrace): "}" # (156..157)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (157..158)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let byte := 0 }\n" (158..177)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (158..159)
                  - (open_brace꞉ OpenBrace): "{" # (159..160)
                  - (statements꞉ YulStatements): # " let" (160..164)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (160..164)
                          - (LeadingTrivia) ► (Whitespace): " " # (160..161)
                          - (let_keyword꞉ YulLetKeyword): "let" # (161..164)
                  - (LeadingTrivia) ► (Whitespace): " " # (164..165)
                  - (SKIPPED): "byte := 0 " # (165..175)
                  - (close_brace꞉ CloseBrace): "}" # (175..176)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (176..177)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let call := 0 }\n" (177..196)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (177..178)
                  - (open_brace꞉ OpenBrace): "{" # (178..179)
                  - (statements꞉ YulStatements): # " let" (179..183)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (179..183)
                          - (LeadingTrivia) ► (Whitespace): " " # (179..180)
                          - (let_keyword꞉ YulLetKeyword): "let" # (180..183)
                  - (LeadingTrivia) ► (Whitespace): " " # (183..184)
                  - (SKIPPED): "call := 0 " # (184..194)
                  - (close_brace꞉ CloseBrace): "}" # (194..195)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (195..196)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let callcode := 0 }\n" (196..219)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (196..197)
                  - (open_brace꞉ OpenBrace): "{" # (197..198)
                  - (statements꞉ YulStatements): # " let" (198..202)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (198..202)
                          - (LeadingTrivia) ► (Whitespace): " " # (198..199)
                          - (let_keyword꞉ YulLetKeyword): "let" # (199..202)
                  - (LeadingTrivia) ► (Whitespace): " " # (202..203)
                  - (SKIPPED): "callcode := 0 " # (203..217)
                  - (close_brace꞉ CloseBrace): "}" # (217..218)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (218..219)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let calldatacopy := 0 }\n" (219..246)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (219..220)
                  - (open_brace꞉ OpenBrace): "{" # (220..221)
                  - (statements꞉ YulStatements): # " let" (221..225)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (221..225)
                          - (LeadingTrivia) ► (Whitespace): " " # (221..222)
                          - (let_keyword꞉ YulLetKeyword): "let" # (222..225)
                  - (LeadingTrivia) ► (Whitespace): " " # (225..226)
                  - (SKIPPED): "calldatacopy := 0 " # (226..244)
                  - (close_brace꞉ CloseBrace): "}" # (244..245)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (245..246)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let calldataload := 0 }\n" (246..273)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (246..247)
                  - (open_brace꞉ OpenBrace): "{" # (247..248)
                  - (statements꞉ YulStatements): # " let" (248..252)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (248..252)
                          - (LeadingTrivia) ► (Whitespace): " " # (248..249)
                          - (let_keyword꞉ YulLetKeyword): "let" # (249..252)
                  - (LeadingTrivia) ► (Whitespace): " " # (252..253)
                  - (SKIPPED): "calldataload := 0 " # (253..271)
                  - (close_brace꞉ CloseBrace): "}" # (271..272)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (272..273)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let calldatasize := 0 }\n" (273..300)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (273..274)
                  - (open_brace꞉ OpenBrace): "{" # (274..275)
                  - (statements꞉ YulStatements): # " let" (275..279)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (275..279)
                          - (LeadingTrivia) ► (Whitespace): " " # (275..276)
                          - (let_keyword꞉ YulLetKeyword): "let" # (276..279)
                  - (LeadingTrivia) ► (Whitespace): " " # (279..280)
                  - (SKIPPED): "calldatasize := 0 " # (280..298)
                  - (close_brace꞉ CloseBrace): "}" # (298..299)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (299..300)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let caller := 0 }\n" (300..321)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (300..301)
                  - (open_brace꞉ OpenBrace): "{" # (301..302)
                  - (statements꞉ YulStatements): # " let" (302..306)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (302..306)
                          - (LeadingTrivia) ► (Whitespace): " " # (302..303)
                          - (let_keyword꞉ YulLetKeyword): "let" # (303..306)
                  - (LeadingTrivia) ► (Whitespace): " " # (306..307)
                  - (SKIPPED): "caller := 0 " # (307..319)
                  - (close_brace꞉ CloseBrace): "}" # (319..320)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (320..321)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let callvalue := 0 }\n" (321..345)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (321..322)
                  - (open_brace꞉ OpenBrace): "{" # (322..323)
                  - (statements꞉ YulStatements): # " let" (323..327)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (323..327)
                          - (LeadingTrivia) ► (Whitespace): " " # (323..324)
                          - (let_keyword꞉ YulLetKeyword): "let" # (324..327)
                  - (LeadingTrivia) ► (Whitespace): " " # (327..328)
                  - (SKIPPED): "callvalue := 0 " # (328..343)
                  - (close_brace꞉ CloseBrace): "}" # (343..344)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (344..345)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let chainid := 0 }\n" (345..367)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (345..346)
                  - (open_brace꞉ OpenBrace): "{" # (346..347)
                  - (statements꞉ YulStatements): # " let" (347..351)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (347..351)
                          - (LeadingTrivia) ► (Whitespace): " " # (347..348)
                          - (let_keyword꞉ YulLetKeyword): "let" # (348..351)
                  - (LeadingTrivia) ► (Whitespace): " " # (351..352)
                  - (SKIPPED): "chainid := 0 " # (352..365)
                  - (close_brace꞉ CloseBrace): "}" # (365..366)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (366..367)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let coinbase := 0 }\n" (367..390)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (367..368)
                  - (open_brace꞉ OpenBrace): "{" # (368..369)
                  - (statements꞉ YulStatements): # " let" (369..373)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (369..373)
                          - (LeadingTrivia) ► (Whitespace): " " # (369..370)
                          - (let_keyword꞉ YulLetKeyword): "let" # (370..373)
                  - (LeadingTrivia) ► (Whitespace): " " # (373..374)
                  - (SKIPPED): "coinbase := 0 " # (374..388)
                  - (close_brace꞉ CloseBrace): "}" # (388..389)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (389..390)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let create := 0 }\n" (390..411)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (390..391)
                  - (open_brace꞉ OpenBrace): "{" # (391..392)
                  - (statements꞉ YulStatements): # " let" (392..396)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (392..396)
                          - (LeadingTrivia) ► (Whitespace): " " # (392..393)
                          - (let_keyword꞉ YulLetKeyword): "let" # (393..396)
                  - (LeadingTrivia) ► (Whitespace): " " # (396..397)
                  - (SKIPPED): "create := 0 " # (397..409)
                  - (close_brace꞉ CloseBrace): "}" # (409..410)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (410..411)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let create2 := 0 }\n" (411..433)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (411..412)
                  - (open_brace꞉ OpenBrace): "{" # (412..413)
                  - (statements꞉ YulStatements): # " let" (413..417)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (413..417)
                          - (LeadingTrivia) ► (Whitespace): " " # (413..414)
                          - (let_keyword꞉ YulLetKeyword): "let" # (414..417)
                  - (LeadingTrivia) ► (Whitespace): " " # (417..418)
                  - (SKIPPED): "create2 := 0 " # (418..431)
                  - (close_brace꞉ CloseBrace): "}" # (431..432)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (432..433)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let delegatecall := 0 }\n" (433..460)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (433..434)
                  - (open_brace꞉ OpenBrace): "{" # (434..435)
                  - (statements꞉ YulStatements): # " let" (435..439)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (435..439)
                          - (LeadingTrivia) ► (Whitespace): " " # (435..436)
                          - (let_keyword꞉ YulLetKeyword): "let" # (436..439)
                  - (LeadingTrivia) ► (Whitespace): " " # (439..440)
                  - (SKIPPED): "delegatecall := 0 " # (440..458)
                  - (close_brace꞉ CloseBrace): "}" # (458..459)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (459..460)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let difficulty := 0 }\n" (460..485)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (460..461)
                  - (open_brace꞉ OpenBrace): "{" # (461..462)
                  - (statements꞉ YulStatements): # " let" (462..466)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (462..466)
                          - (LeadingTrivia) ► (Whitespace): " " # (462..463)
                          - (let_keyword꞉ YulLetKeyword): "let" # (463..466)
                  - (LeadingTrivia) ► (Whitespace): " " # (466..467)
                  - (SKIPPED): "difficulty := 0 " # (467..483)
                  - (close_brace꞉ CloseBrace): "}" # (483..484)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (484..485)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let div := 0 }\n" (485..503)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (485..486)
                  - (open_brace꞉ OpenBrace): "{" # (486..487)
                  - (statements꞉ YulStatements): # " let" (487..491)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (487..491)
                          - (LeadingTrivia) ► (Whitespace): " " # (487..488)
                          - (let_keyword꞉ YulLetKeyword): "let" # (488..491)
                  - (LeadingTrivia) ► (Whitespace): " " # (491..492)
                  - (SKIPPED): "div := 0 " # (492..501)
                  - (close_brace꞉ CloseBrace): "}" # (501..502)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (502..503)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let eq := 0 }\n" (503..520)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (503..504)
                  - (open_brace꞉ OpenBrace): "{" # (504..505)
                  - (statements꞉ YulStatements): # " let" (505..509)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (505..509)
                          - (LeadingTrivia) ► (Whitespace): " " # (505..506)
                          - (let_keyword꞉ YulLetKeyword): "let" # (506..509)
                  - (LeadingTrivia) ► (Whitespace): " " # (509..510)
                  - (SKIPPED): "eq := 0 " # (510..518)
                  - (close_brace꞉ CloseBrace): "}" # (518..519)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (519..520)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let exp := 0 }\n" (520..538)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (520..521)
                  - (open_brace꞉ OpenBrace): "{" # (521..522)
                  - (statements꞉ YulStatements): # " let" (522..526)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (522..526)
                          - (LeadingTrivia) ► (Whitespace): " " # (522..523)
                          - (let_keyword꞉ YulLetKeyword): "let" # (523..526)
                  - (LeadingTrivia) ► (Whitespace): " " # (526..527)
                  - (SKIPPED): "exp := 0 " # (527..536)
                  - (close_brace꞉ CloseBrace): "}" # (536..537)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (537..538)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let extcodecopy := 0 }\n" (538..564)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (538..539)
                  - (open_brace꞉ OpenBrace): "{" # (539..540)
                  - (statements꞉ YulStatements): # " let" (540..544)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (540..544)
                          - (LeadingTrivia) ► (Whitespace): " " # (540..541)
                          - (let_keyword꞉ YulLetKeyword): "let" # (541..544)
                  - (LeadingTrivia) ► (Whitespace): " " # (544..545)
                  - (SKIPPED): "extcodecopy := 0 " # (545..562)
                  - (close_brace꞉ CloseBrace): "}" # (562..563)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (563..564)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let extcodehash := 0 }\n" (564..590)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (564..565)
                  - (open_brace꞉ OpenBrace): "{" # (565..566)
                  - (statements꞉ YulStatements): # " let" (566..570)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (566..570)
                          - (LeadingTrivia) ► (Whitespace): " " # (566..567)
                          - (let_keyword꞉ YulLetKeyword): "let" # (567..570)
                  - (LeadingTrivia) ► (Whitespace): " " # (570..571)
                  - (SKIPPED): "extcodehash := 0 " # (571..588)
                  - (close_brace꞉ CloseBrace): "}" # (588..589)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (589..590)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let extcodesize := 0 }\n" (590..616)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (590..591)
                  - (open_brace꞉ OpenBrace): "{" # (591..592)
                  - (statements꞉ YulStatements): # " let" (592..596)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (592..596)
                          - (LeadingTrivia) ► (Whitespace): " " # (592..593)
                          - (let_keyword꞉ YulLetKeyword): "let" # (593..596)
                  - (LeadingTrivia) ► (Whitespace): " " # (596..597)
                  - (SKIPPED): "extcodesize := 0 " # (597..614)
                  - (close_brace꞉ CloseBrace): "}" # (614..615)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (615..616)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let gas := 0 }\n" (616..634)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (616..617)
                  - (open_brace꞉ OpenBrace): "{" # (617..618)
                  - (statements꞉ YulStatements): # " let" (618..622)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (618..622)
                          - (LeadingTrivia) ► (Whitespace): " " # (618..619)
                          - (let_keyword꞉ YulLetKeyword): "let" # (619..622)
                  - (LeadingTrivia) ► (Whitespace): " " # (622..623)
                  - (SKIPPED): "gas := 0 " # (623..632)
                  - (close_brace꞉ CloseBrace): "}" # (632..633)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (633..634)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let gaslimit := 0 }\n" (634..657)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (634..635)
                  - (open_brace꞉ OpenBrace): "{" # (635..636)
                  - (statements꞉ YulStatements): # " let" (636..640)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (636..640)
                          - (LeadingTrivia) ► (Whitespace): " " # (636..637)
                          - (let_keyword꞉ YulLetKeyword): "let" # (637..640)
                  - (LeadingTrivia) ► (Whitespace): " " # (640..641)
                  - (SKIPPED): "gaslimit := 0 " # (641..655)
                  - (close_brace꞉ CloseBrace): "}" # (655..656)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (656..657)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let gasprice := 0 }\n" (657..680)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (657..658)
                  - (open_brace꞉ OpenBrace): "{" # (658..659)
                  - (statements꞉ YulStatements): # " let" (659..663)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (659..663)
                          - (LeadingTrivia) ► (Whitespace): " " # (659..660)
                          - (let_keyword꞉ YulLetKeyword): "let" # (660..663)
                  - (LeadingTrivia) ► (Whitespace): " " # (663..664)
                  - (SKIPPED): "gasprice := 0 " # (664..678)
                  - (close_brace꞉ CloseBrace): "}" # (678..679)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (679..680)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let gt := 0 }\n" (680..697)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (680..681)
                  - (open_brace꞉ OpenBrace): "{" # (681..682)
                  - (statements꞉ YulStatements): # " let" (682..686)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (682..686)
                          - (LeadingTrivia) ► (Whitespace): " " # (682..683)
                          - (let_keyword꞉ YulLetKeyword): "let" # (683..686)
                  - (LeadingTrivia) ► (Whitespace): " " # (686..687)
                  - (SKIPPED): "gt := 0 " # (687..695)
                  - (close_brace꞉ CloseBrace): "}" # (695..696)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (696..697)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let invalid := 0 }\n" (697..719)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (697..698)
                  - (open_brace꞉ OpenBrace): "{" # (698..699)
                  - (statements꞉ YulStatements): # " let" (699..703)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (699..703)
                          - (LeadingTrivia) ► (Whitespace): " " # (699..700)
                          - (let_keyword꞉ YulLetKeyword): "let" # (700..703)
                  - (LeadingTrivia) ► (Whitespace): " " # (703..704)
                  - (SKIPPED): "invalid := 0 " # (704..717)
                  - (close_brace꞉ CloseBrace): "}" # (717..718)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (718..719)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let iszero := 0 }\n" (719..740)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (719..720)
                  - (open_brace꞉ OpenBrace): "{" # (720..721)
                  - (statements꞉ YulStatements): # " let" (721..725)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (721..725)
                          - (LeadingTrivia) ► (Whitespace): " " # (721..722)
                          - (let_keyword꞉ YulLetKeyword): "let" # (722..725)
                  - (LeadingTrivia) ► (Whitespace): " " # (725..726)
                  - (SKIPPED): "iszero := 0 " # (726..738)
                  - (close_brace꞉ CloseBrace): "}" # (738..739)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (739..740)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let keccak256 := 0 }\n" (740..764)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (740..741)
                  - (open_brace꞉ OpenBrace): "{" # (741..742)
                  - (statements꞉ YulStatements): # " let" (742..746)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (742..746)
                          - (LeadingTrivia) ► (Whitespace): " " # (742..743)
                          - (let_keyword꞉ YulLetKeyword): "let" # (743..746)
                  - (LeadingTrivia) ► (Whitespace): " " # (746..747)
                  - (SKIPPED): "keccak256 := 0 " # (747..762)
                  - (close_brace꞉ CloseBrace): "}" # (762..763)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (763..764)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let log0 := 0 }\n" (764..783)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (764..765)
                  - (open_brace꞉ OpenBrace): "{" # (765..766)
                  - (statements꞉ YulStatements): # " let" (766..770)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (766..770)
                          - (LeadingTrivia) ► (Whitespace): " " # (766..767)
                          - (let_keyword꞉ YulLetKeyword): "let" # (767..770)
                  - (LeadingTrivia) ► (Whitespace): " " # (770..771)
                  - (SKIPPED): "log0 := 0 " # (771..781)
                  - (close_brace꞉ CloseBrace): "}" # (781..782)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (782..783)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let log1 := 0 }\n" (783..802)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (783..784)
                  - (open_brace꞉ OpenBrace): "{" # (784..785)
                  - (statements꞉ YulStatements): # " let" (785..789)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (785..789)
                          - (LeadingTrivia) ► (Whitespace): " " # (785..786)
                          - (let_keyword꞉ YulLetKeyword): "let" # (786..789)
                  - (LeadingTrivia) ► (Whitespace): " " # (789..790)
                  - (SKIPPED): "log1 := 0 " # (790..800)
                  - (close_brace꞉ CloseBrace): "}" # (800..801)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (801..802)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let log2 := 0 }\n" (802..821)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (802..803)
                  - (open_brace꞉ OpenBrace): "{" # (803..804)
                  - (statements꞉ YulStatements): # " let" (804..808)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (804..808)
                          - (LeadingTrivia) ► (Whitespace): " " # (804..805)
                          - (let_keyword꞉ YulLetKeyword): "let" # (805..808)
                  - (LeadingTrivia) ► (Whitespace): " " # (808..809)
                  - (SKIPPED): "log2 := 0 " # (809..819)
                  - (close_brace꞉ CloseBrace): "}" # (819..820)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (820..821)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let log3 := 0 }\n" (821..840)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (821..822)
                  - (open_brace꞉ OpenBrace): "{" # (822..823)
                  - (statements꞉ YulStatements): # " let" (823..827)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (823..827)
                          - (LeadingTrivia) ► (Whitespace): " " # (823..824)
                          - (let_keyword꞉ YulLetKeyword): "let" # (824..827)
                  - (LeadingTrivia) ► (Whitespace): " " # (827..828)
                  - (SKIPPED): "log3 := 0 " # (828..838)
                  - (close_brace꞉ CloseBrace): "}" # (838..839)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (839..840)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let log4 := 0 }\n" (840..859)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (840..841)
                  - (open_brace꞉ OpenBrace): "{" # (841..842)
                  - (statements꞉ YulStatements): # " let" (842..846)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (842..846)
                          - (LeadingTrivia) ► (Whitespace): " " # (842..843)
                          - (let_keyword꞉ YulLetKeyword): "let" # (843..846)
                  - (LeadingTrivia) ► (Whitespace): " " # (846..847)
                  - (SKIPPED): "log4 := 0 " # (847..857)
                  - (close_brace꞉ CloseBrace): "}" # (857..858)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (858..859)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let lt := 0 }\n" (859..876)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (859..860)
                  - (open_brace꞉ OpenBrace): "{" # (860..861)
                  - (statements꞉ YulStatements): # " let" (861..865)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (861..865)
                          - (LeadingTrivia) ► (Whitespace): " " # (861..862)
                          - (let_keyword꞉ YulLetKeyword): "let" # (862..865)
                  - (LeadingTrivia) ► (Whitespace): " " # (865..866)
                  - (SKIPPED): "lt := 0 " # (866..874)
                  - (close_brace꞉ CloseBrace): "}" # (874..875)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (875..876)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let mload := 0 }\n" (876..896)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (876..877)
                  - (open_brace꞉ OpenBrace): "{" # (877..878)
                  - (statements꞉ YulStatements): # " let" (878..882)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (878..882)
                          - (LeadingTrivia) ► (Whitespace): " " # (878..879)
                          - (let_keyword꞉ YulLetKeyword): "let" # (879..882)
                  - (LeadingTrivia) ► (Whitespace): " " # (882..883)
                  - (SKIPPED): "mload := 0 " # (883..894)
                  - (close_brace꞉ CloseBrace): "}" # (894..895)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (895..896)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let mod := 0 }\n" (896..914)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (896..897)
                  - (open_brace꞉ OpenBrace): "{" # (897..898)
                  - (statements꞉ YulStatements): # " let" (898..902)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (898..902)
                          - (LeadingTrivia) ► (Whitespace): " " # (898..899)
                          - (let_keyword꞉ YulLetKeyword): "let" # (899..902)
                  - (LeadingTrivia) ► (Whitespace): " " # (902..903)
                  - (SKIPPED): "mod := 0 " # (903..912)
                  - (close_brace꞉ CloseBrace): "}" # (912..913)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (913..914)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let msize := 0 }\n" (914..934)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (914..915)
                  - (open_brace꞉ OpenBrace): "{" # (915..916)
                  - (statements꞉ YulStatements): # " let" (916..920)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (916..920)
                          - (LeadingTrivia) ► (Whitespace): " " # (916..917)
                          - (let_keyword꞉ YulLetKeyword): "let" # (917..920)
                  - (LeadingTrivia) ► (Whitespace): " " # (920..921)
                  - (SKIPPED): "msize := 0 " # (921..932)
                  - (close_brace꞉ CloseBrace): "}" # (932..933)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (933..934)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let mstore := 0 }\n" (934..955)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (934..935)
                  - (open_brace꞉ OpenBrace): "{" # (935..936)
                  - (statements꞉ YulStatements): # " let" (936..940)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (936..940)
                          - (LeadingTrivia) ► (Whitespace): " " # (936..937)
                          - (let_keyword꞉ YulLetKeyword): "let" # (937..940)
                  - (LeadingTrivia) ► (Whitespace): " " # (940..941)
                  - (SKIPPED): "mstore := 0 " # (941..953)
                  - (close_brace꞉ CloseBrace): "}" # (953..954)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (954..955)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let mstore8 := 0 }\n" (955..977)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (955..956)
                  - (open_brace꞉ OpenBrace): "{" # (956..957)
                  - (statements꞉ YulStatements): # " let" (957..961)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (957..961)
                          - (LeadingTrivia) ► (Whitespace): " " # (957..958)
                          - (let_keyword꞉ YulLetKeyword): "let" # (958..961)
                  - (LeadingTrivia) ► (Whitespace): " " # (961..962)
                  - (SKIPPED): "mstore8 := 0 " # (962..975)
                  - (close_brace꞉ CloseBrace): "}" # (975..976)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (976..977)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let mul := 0 }\n" (977..995)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (977..978)
                  - (open_brace꞉ OpenBrace): "{" # (978..979)
                  - (statements꞉ YulStatements): # " let" (979..983)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (979..983)
                          - (LeadingTrivia) ► (Whitespace): " " # (979..980)
                          - (let_keyword꞉ YulLetKeyword): "let" # (980..983)
                  - (LeadingTrivia) ► (Whitespace): " " # (983..984)
                  - (SKIPPED): "mul := 0 " # (984..993)
                  - (close_brace꞉ CloseBrace): "}" # (993..994)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (994..995)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let mulmod := 0 }\n" (995..1016)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (995..996)
                  - (open_brace꞉ OpenBrace): "{" # (996..997)
                  - (statements꞉ YulStatements): # " let" (997..1001)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (997..1001)
                          - (LeadingTrivia) ► (Whitespace): " " # (997..998)
                          - (let_keyword꞉ YulLetKeyword): "let" # (998..1001)
                  - (LeadingTrivia) ► (Whitespace): " " # (1001..1002)
                  - (SKIPPED): "mulmod := 0 " # (1002..1014)
                  - (close_brace꞉ CloseBrace): "}" # (1014..1015)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1015..1016)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let not := 0 }\n" (1016..1034)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1016..1017)
                  - (open_brace꞉ OpenBrace): "{" # (1017..1018)
                  - (statements꞉ YulStatements): # " let" (1018..1022)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1018..1022)
                          - (LeadingTrivia) ► (Whitespace): " " # (1018..1019)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1019..1022)
                  - (LeadingTrivia) ► (Whitespace): " " # (1022..1023)
                  - (SKIPPED): "not := 0 " # (1023..1032)
                  - (close_brace꞉ CloseBrace): "}" # (1032..1033)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1033..1034)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let number := 0 }\n" (1034..1055)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1034..1035)
                  - (open_brace꞉ OpenBrace): "{" # (1035..1036)
                  - (statements꞉ YulStatements): # " let" (1036..1040)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1036..1040)
                          - (LeadingTrivia) ► (Whitespace): " " # (1036..1037)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1037..1040)
                  - (LeadingTrivia) ► (Whitespace): " " # (1040..1041)
                  - (SKIPPED): "number := 0 " # (1041..1053)
                  - (close_brace꞉ CloseBrace): "}" # (1053..1054)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1054..1055)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let or := 0 }\n" (1055..1072)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1055..1056)
                  - (open_brace꞉ OpenBrace): "{" # (1056..1057)
                  - (statements꞉ YulStatements): # " let" (1057..1061)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1057..1061)
                          - (LeadingTrivia) ► (Whitespace): " " # (1057..1058)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1058..1061)
                  - (LeadingTrivia) ► (Whitespace): " " # (1061..1062)
                  - (SKIPPED): "or := 0 " # (1062..1070)
                  - (close_brace꞉ CloseBrace): "}" # (1070..1071)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1071..1072)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let origin := 0 }\n" (1072..1093)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1072..1073)
                  - (open_brace꞉ OpenBrace): "{" # (1073..1074)
                  - (statements꞉ YulStatements): # " let" (1074..1078)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1074..1078)
                          - (LeadingTrivia) ► (Whitespace): " " # (1074..1075)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1075..1078)
                  - (LeadingTrivia) ► (Whitespace): " " # (1078..1079)
                  - (SKIPPED): "origin := 0 " # (1079..1091)
                  - (close_brace꞉ CloseBrace): "}" # (1091..1092)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1092..1093)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let pop := 0 }\n" (1093..1111)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1093..1094)
                  - (open_brace꞉ OpenBrace): "{" # (1094..1095)
                  - (statements꞉ YulStatements): # " let" (1095..1099)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1095..1099)
                          - (LeadingTrivia) ► (Whitespace): " " # (1095..1096)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1096..1099)
                  - (LeadingTrivia) ► (Whitespace): " " # (1099..1100)
                  - (SKIPPED): "pop := 0 " # (1100..1109)
                  - (close_brace꞉ CloseBrace): "}" # (1109..1110)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1110..1111)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let return := 0 }\n" (1111..1132)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1111..1112)
                  - (open_brace꞉ OpenBrace): "{" # (1112..1113)
                  - (statements꞉ YulStatements): # " let" (1113..1117)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1113..1117)
                          - (LeadingTrivia) ► (Whitespace): " " # (1113..1114)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1114..1117)
                  - (LeadingTrivia) ► (Whitespace): " " # (1117..1118)
                  - (SKIPPED): "return := 0 " # (1118..1130)
                  - (close_brace꞉ CloseBrace): "}" # (1130..1131)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1131..1132)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let returndatacopy := 0 }\n" (1132..1161)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1132..1133)
                  - (open_brace꞉ OpenBrace): "{" # (1133..1134)
                  - (statements꞉ YulStatements): # " let" (1134..1138)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1134..1138)
                          - (LeadingTrivia) ► (Whitespace): " " # (1134..1135)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1135..1138)
                  - (LeadingTrivia) ► (Whitespace): " " # (1138..1139)
                  - (SKIPPED): "returndatacopy := 0 " # (1139..1159)
                  - (close_brace꞉ CloseBrace): "}" # (1159..1160)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1160..1161)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let returndatasize := 0 }\n" (1161..1190)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1161..1162)
                  - (open_brace꞉ OpenBrace): "{" # (1162..1163)
                  - (statements꞉ YulStatements): # " let" (1163..1167)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1163..1167)
                          - (LeadingTrivia) ► (Whitespace): " " # (1163..1164)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1164..1167)
                  - (LeadingTrivia) ► (Whitespace): " " # (1167..1168)
                  - (SKIPPED): "returndatasize := 0 " # (1168..1188)
                  - (close_brace꞉ CloseBrace): "}" # (1188..1189)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1189..1190)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let revert := 0 }\n" (1190..1211)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1190..1191)
                  - (open_brace꞉ OpenBrace): "{" # (1191..1192)
                  - (statements꞉ YulStatements): # " let" (1192..1196)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1192..1196)
                          - (LeadingTrivia) ► (Whitespace): " " # (1192..1193)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1193..1196)
                  - (LeadingTrivia) ► (Whitespace): " " # (1196..1197)
                  - (SKIPPED): "revert := 0 " # (1197..1209)
                  - (close_brace꞉ CloseBrace): "}" # (1209..1210)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1210..1211)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let sar := 0 }\n" (1211..1229)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1211..1212)
                  - (open_brace꞉ OpenBrace): "{" # (1212..1213)
                  - (statements꞉ YulStatements): # " let" (1213..1217)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1213..1217)
                          - (LeadingTrivia) ► (Whitespace): " " # (1213..1214)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1214..1217)
                  - (LeadingTrivia) ► (Whitespace): " " # (1217..1218)
                  - (SKIPPED): "sar := 0 " # (1218..1227)
                  - (close_brace꞉ CloseBrace): "}" # (1227..1228)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1228..1229)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let sdiv := 0 }\n" (1229..1248)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1229..1230)
                  - (open_brace꞉ OpenBrace): "{" # (1230..1231)
                  - (statements꞉ YulStatements): # " let" (1231..1235)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1231..1235)
                          - (LeadingTrivia) ► (Whitespace): " " # (1231..1232)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1232..1235)
                  - (LeadingTrivia) ► (Whitespace): " " # (1235..1236)
                  - (SKIPPED): "sdiv := 0 " # (1236..1246)
                  - (close_brace꞉ CloseBrace): "}" # (1246..1247)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1247..1248)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let selfbalance := 0 }\n" (1248..1274)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1248..1249)
                  - (open_brace꞉ OpenBrace): "{" # (1249..1250)
                  - (statements꞉ YulStatements): # " let" (1250..1254)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1250..1254)
                          - (LeadingTrivia) ► (Whitespace): " " # (1250..1251)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1251..1254)
                  - (LeadingTrivia) ► (Whitespace): " " # (1254..1255)
                  - (SKIPPED): "selfbalance := 0 " # (1255..1272)
                  - (close_brace꞉ CloseBrace): "}" # (1272..1273)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1273..1274)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let selfdestruct := 0 }\n" (1274..1301)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1274..1275)
                  - (open_brace꞉ OpenBrace): "{" # (1275..1276)
                  - (statements꞉ YulStatements): # " let" (1276..1280)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1276..1280)
                          - (LeadingTrivia) ► (Whitespace): " " # (1276..1277)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1277..1280)
                  - (LeadingTrivia) ► (Whitespace): " " # (1280..1281)
                  - (SKIPPED): "selfdestruct := 0 " # (1281..1299)
                  - (close_brace꞉ CloseBrace): "}" # (1299..1300)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1300..1301)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let sgt := 0 }\n" (1301..1319)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1301..1302)
                  - (open_brace꞉ OpenBrace): "{" # (1302..1303)
                  - (statements꞉ YulStatements): # " let" (1303..1307)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1303..1307)
                          - (LeadingTrivia) ► (Whitespace): " " # (1303..1304)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1304..1307)
                  - (LeadingTrivia) ► (Whitespace): " " # (1307..1308)
                  - (SKIPPED): "sgt := 0 " # (1308..1317)
                  - (close_brace꞉ CloseBrace): "}" # (1317..1318)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1318..1319)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let shl := 0 }\n" (1319..1337)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1319..1320)
                  - (open_brace꞉ OpenBrace): "{" # (1320..1321)
                  - (statements꞉ YulStatements): # " let" (1321..1325)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1321..1325)
                          - (LeadingTrivia) ► (Whitespace): " " # (1321..1322)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1322..1325)
                  - (LeadingTrivia) ► (Whitespace): " " # (1325..1326)
                  - (SKIPPED): "shl := 0 " # (1326..1335)
                  - (close_brace꞉ CloseBrace): "}" # (1335..1336)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1336..1337)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let shr := 0 }\n" (1337..1355)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1337..1338)
                  - (open_brace꞉ OpenBrace): "{" # (1338..1339)
                  - (statements꞉ YulStatements): # " let" (1339..1343)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1339..1343)
                          - (LeadingTrivia) ► (Whitespace): " " # (1339..1340)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1340..1343)
                  - (LeadingTrivia) ► (Whitespace): " " # (1343..1344)
                  - (SKIPPED): "shr := 0 " # (1344..1353)
                  - (close_brace꞉ CloseBrace): "}" # (1353..1354)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1354..1355)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let signextend := 0 }\n" (1355..1380)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1355..1356)
                  - (open_brace꞉ OpenBrace): "{" # (1356..1357)
                  - (statements꞉ YulStatements): # " let" (1357..1361)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1357..1361)
                          - (LeadingTrivia) ► (Whitespace): " " # (1357..1358)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1358..1361)
                  - (LeadingTrivia) ► (Whitespace): " " # (1361..1362)
                  - (SKIPPED): "signextend := 0 " # (1362..1378)
                  - (close_brace꞉ CloseBrace): "}" # (1378..1379)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1379..1380)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let sload := 0 }\n" (1380..1400)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1380..1381)
                  - (open_brace꞉ OpenBrace): "{" # (1381..1382)
                  - (statements꞉ YulStatements): # " let" (1382..1386)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1382..1386)
                          - (LeadingTrivia) ► (Whitespace): " " # (1382..1383)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1383..1386)
                  - (LeadingTrivia) ► (Whitespace): " " # (1386..1387)
                  - (SKIPPED): "sload := 0 " # (1387..1398)
                  - (close_brace꞉ CloseBrace): "}" # (1398..1399)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1399..1400)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let slt := 0 }\n" (1400..1418)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1400..1401)
                  - (open_brace꞉ OpenBrace): "{" # (1401..1402)
                  - (statements꞉ YulStatements): # " let" (1402..1406)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1402..1406)
                          - (LeadingTrivia) ► (Whitespace): " " # (1402..1403)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1403..1406)
                  - (LeadingTrivia) ► (Whitespace): " " # (1406..1407)
                  - (SKIPPED): "slt := 0 " # (1407..1416)
                  - (close_brace꞉ CloseBrace): "}" # (1416..1417)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1417..1418)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let smod := 0 }\n" (1418..1437)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1418..1419)
                  - (open_brace꞉ OpenBrace): "{" # (1419..1420)
                  - (statements꞉ YulStatements): # " let" (1420..1424)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1420..1424)
                          - (LeadingTrivia) ► (Whitespace): " " # (1420..1421)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1421..1424)
                  - (LeadingTrivia) ► (Whitespace): " " # (1424..1425)
                  - (SKIPPED): "smod := 0 " # (1425..1435)
                  - (close_brace꞉ CloseBrace): "}" # (1435..1436)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1436..1437)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let sstore := 0 }\n" (1437..1458)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1437..1438)
                  - (open_brace꞉ OpenBrace): "{" # (1438..1439)
                  - (statements꞉ YulStatements): # " let" (1439..1443)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1439..1443)
                          - (LeadingTrivia) ► (Whitespace): " " # (1439..1440)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1440..1443)
                  - (LeadingTrivia) ► (Whitespace): " " # (1443..1444)
                  - (SKIPPED): "sstore := 0 " # (1444..1456)
                  - (close_brace꞉ CloseBrace): "}" # (1456..1457)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1457..1458)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let staticcall := 0 }\n" (1458..1483)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1458..1459)
                  - (open_brace꞉ OpenBrace): "{" # (1459..1460)
                  - (statements꞉ YulStatements): # " let" (1460..1464)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1460..1464)
                          - (LeadingTrivia) ► (Whitespace): " " # (1460..1461)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1461..1464)
                  - (LeadingTrivia) ► (Whitespace): " " # (1464..1465)
                  - (SKIPPED): "staticcall := 0 " # (1465..1481)
                  - (close_brace꞉ CloseBrace): "}" # (1481..1482)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1482..1483)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let stop := 0 }\n" (1483..1502)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1483..1484)
                  - (open_brace꞉ OpenBrace): "{" # (1484..1485)
                  - (statements꞉ YulStatements): # " let" (1485..1489)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1485..1489)
                          - (LeadingTrivia) ► (Whitespace): " " # (1485..1486)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1486..1489)
                  - (LeadingTrivia) ► (Whitespace): " " # (1489..1490)
                  - (SKIPPED): "stop := 0 " # (1490..1500)
                  - (close_brace꞉ CloseBrace): "}" # (1500..1501)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1501..1502)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let sub := 0 }\n" (1502..1520)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1502..1503)
                  - (open_brace꞉ OpenBrace): "{" # (1503..1504)
                  - (statements꞉ YulStatements): # " let" (1504..1508)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1504..1508)
                          - (LeadingTrivia) ► (Whitespace): " " # (1504..1505)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1505..1508)
                  - (LeadingTrivia) ► (Whitespace): " " # (1508..1509)
                  - (SKIPPED): "sub := 0 " # (1509..1518)
                  - (close_brace꞉ CloseBrace): "}" # (1518..1519)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1519..1520)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let timestamp := 0 }\n" (1520..1544)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1520..1521)
                  - (open_brace꞉ OpenBrace): "{" # (1521..1522)
                  - (statements꞉ YulStatements): # " let" (1522..1526)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1522..1526)
                          - (LeadingTrivia) ► (Whitespace): " " # (1522..1523)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1523..1526)
                  - (LeadingTrivia) ► (Whitespace): " " # (1526..1527)
                  - (SKIPPED): "timestamp := 0 " # (1527..1542)
                  - (close_brace꞉ CloseBrace): "}" # (1542..1543)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1543..1544)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let xor := 0 }\n" (1544..1562)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1544..1545)
                  - (open_brace꞉ OpenBrace): "{" # (1545..1546)
                  - (statements꞉ YulStatements): # " let" (1546..1550)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1546..1550)
                          - (LeadingTrivia) ► (Whitespace): " " # (1546..1547)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1547..1550)
                  - (LeadingTrivia) ► (Whitespace): " " # (1550..1551)
                  - (SKIPPED): "xor := 0 " # (1551..1560)
                  - (close_brace꞉ CloseBrace): "}" # (1560..1561)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1561..1562)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let sha3 := 0 }\n" (1562..1581)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1562..1563)
                  - (open_brace꞉ OpenBrace): "{" # (1563..1564)
                  - (statements꞉ YulStatements): # " let sha3 := 0" (1564..1578)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let sha3 := 0" (1564..1578)
                          - (LeadingTrivia) ► (Whitespace): " " # (1564..1565)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1565..1568)
                          - (names꞉ YulIdentifierPaths): # " sha3" (1568..1573)
                              - (item꞉ YulIdentifierPath): # " sha3" (1568..1573)
                                  - (LeadingTrivia) ► (Whitespace): " " # (1568..1569)
                                  - (item꞉ YulIdentifier): "sha3" # (1569..1573)
                          - (value꞉ YulVariableDeclarationValue): # " := 0" (1573..1578)
                              - (LeadingTrivia) ► (Whitespace): " " # (1573..1574)
                              - (colon_equal꞉ ColonEqual): ":=" # (1574..1576)
                              - (expression꞉ YulExpression) ► (variant꞉ YulLiteral): # " 0" (1576..1578)
                                  - (LeadingTrivia) ► (Whitespace): " " # (1576..1577)
                                  - (variant꞉ YulDecimalLiteral): "0" # (1577..1578)
                  - (LeadingTrivia) ► (Whitespace): " " # (1578..1579)
                  - (close_brace꞉ CloseBrace): "}" # (1579..1580)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1580..1581)
              - (item꞉ YulStatement) ► (variant꞉ YulBlock): # "\t{ let prevrandao := 0 }\n" (1581..1606)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1581..1582)
                  - (open_brace꞉ OpenBrace): "{" # (1582..1583)
                  - (statements꞉ YulStatements): # " let" (1583..1587)
                      - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # " let" (1583..1587)
                          - (LeadingTrivia) ► (Whitespace): " " # (1583..1584)
                          - (let_keyword꞉ YulLetKeyword): "let" # (1584..1587)
                  - (LeadingTrivia) ► (Whitespace): " " # (1587..1588)
                  - (SKIPPED): "prevrandao := 0 " # (1588..1604)
                  - (close_brace꞉ CloseBrace): "}" # (1604..1605)
                  - (TrailingTrivia) ► (EndOfLine): "\n" # (1605..1606)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := add()\n" (1606..1624)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1606..1607)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1607..1610)
                  - (names꞉ YulIdentifierPaths): # " res" (1610..1614)
                      - (item꞉ YulIdentifierPath): # " res" (1610..1614)
                          - (LeadingTrivia) ► (Whitespace): " " # (1610..1611)
                          - (item꞉ YulIdentifier): "res" # (1611..1614)
                  - (value꞉ YulVariableDeclarationValue): # " := add()\n" (1614..1624)
                      - (LeadingTrivia) ► (Whitespace): " " # (1614..1615)
                      - (colon_equal꞉ ColonEqual): ":=" # (1615..1617)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " add()\n" (1617..1624)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " add" (1617..1621)
                              - (LeadingTrivia) ► (Whitespace): " " # (1617..1618)
                              - (variant꞉ YulAddKeyword): "add" # (1618..1621)
                          - (open_paren꞉ OpenParen): "(" # (1621..1622)
                          - (close_paren꞉ CloseParen): ")" # (1622..1623)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1623..1624)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := addmod()\n" (1624..1645)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1624..1625)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1625..1628)
                  - (names꞉ YulIdentifierPaths): # " res" (1628..1632)
                      - (item꞉ YulIdentifierPath): # " res" (1628..1632)
                          - (LeadingTrivia) ► (Whitespace): " " # (1628..1629)
                          - (item꞉ YulIdentifier): "res" # (1629..1632)
                  - (value꞉ YulVariableDeclarationValue): # " := addmod()\n" (1632..1645)
                      - (LeadingTrivia) ► (Whitespace): " " # (1632..1633)
                      - (colon_equal꞉ ColonEqual): ":=" # (1633..1635)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " addmod()\n" (1635..1645)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " addmod" (1635..1642)
                              - (LeadingTrivia) ► (Whitespace): " " # (1635..1636)
                              - (variant꞉ YulAddmodKeyword): "addmod" # (1636..1642)
                          - (open_paren꞉ OpenParen): "(" # (1642..1643)
                          - (close_paren꞉ CloseParen): ")" # (1643..1644)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1644..1645)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := address()\n" (1645..1667)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1645..1646)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1646..1649)
                  - (names꞉ YulIdentifierPaths): # " res" (1649..1653)
                      - (item꞉ YulIdentifierPath): # " res" (1649..1653)
                          - (LeadingTrivia) ► (Whitespace): " " # (1649..1650)
                          - (item꞉ YulIdentifier): "res" # (1650..1653)
                  - (value꞉ YulVariableDeclarationValue): # " := address()\n" (1653..1667)
                      - (LeadingTrivia) ► (Whitespace): " " # (1653..1654)
                      - (colon_equal꞉ ColonEqual): ":=" # (1654..1656)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " address()\n" (1656..1667)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " address" (1656..1664)
                              - (LeadingTrivia) ► (Whitespace): " " # (1656..1657)
                              - (variant꞉ YulAddressKeyword): "address" # (1657..1664)
                          - (open_paren꞉ OpenParen): "(" # (1664..1665)
                          - (close_paren꞉ CloseParen): ")" # (1665..1666)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1666..1667)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := and()\n" (1667..1685)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1667..1668)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1668..1671)
                  - (names꞉ YulIdentifierPaths): # " res" (1671..1675)
                      - (item꞉ YulIdentifierPath): # " res" (1671..1675)
                          - (LeadingTrivia) ► (Whitespace): " " # (1671..1672)
                          - (item꞉ YulIdentifier): "res" # (1672..1675)
                  - (value꞉ YulVariableDeclarationValue): # " := and()\n" (1675..1685)
                      - (LeadingTrivia) ► (Whitespace): " " # (1675..1676)
                      - (colon_equal꞉ ColonEqual): ":=" # (1676..1678)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " and()\n" (1678..1685)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " and" (1678..1682)
                              - (LeadingTrivia) ► (Whitespace): " " # (1678..1679)
                              - (variant꞉ YulAndKeyword): "and" # (1679..1682)
                          - (open_paren꞉ OpenParen): "(" # (1682..1683)
                          - (close_paren꞉ CloseParen): ")" # (1683..1684)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1684..1685)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := balance()\n" (1685..1707)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1685..1686)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1686..1689)
                  - (names꞉ YulIdentifierPaths): # " res" (1689..1693)
                      - (item꞉ YulIdentifierPath): # " res" (1689..1693)
                          - (LeadingTrivia) ► (Whitespace): " " # (1689..1690)
                          - (item꞉ YulIdentifier): "res" # (1690..1693)
                  - (value꞉ YulVariableDeclarationValue): # " := balance()\n" (1693..1707)
                      - (LeadingTrivia) ► (Whitespace): " " # (1693..1694)
                      - (colon_equal꞉ ColonEqual): ":=" # (1694..1696)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " balance()\n" (1696..1707)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " balance" (1696..1704)
                              - (LeadingTrivia) ► (Whitespace): " " # (1696..1697)
                              - (variant꞉ YulBalanceKeyword): "balance" # (1697..1704)
                          - (open_paren꞉ OpenParen): "(" # (1704..1705)
                          - (close_paren꞉ CloseParen): ")" # (1705..1706)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1706..1707)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := basefee()\n" (1707..1729)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1707..1708)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1708..1711)
                  - (names꞉ YulIdentifierPaths): # " res" (1711..1715)
                      - (item꞉ YulIdentifierPath): # " res" (1711..1715)
                          - (LeadingTrivia) ► (Whitespace): " " # (1711..1712)
                          - (item꞉ YulIdentifier): "res" # (1712..1715)
                  - (value꞉ YulVariableDeclarationValue): # " := basefee()\n" (1715..1729)
                      - (LeadingTrivia) ► (Whitespace): " " # (1715..1716)
                      - (colon_equal꞉ ColonEqual): ":=" # (1716..1718)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " basefee()\n" (1718..1729)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " basefee" (1718..1726)
                              - (LeadingTrivia) ► (Whitespace): " " # (1718..1719)
                              - (variant꞉ YulBasefeeKeyword): "basefee" # (1719..1726)
                          - (open_paren꞉ OpenParen): "(" # (1726..1727)
                          - (close_paren꞉ CloseParen): ")" # (1727..1728)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1728..1729)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := blockhash()\n" (1729..1753)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1729..1730)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1730..1733)
                  - (names꞉ YulIdentifierPaths): # " res" (1733..1737)
                      - (item꞉ YulIdentifierPath): # " res" (1733..1737)
                          - (LeadingTrivia) ► (Whitespace): " " # (1733..1734)
                          - (item꞉ YulIdentifier): "res" # (1734..1737)
                  - (value꞉ YulVariableDeclarationValue): # " := blockhash()\n" (1737..1753)
                      - (LeadingTrivia) ► (Whitespace): " " # (1737..1738)
                      - (colon_equal꞉ ColonEqual): ":=" # (1738..1740)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " blockhash()\n" (1740..1753)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " blockhash" (1740..1750)
                              - (LeadingTrivia) ► (Whitespace): " " # (1740..1741)
                              - (variant꞉ YulBlockhashKeyword): "blockhash" # (1741..1750)
                          - (open_paren꞉ OpenParen): "(" # (1750..1751)
                          - (close_paren꞉ CloseParen): ")" # (1751..1752)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1752..1753)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := byte()\n" (1753..1772)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1753..1754)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1754..1757)
                  - (names꞉ YulIdentifierPaths): # " res" (1757..1761)
                      - (item꞉ YulIdentifierPath): # " res" (1757..1761)
                          - (LeadingTrivia) ► (Whitespace): " " # (1757..1758)
                          - (item꞉ YulIdentifier): "res" # (1758..1761)
                  - (value꞉ YulVariableDeclarationValue): # " := byte()\n" (1761..1772)
                      - (LeadingTrivia) ► (Whitespace): " " # (1761..1762)
                      - (colon_equal꞉ ColonEqual): ":=" # (1762..1764)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " byte()\n" (1764..1772)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " byte" (1764..1769)
                              - (LeadingTrivia) ► (Whitespace): " " # (1764..1765)
                              - (variant꞉ YulByteKeyword): "byte" # (1765..1769)
                          - (open_paren꞉ OpenParen): "(" # (1769..1770)
                          - (close_paren꞉ CloseParen): ")" # (1770..1771)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1771..1772)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := call()\n" (1772..1791)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1772..1773)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1773..1776)
                  - (names꞉ YulIdentifierPaths): # " res" (1776..1780)
                      - (item꞉ YulIdentifierPath): # " res" (1776..1780)
                          - (LeadingTrivia) ► (Whitespace): " " # (1776..1777)
                          - (item꞉ YulIdentifier): "res" # (1777..1780)
                  - (value꞉ YulVariableDeclarationValue): # " := call()\n" (1780..1791)
                      - (LeadingTrivia) ► (Whitespace): " " # (1780..1781)
                      - (colon_equal꞉ ColonEqual): ":=" # (1781..1783)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " call()\n" (1783..1791)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " call" (1783..1788)
                              - (LeadingTrivia) ► (Whitespace): " " # (1783..1784)
                              - (variant꞉ YulCallKeyword): "call" # (1784..1788)
                          - (open_paren꞉ OpenParen): "(" # (1788..1789)
                          - (close_paren꞉ CloseParen): ")" # (1789..1790)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1790..1791)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := callcode()\n" (1791..1814)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1791..1792)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1792..1795)
                  - (names꞉ YulIdentifierPaths): # " res" (1795..1799)
                      - (item꞉ YulIdentifierPath): # " res" (1795..1799)
                          - (LeadingTrivia) ► (Whitespace): " " # (1795..1796)
                          - (item꞉ YulIdentifier): "res" # (1796..1799)
                  - (value꞉ YulVariableDeclarationValue): # " := callcode()\n" (1799..1814)
                      - (LeadingTrivia) ► (Whitespace): " " # (1799..1800)
                      - (colon_equal꞉ ColonEqual): ":=" # (1800..1802)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " callcode()\n" (1802..1814)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " callcode" (1802..1811)
                              - (LeadingTrivia) ► (Whitespace): " " # (1802..1803)
                              - (variant꞉ YulCallcodeKeyword): "callcode" # (1803..1811)
                          - (open_paren꞉ OpenParen): "(" # (1811..1812)
                          - (close_paren꞉ CloseParen): ")" # (1812..1813)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1813..1814)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := calldatacopy()\n" (1814..1841)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1814..1815)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1815..1818)
                  - (names꞉ YulIdentifierPaths): # " res" (1818..1822)
                      - (item꞉ YulIdentifierPath): # " res" (1818..1822)
                          - (LeadingTrivia) ► (Whitespace): " " # (1818..1819)
                          - (item꞉ YulIdentifier): "res" # (1819..1822)
                  - (value꞉ YulVariableDeclarationValue): # " := calldatacopy()\n" (1822..1841)
                      - (LeadingTrivia) ► (Whitespace): " " # (1822..1823)
                      - (colon_equal꞉ ColonEqual): ":=" # (1823..1825)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " calldatacopy()\n" (1825..1841)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " calldatacopy" (1825..1838)
                              - (LeadingTrivia) ► (Whitespace): " " # (1825..1826)
                              - (variant꞉ YulCalldatacopyKeyword): "calldatacopy" # (1826..1838)
                          - (open_paren꞉ OpenParen): "(" # (1838..1839)
                          - (close_paren꞉ CloseParen): ")" # (1839..1840)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1840..1841)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := calldataload()\n" (1841..1868)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1841..1842)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1842..1845)
                  - (names꞉ YulIdentifierPaths): # " res" (1845..1849)
                      - (item꞉ YulIdentifierPath): # " res" (1845..1849)
                          - (LeadingTrivia) ► (Whitespace): " " # (1845..1846)
                          - (item꞉ YulIdentifier): "res" # (1846..1849)
                  - (value꞉ YulVariableDeclarationValue): # " := calldataload()\n" (1849..1868)
                      - (LeadingTrivia) ► (Whitespace): " " # (1849..1850)
                      - (colon_equal꞉ ColonEqual): ":=" # (1850..1852)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " calldataload()\n" (1852..1868)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " calldataload" (1852..1865)
                              - (LeadingTrivia) ► (Whitespace): " " # (1852..1853)
                              - (variant꞉ YulCalldataloadKeyword): "calldataload" # (1853..1865)
                          - (open_paren꞉ OpenParen): "(" # (1865..1866)
                          - (close_paren꞉ CloseParen): ")" # (1866..1867)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1867..1868)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := calldatasize()\n" (1868..1895)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1868..1869)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1869..1872)
                  - (names꞉ YulIdentifierPaths): # " res" (1872..1876)
                      - (item꞉ YulIdentifierPath): # " res" (1872..1876)
                          - (LeadingTrivia) ► (Whitespace): " " # (1872..1873)
                          - (item꞉ YulIdentifier): "res" # (1873..1876)
                  - (value꞉ YulVariableDeclarationValue): # " := calldatasize()\n" (1876..1895)
                      - (LeadingTrivia) ► (Whitespace): " " # (1876..1877)
                      - (colon_equal꞉ ColonEqual): ":=" # (1877..1879)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " calldatasize()\n" (1879..1895)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " calldatasize" (1879..1892)
                              - (LeadingTrivia) ► (Whitespace): " " # (1879..1880)
                              - (variant꞉ YulCalldatasizeKeyword): "calldatasize" # (1880..1892)
                          - (open_paren꞉ OpenParen): "(" # (1892..1893)
                          - (close_paren꞉ CloseParen): ")" # (1893..1894)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1894..1895)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := caller()\n" (1895..1916)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1895..1896)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1896..1899)
                  - (names꞉ YulIdentifierPaths): # " res" (1899..1903)
                      - (item꞉ YulIdentifierPath): # " res" (1899..1903)
                          - (LeadingTrivia) ► (Whitespace): " " # (1899..1900)
                          - (item꞉ YulIdentifier): "res" # (1900..1903)
                  - (value꞉ YulVariableDeclarationValue): # " := caller()\n" (1903..1916)
                      - (LeadingTrivia) ► (Whitespace): " " # (1903..1904)
                      - (colon_equal꞉ ColonEqual): ":=" # (1904..1906)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " caller()\n" (1906..1916)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " caller" (1906..1913)
                              - (LeadingTrivia) ► (Whitespace): " " # (1906..1907)
                              - (variant꞉ YulCallerKeyword): "caller" # (1907..1913)
                          - (open_paren꞉ OpenParen): "(" # (1913..1914)
                          - (close_paren꞉ CloseParen): ")" # (1914..1915)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1915..1916)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := callvalue()\n" (1916..1940)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1916..1917)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1917..1920)
                  - (names꞉ YulIdentifierPaths): # " res" (1920..1924)
                      - (item꞉ YulIdentifierPath): # " res" (1920..1924)
                          - (LeadingTrivia) ► (Whitespace): " " # (1920..1921)
                          - (item꞉ YulIdentifier): "res" # (1921..1924)
                  - (value꞉ YulVariableDeclarationValue): # " := callvalue()\n" (1924..1940)
                      - (LeadingTrivia) ► (Whitespace): " " # (1924..1925)
                      - (colon_equal꞉ ColonEqual): ":=" # (1925..1927)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " callvalue()\n" (1927..1940)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " callvalue" (1927..1937)
                              - (LeadingTrivia) ► (Whitespace): " " # (1927..1928)
                              - (variant꞉ YulCallvalueKeyword): "callvalue" # (1928..1937)
                          - (open_paren꞉ OpenParen): "(" # (1937..1938)
                          - (close_paren꞉ CloseParen): ")" # (1938..1939)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1939..1940)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := chainid()\n" (1940..1962)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1940..1941)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1941..1944)
                  - (names꞉ YulIdentifierPaths): # " res" (1944..1948)
                      - (item꞉ YulIdentifierPath): # " res" (1944..1948)
                          - (LeadingTrivia) ► (Whitespace): " " # (1944..1945)
                          - (item꞉ YulIdentifier): "res" # (1945..1948)
                  - (value꞉ YulVariableDeclarationValue): # " := chainid()\n" (1948..1962)
                      - (LeadingTrivia) ► (Whitespace): " " # (1948..1949)
                      - (colon_equal꞉ ColonEqual): ":=" # (1949..1951)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " chainid()\n" (1951..1962)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " chainid" (1951..1959)
                              - (LeadingTrivia) ► (Whitespace): " " # (1951..1952)
                              - (variant꞉ YulChainidKeyword): "chainid" # (1952..1959)
                          - (open_paren꞉ OpenParen): "(" # (1959..1960)
                          - (close_paren꞉ CloseParen): ")" # (1960..1961)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1961..1962)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := coinbase()\n" (1962..1985)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1962..1963)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1963..1966)
                  - (names꞉ YulIdentifierPaths): # " res" (1966..1970)
                      - (item꞉ YulIdentifierPath): # " res" (1966..1970)
                          - (LeadingTrivia) ► (Whitespace): " " # (1966..1967)
                          - (item꞉ YulIdentifier): "res" # (1967..1970)
                  - (value꞉ YulVariableDeclarationValue): # " := coinbase()\n" (1970..1985)
                      - (LeadingTrivia) ► (Whitespace): " " # (1970..1971)
                      - (colon_equal꞉ ColonEqual): ":=" # (1971..1973)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " coinbase()\n" (1973..1985)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " coinbase" (1973..1982)
                              - (LeadingTrivia) ► (Whitespace): " " # (1973..1974)
                              - (variant꞉ YulCoinbaseKeyword): "coinbase" # (1974..1982)
                          - (open_paren꞉ OpenParen): "(" # (1982..1983)
                          - (close_paren꞉ CloseParen): ")" # (1983..1984)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (1984..1985)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := create()\n" (1985..2006)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (1985..1986)
                  - (let_keyword꞉ YulLetKeyword): "let" # (1986..1989)
                  - (names꞉ YulIdentifierPaths): # " res" (1989..1993)
                      - (item꞉ YulIdentifierPath): # " res" (1989..1993)
                          - (LeadingTrivia) ► (Whitespace): " " # (1989..1990)
                          - (item꞉ YulIdentifier): "res" # (1990..1993)
                  - (value꞉ YulVariableDeclarationValue): # " := create()\n" (1993..2006)
                      - (LeadingTrivia) ► (Whitespace): " " # (1993..1994)
                      - (colon_equal꞉ ColonEqual): ":=" # (1994..1996)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " create()\n" (1996..2006)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " create" (1996..2003)
                              - (LeadingTrivia) ► (Whitespace): " " # (1996..1997)
                              - (variant꞉ YulCreateKeyword): "create" # (1997..2003)
                          - (open_paren꞉ OpenParen): "(" # (2003..2004)
                          - (close_paren꞉ CloseParen): ")" # (2004..2005)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (2005..2006)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := create2()\n" (2006..2028)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (2006..2007)
                  - (let_keyword꞉ YulLetKeyword): "let" # (2007..2010)
                  - (names꞉ YulIdentifierPaths): # " res" (2010..2014)
                      - (item꞉ YulIdentifierPath): # " res" (2010..2014)
                          - (LeadingTrivia) ► (Whitespace): " " # (2010..2011)
                          - (item꞉ YulIdentifier): "res" # (2011..2014)
                  - (value꞉ YulVariableDeclarationValue): # " := create2()\n" (2014..2028)
                      - (LeadingTrivia) ► (Whitespace): " " # (2014..2015)
                      - (colon_equal꞉ ColonEqual): ":=" # (2015..2017)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " create2()\n" (2017..2028)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " create2" (2017..2025)
                              - (LeadingTrivia) ► (Whitespace): " " # (2017..2018)
                              - (variant꞉ YulCreate2Keyword): "create2" # (2018..2025)
                          - (open_paren꞉ OpenParen): "(" # (2025..2026)
                          - (close_paren꞉ CloseParen): ")" # (2026..2027)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (2027..2028)
              - (item꞉ YulStatement) ► (variant꞉ YulVariableDeclarationStatement): # "\tlet res := delegatecall()\n" (2028..2055)
                  - (LeadingTrivia) ► (Whitespace): "\t" # (2028..2029)
                  - (let_keyword꞉ YulLetKeyword): "let" # (2029..2032)
                  - (names꞉ YulIdentifierPaths): # " res" (2032..2036)
                      - (item꞉ YulIdentifierPath): # " res" (2032..2036)
                          - (LeadingTrivia) ► (Whitespace): " " # (2032..2033)
                          - (item꞉ YulIdentifier): "res" # (2033..2036)
                  - (value꞉ YulVariableDeclarationValue): # " := delegatecall()\n" (2036..2055)
                      - (LeadingTrivia) ► (Whitespace): " " # (2036..2037)
                      - (colon_equal꞉ ColonEqual): ":=" # (2037..2039)
                      - (expression꞉ YulExpression) ► (variant꞉ YulFunctionCallExpression): # " delegatecall()\n" (2039..2055)
                          - (operand꞉ YulExpression) ► (variant꞉ YulEvmBuiltin): # " delegatecall" (2039..2052)
                              - (LeadingTrivia) ► (Whitespace): " " # (2039..2040)
                              - (variant꞉ YulDelegatecallKeyword): "delegatecall" # (2040..2052)
                          - (open_paren꞉ OpenParen): "(" # (2052..2053)
                          - (close_paren꞉ CloseParen): ")" # (2053..2054)
                          - (TrailingTrivia) ► (EndOfLine): "\n" # (2054..2055)
          - (LeadingTrivia) ► (Whitespace): "\t" # (2055..2056)
          - (SKIPPED): "let res := difficulty()\n\tlet res := div()\n\tlet res..." # (2056..3201)
          - (close_brace꞉ CloseBrace): "}" # (3201..3202)
          - (TrailingTrivia) ► (EndOfLine): "\n" # (3202..3203)
