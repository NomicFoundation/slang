# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Source: >
  1  │ {                                                                                │ 0..1
  2  │ 	function mult(a, b) -> result {                                                 │ 2..34
  3  │ 		result := mul(a, b)                                                            │ 35..56
  4  │ 	}                                                                               │ 57..59
  5  │ }                                                                                │ 60..61

Errors: # 1 total
  - >
    Error: Expected AsciiStringLiteral or CloseBrace or HexStringLiteral or OpenBrace or YulBreakKeyword or YulContinueKeyword or YulDecimalLiteral or YulFalseKeyword or YulForKeyword or YulFunctionKeyword or YulHexLiteral or YulIdentifier or YulIfKeyword or YulLetKeyword or YulSwitchKeyword or YulTrueKeyword.
       ╭─[crates/solidity/testing/snapshots/cst_output/YulBlock/function_def/input.sol:2:22]
       │
     2 │ ╭─▶     function mult(a, b) -> result {
       ┆ ┆   
     4 │ ├─▶     }
       │ │           
       │ ╰─────────── Error occurred here.
    ───╯

Tree:
  - YulBlock: # 0..62 "{\n\tfunction mult(a, b) -> result {\n\t\tresult := mul..."
      - (open_brace) OpenBrace: "{" # 0..1
      - (statements) YulStatements: # 2..22 "\tfunction mult(a, b)"
          - (item) YulStatement: # 2..11 "\tfunction"
              - (variant) YulExpression: # 2..11 "\tfunction"
                  - (variant) YulIdentifierPath: # 2..11 "\tfunction"
                      - (item) YulIdentifier: "function" # 3..11
          - (item) YulStatement: # 11..22 " mult(a, b)"
              - (variant) YulExpression: # 11..22 " mult(a, b)"
                  - (variant) YulFunctionCallExpression: # 11..22 " mult(a, b)"
                      - (operand) YulExpression: # 11..16 " mult"
                          - (variant) YulIdentifierPath: # 11..16 " mult"
                              - (item) YulIdentifier: "mult" # 12..16
                      - (open_paren) OpenParen: "(" # 16..17
                      - (arguments) YulArguments: # 17..21 "a, b"
                          - (item) YulExpression: # 17..18 "a"
                              - (variant) YulIdentifierPath: # 17..18 "a"
                                  - (item) YulIdentifier: "a" # 17..18
                          - (separator) Comma: "," # 18..19
                          - (item) YulExpression: # 19..21 " b"
                              - (variant) YulIdentifierPath: # 19..21 " b"
                                  - (item) YulIdentifier: "b" # 20..21
                      - (close_paren) CloseParen: ")" # 21..22
      - SKIPPED: "-> result {\n\t\tresult := mul(a, b)\n\t}\n" # 23..60
      - (close_brace) CloseBrace: "}" # 60..61
