# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Definitions (11):
- Def: #1 ["ShortString" @ input.sol:1:6] (udvt, type: meta-type)
- Def: #2 ["Test" @ input.sol:3:10] (contract)
- Def: #3 ["test" @ input.sol:7:14] (function, type: function (bytes32) returns void)
- Def: #4 ["data" @ input.sol:7:27] (parameter, type: bytes32)
- Def: #5 ["s" @ input.sol:8:21] (variable, type: ShortString)
- Def: #6 ["ShortStringLib" @ input.sol:15:9] (library)
- Def: #7 ["nop" @ input.sol:16:14] (function, type: function (ShortString) returns void)
- Def: #8 ["x" @ input.sol:16:30] (parameter, type: ShortString)
- Def: #9 ["BytesLib" @ input.sol:19:9] (library)
- Def: #10 ["pon" @ input.sol:20:14] (function, type: function (bytes32) returns void)
- Def: #11 ["x" @ input.sol:20:26] (parameter, type: bytes32)

------------------------------------------------------------------------

References (13):
- Ref: ["ShortStringLib" @ input.sol:4:11] -> #6
- Ref: ["ShortString" @ input.sol:4:30] -> #1
- Ref: ["BytesLib" @ input.sol:5:11] -> #9
- Ref: ["ShortString" @ input.sol:8:9] -> #1
- Ref: ["ShortString" @ input.sol:10:9] -> #1
- Ref: ["wrap" @ input.sol:10:21] -> built-in
- Ref: ["data" @ input.sol:10:26] -> #4
- Ref: ["nop" @ input.sol:10:32] -> #7
- Ref: ["ShortString" @ input.sol:11:9] -> #1
- Ref: ["unwrap" @ input.sol:11:21] -> built-in
- Ref: ["s" @ input.sol:11:28] -> #5
- Ref: ["pon" @ input.sol:11:31] -> #10
- Ref: ["ShortString" @ input.sol:16:18] -> #1

------------------------------------------------------------------------

Unbound identifiers (0):

------------------------------------------------------------------------

Bindings: 
    ╭─[input.sol:1:1]
    │
  1 │ type ShortString is bytes32;
    │      ─────┬─────  
    │           ╰─────── name: 1
    │ 
  3 │ contract Test {
    │          ──┬─  
    │            ╰─── name: 2
  4 │     using ShortStringLib for ShortString;
    │           ───────┬──────     ─────┬─────  
    │                  ╰──────────────────────── ref: 6
    │                                   │       
    │                                   ╰─────── ref: 1
  5 │     using BytesLib for bytes32;
    │           ────┬───  
    │               ╰───── ref: 9
    │ 
  7 │     function test(bytes32 data) public {
    │              ──┬─         ──┬─  
    │                ╰──────────────── name: 3
    │                             │   
    │                             ╰─── name: 4
  8 │         ShortString s;
    │         ─────┬───── ┬  
    │              ╰───────── ref: 1
    │                     │  
    │                     ╰── name: 5
    │ 
 10 │         ShortString.wrap(data).nop();
    │         ─────┬───── ──┬─ ──┬─  ─┬─  
    │              ╰────────────────────── ref: 1
    │                       │    │    │   
    │                       ╰───────────── built-in
    │                            │    │   
    │                            ╰──────── ref: 4
    │                                 │   
    │                                 ╰─── ref: 7
 11 │         ShortString.unwrap(s).pon();
    │         ─────┬───── ───┬── ┬  ─┬─  
    │              ╰───────────────────── ref: 1
    │                        │   │   │   
    │                        ╰─────────── built-in
    │                            │   │   
    │                            ╰─────── ref: 5
    │                                │   
    │                                ╰─── ref: 10
    │ 
 15 │ library ShortStringLib {
    │         ───────┬──────  
    │                ╰──────── name: 6
 16 │     function nop(ShortString x) internal {}
    │              ─┬─ ─────┬───── ┬  
    │               ╰───────────────── name: 7
    │                       │      │  
    │                       ╰───────── ref: 1
    │                              │  
    │                              ╰── name: 8
    │ 
 19 │ library BytesLib {
    │         ────┬───  
    │             ╰───── name: 9
 20 │     function pon(bytes32 x) internal {}
    │              ─┬─         ┬  
    │               ╰───────────── name: 10
    │                          │  
    │                          ╰── name: 11
────╯
