# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Parse errors:
Error: Expected CloseParen or Comma.
   ╭─[input.sol:9:34]
   │
 9 │     function test(bytes calldata c) public {
   │                                  ┬  
   │                                  ╰── Error occurred here.
───╯

------------------------------------------------------------------------

Definitions (9):
- Def: #1 ["Lib" @ input.sol:1:9] (library)
- Def: #2 ["nopCalldata" @ input.sol:2:14] (function, type: function (bytes calldata) returns void)
- Def: #3 ["calldata" @ input.sol:2:32] (parameter, type: bytes calldata)
- Def: #4 ["nopMemory" @ input.sol:3:14] (function, type: function (bytes memory) returns void)
- Def: #5 ["Test" @ input.sol:6:10] (contract)
- Def: #6 ["s" @ input.sol:8:11] (state var, type: bytes storage)
- Def: #7 ["test" @ input.sol:9:14] (function, type: function (bytes calldata) returns void)
- Def: #8 ["calldata" @ input.sol:9:25] (parameter, type: bytes calldata)
- Def: #9 ["m" @ input.sol:10:22] (variable, type: bytes memory)

------------------------------------------------------------------------

References (13):
- Ref: ["Lib" @ input.sol:7:11] -> #1
- Ref: ["m" @ input.sol:11:9] -> #9
- Ref: ["nopCalldata" @ input.sol:11:11] -> #2
- Ref: ["m" @ input.sol:12:9] -> #9
- Ref: ["nopMemory" @ input.sol:12:11] -> #4
- Ref: ["c" @ input.sol:13:9] -> unresolved
- Ref: ["nopCalldata" @ input.sol:13:11] -> unresolved
- Ref: ["c" @ input.sol:14:9] -> unresolved
- Ref: ["nopMemory" @ input.sol:14:11] -> unresolved
- Ref: ["s" @ input.sol:15:9] -> #6
- Ref: ["nopCalldata" @ input.sol:15:11] -> #2
- Ref: ["s" @ input.sol:16:9] -> #6
- Ref: ["nopMemory" @ input.sol:16:11] -> #4

------------------------------------------------------------------------

Unbound identifiers (0):

------------------------------------------------------------------------

Bindings: 
    ╭─[input.sol:1:1]
    │
  1 │ library Lib {
    │         ─┬─  
    │          ╰─── name: 1
  2 │     function nopCalldata(bytes calldata) external {}
    │              ─────┬─────       ────┬───  
    │                   ╰────────────────────── name: 2
    │                                    │     
    │                                    ╰───── name: 3
  3 │     function nopMemory(bytes memory) external {}
    │              ────┬────  
    │                  ╰────── name: 4
    │ 
  6 │ contract Test {
    │          ──┬─  
    │            ╰─── name: 5
  7 │     using Lib for bytes;
    │           ─┬─  
    │            ╰─── ref: 1
  8 │     bytes s;
    │           ┬  
    │           ╰── name: 6
  9 │     function test(bytes calldata c) public {
    │              ──┬─       ────┬───  
    │                ╰────────────────── name: 7
    │                             │     
    │                             ╰───── name: 8
 10 │         bytes memory m;
    │                      ┬  
    │                      ╰── name: 9
 11 │         m.nopCalldata();
    │         ┬ ─────┬─────  
    │         ╰────────────── ref: 9
    │                │       
    │                ╰─────── ref: 2
 12 │         m.nopMemory();
    │         ┬ ────┬────  
    │         ╰──────────── ref: 9
    │               │      
    │               ╰────── ref: 4
 13 │         c.nopCalldata();
    │         ┬ ─────┬─────  
    │         ╰────────────── unresolved
    │                │       
    │                ╰─────── unresolved
 14 │         c.nopMemory();
    │         ┬ ────┬────  
    │         ╰──────────── unresolved
    │               │      
    │               ╰────── unresolved
 15 │         s.nopCalldata();
    │         ┬ ─────┬─────  
    │         ╰────────────── ref: 6
    │                │       
    │                ╰─────── ref: 2
 16 │         s.nopMemory();
    │         ┬ ────┬────  
    │         ╰──────────── ref: 6
    │               │      
    │               ╰────── ref: 4
────╯
