# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Parse errors:
Error: Expected Equal or Semicolon.
   ╭─[input.sol:6:17]
   │
 6 │         emit Foo(1, 2);
   │                 ───┬──  
   │                    ╰──── Error occurred here.
───╯
Error: Expected Equal or Semicolon.
   ╭─[input.sol:7:17]
   │
 7 │         emit Foo(false);
   │                 ───┬───  
   │                    ╰───── Error occurred here.
───╯
Error: Expected Equal or Semicolon.
   ╭─[input.sol:9:17]
   │
 9 │         emit Foo({ x: 1, y: 2 });
   │                 ────────┬───────  
   │                         ╰───────── Error occurred here.
───╯
Error: Expected Equal or Semicolon.
    ╭─[input.sol:10:17]
    │
 10 │         emit Foo({ flag: true });
    │                 ────────┬───────  
    │                         ╰───────── Error occurred here.
────╯

------------------------------------------------------------------------

Definitions (11):
- Def: #1 ["Test" @ input.sol:1:10] (contract)
- Def: #2 ["Foo" @ input.sol:2:11] (event)
- Def: #3 ["x" @ input.sol:2:20] (parameter, type: uint256)
- Def: #4 ["y" @ input.sol:2:28] (parameter, type: uint256)
- Def: #5 ["Foo" @ input.sol:3:11] (event)
- Def: #6 ["flag" @ input.sol:3:20] (parameter, type: bool)
- Def: #7 ["test" @ input.sol:5:14] (function, type: function () returns void)
- Def: #8 ["Foo" @ input.sol:6:14] (variable, type: unresolved)
- Def: #9 ["Foo" @ input.sol:7:14] (variable, type: unresolved)
- Def: #10 ["Foo" @ input.sol:9:14] (variable, type: unresolved)
- Def: #11 ["Foo" @ input.sol:10:14] (variable, type: unresolved)

------------------------------------------------------------------------

References (4):
- Ref: ["emit" @ input.sol:6:9] -> unresolved
- Ref: ["emit" @ input.sol:7:9] -> unresolved
- Ref: ["emit" @ input.sol:9:9] -> unresolved
- Ref: ["emit" @ input.sol:10:9] -> unresolved

------------------------------------------------------------------------

Unbound identifiers (0):

------------------------------------------------------------------------

Bindings: 
    ╭─[input.sol:1:1]
    │
  1 │ contract Test {
    │          ──┬─  
    │            ╰─── name: 1
  2 │     event Foo(uint x, uint y);
    │           ─┬─      ┬       ┬  
    │            ╰────────────────── name: 2
    │                    │       │  
    │                    ╰────────── name: 3
    │                            │  
    │                            ╰── name: 4
  3 │     event Foo(bool flag);
    │           ─┬─      ──┬─  
    │            ╰───────────── name: 5
    │                      │   
    │                      ╰─── name: 6
    │ 
  5 │     function test() internal {
    │              ──┬─  
    │                ╰─── name: 7
  6 │         emit Foo(1, 2);
    │         ──┬─ ─┬─  
    │           ╰─────── unresolved
    │               │   
    │               ╰─── name: 8
  7 │         emit Foo(false);
    │         ──┬─ ─┬─  
    │           ╰─────── unresolved
    │               │   
    │               ╰─── name: 9
    │ 
  9 │         emit Foo({ x: 1, y: 2 });
    │         ──┬─ ─┬─  
    │           ╰─────── unresolved
    │               │   
    │               ╰─── name: 10
 10 │         emit Foo({ flag: true });
    │         ──┬─ ─┬─  
    │           ╰─────── unresolved
    │               │   
    │               ╰─── name: 11
────╯
