contract Test {
    function test() public {
        assembly {
            add()
            addmod()
            address()
            and()
            balance()
            basefee()
            blobbasefee()
            blobhash()
            blockhash()
            byte()
            call()
            callcode()
            calldatacopy()
            calldataload()
            calldatasize()
            caller()
            callvalue()
            chainid()
            coinbase()
            create()
            create2()
            delegatecall()
            div()
            eq()
            exp()
            extcodecopy()
            extcodehash()
            extcodesize()
            gas()
            gaslimit()
            gasprice()
            gt()
            invalid()
            iszero()
            keccak256()
            log0()
            log1()
            log2()
            log3()
            log4()
            lt()
            mcopy()
            mload()
            mod()
            msize()
            mstore()
            mstore8()
            mul()
            mulmod()
            not()
            number()
            or()
            origin()
            pop()
            prevrandao()
            return()
            returndatacopy()
            returndatasize()
            revert()
            sar()
            sdiv()
            selfbalance()
            selfdestruct()
            sgt()
            shl()
            shr()
            signextend()
            sload()
            slt()
            smod()
            sstore()
            staticcall()
            stop()
            sub()
            timestamp()
            tload()
            tstore()
            xor()
        }
    }
}
