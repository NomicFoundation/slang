# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Definitions (8):
- Def: #1 ["Test" @ input.sol:1:10] (contract)
- Def: #2 ["y" @ input.sol:2:7] (state var, type: int256)
- Def: #3 ["someFunc" @ input.sol:4:12] (function, type: function (int256) returns int256)
- Def: #4 ["x" @ input.sol:4:25] (parameter, type: int256)
- Def: #5 ["farg" @ input.sol:5:9] (variable, type: int256)
- Def: #6 ["literal" @ input.sol:6:9] (variable, type: int256)
- Def: #7 ["add" @ input.sol:9:12] (function, type: function (int256) returns int256)
- Def: #8 ["add" @ input.sol:11:12] (function, type: function (int256) returns int256)

------------------------------------------------------------------------

References (3):
- Ref: ["add" @ input.sol:5:16] -> refs: [7, 8]
- Ref: ["x" @ input.sol:5:20] -> #4
- Ref: ["add" @ input.sol:6:19] -> refs: [7, 8]

------------------------------------------------------------------------

Unbound identifiers (0):

------------------------------------------------------------------------

Bindings: 
    ╭─[input.sol:1:1]
    │
  1 │ contract Test {
    │          ──┬─  
    │            ╰─── name: 1
  2 │   int y;
    │       ┬  
    │       ╰── name: 2
    │ 
  4 │   function someFunc(int x) returns (int) {
    │            ────┬───     ┬  
    │                ╰─────────── name: 3
    │                         │  
    │                         ╰── name: 4
  5 │     int farg = add(x);
    │         ──┬─   ─┬─ ┬  
    │           ╰─────────── name: 5
    │                 │  │  
    │                 ╰───── refs: [7, 8]
    │                    │  
    │                    ╰── ref: 4
  6 │     int literal = add(3);
    │         ───┬───   ─┬─  
    │            ╰─────────── name: 6
    │                    │   
    │                    ╰─── refs: [7, 8]
    │ 
  9 │   function add(int) returns (int);
    │            ─┬─  
    │             ╰─── name: 7
    │ 
 11 │   function add(int) returns (int);
    │            ─┬─  
    │             ╰─── name: 8
────╯
