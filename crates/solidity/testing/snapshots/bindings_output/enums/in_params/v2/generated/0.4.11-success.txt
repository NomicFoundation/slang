# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Definitions (9):
- Def: #1 ["Test" @ input.sol:1:10] (contract)
- Def: #2 ["Answer" @ input.sol:2:10] (enum)
- Def: #3 ["Yes" @ input.sol:2:19] (enum member of Answer)
- Def: #4 ["No" @ input.sol:2:24] (enum member of Answer)
- Def: #5 ["setAnswer" @ input.sol:4:14] (function, type: function (Answer) returns void)
- Def: #6 ["ans" @ input.sol:4:31] (parameter, type: Answer)
- Def: #7 ["getAnswer" @ input.sol:7:14] (function, type: function () returns Answer)
- Def: #8 ["ans" @ input.sol:7:42] (parameter, type: Answer)
- Def: #9 ["getOtherAnswer" @ input.sol:11:14] (function, type: function () returns Answer)

------------------------------------------------------------------------

References (8):
- Ref: ["Answer" @ input.sol:4:24] -> #2
- Ref: ["Answer" @ input.sol:7:35] -> #2
- Ref: ["ans" @ input.sol:8:9] -> #8
- Ref: ["Answer" @ input.sol:8:15] -> #2
- Ref: ["Yes" @ input.sol:8:22] -> #3
- Ref: ["Answer" @ input.sol:11:40] -> #2
- Ref: ["Answer" @ input.sol:12:16] -> #2
- Ref: ["No" @ input.sol:12:23] -> #4

------------------------------------------------------------------------

Unbound identifiers (0):

------------------------------------------------------------------------

Bindings: 
    ╭─[input.sol:1:1]
    │
  1 │ contract Test {
    │          ──┬─  
    │            ╰─── name: 1
  2 │     enum Answer { Yes, No }
    │          ───┬──   ─┬─  ─┬  
    │             ╰────────────── name: 2
    │                    │    │  
    │                    ╰─────── name: 3
    │                         │  
    │                         ╰── name: 4
    │ 
  4 │     function setAnswer(Answer ans) {
    │              ────┬──── ───┬── ─┬─  
    │                  ╰───────────────── name: 5
    │                           │    │   
    │                           ╰──────── ref: 2
    │                                │   
    │                                ╰─── name: 6
    │ 
  7 │     function getAnswer() returns (Answer ans) {
    │              ────┬────            ───┬── ─┬─  
    │                  ╰──────────────────────────── name: 7
    │                                      │    │   
    │                                      ╰──────── ref: 2
    │                                           │   
    │                                           ╰─── name: 8
  8 │         ans = Answer.Yes;
    │         ─┬─   ───┬── ─┬─  
    │          ╰──────────────── ref: 8
    │                  │    │   
    │                  ╰──────── ref: 2
    │                       │   
    │                       ╰─── ref: 3
    │ 
 11 │     function getOtherAnswer() returns (Answer) {
    │              ───────┬──────            ───┬──  
    │                     ╰────────────────────────── name: 9
    │                                           │    
    │                                           ╰──── ref: 2
 12 │         return Answer.No;
    │                ───┬── ─┬  
    │                   ╰─────── ref: 2
    │                        │  
    │                        ╰── ref: 4
────╯
