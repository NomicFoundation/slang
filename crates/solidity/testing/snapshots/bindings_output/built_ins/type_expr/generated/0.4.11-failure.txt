# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Parse errors:
Error: Expected AddressKeyword or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or DoubleQuotedHexStringLiteral or DoubleQuotedStringLiteral or FalseKeyword or FixedKeyword or HexLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or SingleQuotedHexStringLiteral or SingleQuotedStringLiteral or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword.
   ╭─[input.sol:9:28]
   │
 9 │         string memory v1 = type(Sample).name;
   │                            ────────┬────────  
   │                                    ╰────────── Error occurred here.
───╯
Error: Expected AddressKeyword or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or DoubleQuotedHexStringLiteral or DoubleQuotedStringLiteral or FalseKeyword or FixedKeyword or HexLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or SingleQuotedHexStringLiteral or SingleQuotedStringLiteral or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword.
    ╭─[input.sol:10:27]
    │
 10 │         bytes memory v2 = type(Sample).creationCode;
    │                           ────────────┬────────────  
    │                                       ╰────────────── Error occurred here.
────╯
Error: Expected AddressKeyword or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or DoubleQuotedHexStringLiteral or DoubleQuotedStringLiteral or FalseKeyword or FixedKeyword or HexLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or SingleQuotedHexStringLiteral or SingleQuotedStringLiteral or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword.
    ╭─[input.sol:11:27]
    │
 11 │         bytes memory v3 = type(Sample).runtimeCode;
    │                           ────────────┬───────────  
    │                                       ╰───────────── Error occurred here.
────╯
Error: Expected AddressKeyword or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or DoubleQuotedHexStringLiteral or DoubleQuotedStringLiteral or FalseKeyword or FixedKeyword or HexLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or SingleQuotedHexStringLiteral or SingleQuotedStringLiteral or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword.
    ╭─[input.sol:12:21]
    │
 12 │         bytes4 v4 = type(ISample).interfaceId;
    │                     ────────────┬────────────  
    │                                 ╰────────────── Error occurred here.
────╯
Error: Expected AddressKeyword or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or DoubleQuotedHexStringLiteral or DoubleQuotedStringLiteral or FalseKeyword or FixedKeyword or HexLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or SingleQuotedHexStringLiteral or SingleQuotedStringLiteral or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword.
    ╭─[input.sol:13:24]
    │
 13 │         Direction v5 = type(Direction).min;
    │                        ─────────┬─────────  
    │                                 ╰─────────── Error occurred here.
────╯
Error: Expected AddressKeyword or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or DoubleQuotedHexStringLiteral or DoubleQuotedStringLiteral or FalseKeyword or FixedKeyword or HexLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or SingleQuotedHexStringLiteral or SingleQuotedStringLiteral or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword.
    ╭─[input.sol:14:24]
    │
 14 │         Direction v6 = type(Direction).max;
    │                        ─────────┬─────────  
    │                                 ╰─────────── Error occurred here.
────╯
Error: Expected AddressKeyword or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or DoubleQuotedHexStringLiteral or DoubleQuotedStringLiteral or FalseKeyword or FixedKeyword or HexLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or SingleQuotedHexStringLiteral or SingleQuotedStringLiteral or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword.
    ╭─[input.sol:15:19]
    │
 15 │         uint v7 = type(uint).min;
    │                   ───────┬──────  
    │                          ╰──────── Error occurred here.
────╯
Error: Expected AddressKeyword or BoolKeyword or ByteKeyword or BytesKeyword or DecimalLiteral or DoubleQuotedHexStringLiteral or DoubleQuotedStringLiteral or FalseKeyword or FixedKeyword or HexLiteral or Identifier or IntKeyword or NewKeyword or OpenBracket or OpenParen or SingleQuotedHexStringLiteral or SingleQuotedStringLiteral or StringKeyword or TrueKeyword or UfixedKeyword or UintKeyword.
    ╭─[input.sol:16:19]
    │
 16 │         uint v8 = type(uint).max;
    │                   ───────┬──────  
    │                          ╰──────── Error occurred here.
────╯
References and definitions: 
    ╭─[input.sol:1:1]
    │
  1 │ contract Sample {}
    │          ───┬──  
    │             ╰──── def: 1
    │ 
  3 │ interface ISample {}
    │           ───┬───  
    │              ╰───── def: 2
    │ 
  5 │ contract Test {
    │          ──┬─  
    │            ╰─── def: 3
  6 │     enum Direction { North, South, West, East }
    │          ────┬────   ──┬──  ──┬──  ──┬─  ──┬─  
    │              ╰───────────────────────────────── def: 4
    │                        │      │      │     │   
    │                        ╰─────────────────────── def: 5
    │                               │      │     │   
    │                               ╰──────────────── def: 6
    │                                      │     │   
    │                                      ╰───────── def: 7
    │                                            │   
    │                                            ╰─── def: 8
    │ 
  8 │         function test() public {
    │                  ──┬─  
    │                    ╰─── def: 9
  9 │         string memory v1 = type(Sample).name;
    │                       ─┬  
    │                        ╰── def: 10
 10 │         bytes memory v2 = type(Sample).creationCode;
    │                      ─┬  
    │                       ╰── def: 11
 11 │         bytes memory v3 = type(Sample).runtimeCode;
    │                      ─┬  
    │                       ╰── def: 12
 12 │         bytes4 v4 = type(ISample).interfaceId;
    │                ─┬  
    │                 ╰── def: 13
 13 │         Direction v5 = type(Direction).min;
    │         ────┬──── ─┬  
    │             ╰───────── ref: 4
    │                    │  
    │                    ╰── def: 14
 14 │         Direction v6 = type(Direction).max;
    │         ────┬──── ─┬  
    │             ╰───────── ref: 4
    │                    │  
    │                    ╰── def: 15
 15 │         uint v7 = type(uint).min;
    │              ─┬  
    │               ╰── def: 16
 16 │         uint v8 = type(uint).max;
    │              ─┬  
    │               ╰── def: 17
────╯
