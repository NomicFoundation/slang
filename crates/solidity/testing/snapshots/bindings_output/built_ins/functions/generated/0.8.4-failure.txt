# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

References and definitions: 
    ╭─[input.sol:1:1]
    │
  1 │ contract BuiltInsTest {
    │          ──────┬─────  
    │                ╰─────── def: 1
  2 │     function testRequire() public {
    │              ─────┬─────  
    │                   ╰─────── def: 2
  3 │         require(true, "should always succeed");
    │         ───┬───  
    │            ╰───── refs: built-in, built-in
    │ 
  6 │     function testRevert() public {
    │              ─────┬────  
    │                   ╰────── def: 3
    │ 
 10 │     function testAssert() public {
    │              ─────┬────  
    │                   ╰────── def: 4
 11 │         assert(2 + 2 == 4);
    │         ───┬──  
    │            ╰──── ref: built-in
    │ 
 14 │     function testMath() public {
    │              ────┬───  
    │                  ╰───── def: 5
 15 │         bytes memory x1;
    │                      ─┬  
    │                       ╰── def: 6
    │ 
 17 │         uint v1 = addmod(1, 2, 3);
    │              ─┬   ───┬──  
    │               ╰─────────── def: 7
    │                      │    
    │                      ╰──── ref: built-in
 18 │         bytes32 v2 = blockhash(1);
    │                 ─┬   ────┬────  
    │                  ╰────────────── def: 8
    │                          │      
    │                          ╰────── ref: built-in
 19 │         bytes32 v3 = blobhash(2);
    │                 ─┬   ────┬───  
    │                  ╰───────────── def: 9
    │                          │     
    │                          ╰───── unresolved
 20 │         address v4 = ecrecover(v2, 1, v2, v2);
    │                 ─┬   ────┬──── ─┬     ─┬  ─┬  
    │                  ╰──────────────────────────── def: 10
    │                          │      │      │   │  
    │                          ╰──────────────────── ref: built-in
    │                                 │      │   │  
    │                                 ╰───────────── ref: 8
    │                                        │   │  
    │                                        ╰────── ref: 8
    │                                            │  
    │                                            ╰── ref: 8
 21 │         uint256 v5 = gasleft();
    │                 ─┬   ───┬───  
    │                  ╰──────────── def: 11
    │                         │     
    │                         ╰───── ref: built-in
 22 │         bytes32 v6 = keccak256(x1);
    │                 ─┬   ────┬──── ─┬  
    │                  ╰───────────────── def: 12
    │                          │      │  
    │                          ╰───────── ref: built-in
    │                                 │  
    │                                 ╰── ref: 6
 23 │         uint v7 = mulmod(1, 2, 3);
    │              ─┬   ───┬──  
    │               ╰─────────── def: 13
    │                      │    
    │                      ╰──── ref: built-in
 24 │         bytes20 v8 = ripemd160(x1);
    │                 ─┬   ────┬──── ─┬  
    │                  ╰───────────────── def: 14
    │                          │      │  
    │                          ╰───────── ref: built-in
    │                                 │  
    │                                 ╰── ref: 6
 25 │         bytes32 v9 = sha256(x1);
    │                 ─┬   ───┬── ─┬  
    │                  ╰────────────── def: 15
    │                         │    │  
    │                         ╰─────── ref: built-in
    │                              │  
    │                              ╰── ref: 6
    │ 
 28 │     function testSelfDestruct() public {
    │              ────────┬───────  
    │                      ╰───────── def: 16
 29 │         selfdestruct(address(0x0));
    │         ──────┬─────  
    │               ╰─────── ref: built-in
    │ 
 32 │     function testAbiFunctions() public {
    │              ────────┬───────  
    │                      ╰───────── def: 17
 33 │         bytes memory x1;
    │                      ─┬  
    │                       ╰── def: 18
 34 │         uint v1 = abi.decode(x1, (uint));
    │              ─┬   ─┬─ ───┬── ─┬  
    │               ╰────────────────── def: 19
    │                    │     │    │  
    │                    ╰───────────── ref: built-in
    │                          │    │  
    │                          ╰─────── ref: built-in
    │                               │  
    │                               ╰── ref: 18
 35 │         bytes memory v2 = abi.encode(v1);
    │                      ─┬   ─┬─ ───┬── ─┬  
    │                       ╰────────────────── def: 20
    │                            │     │    │  
    │                            ╰───────────── ref: built-in
    │                                  │    │  
    │                                  ╰─────── ref: built-in
    │                                       │  
    │                                       ╰── ref: 19
 36 │         bytes memory v3 = abi.encodeCall(this.testMath, (1, 2, 3));
    │                      ─┬   ─┬─ ─────┬──── ──┬─ ────┬───  
    │                       ╰───────────────────────────────── def: 21
    │                            │       │       │      │     
    │                            ╰──────────────────────────── ref: built-in
    │                                    │       │      │     
    │                                    ╰──────────────────── unresolved
    │                                            │      │     
    │                                            ╰──────────── ref: 1
    │                                                   │     
    │                                                   ╰───── ref: 5
 37 │         bytes memory v4 = abi.encodePacked(10, 20);
    │                      ─┬   ─┬─ ──────┬─────  
    │                       ╰───────────────────── def: 22
    │                            │        │       
    │                            ╰──────────────── ref: built-in
    │                                     │       
    │                                     ╰─────── ref: built-in
 38 │         bytes memory v5 = abi.encodeWithSelector(this.testMath.selector, (1, 2, 3));
    │                      ─┬   ─┬─ ─────────┬──────── ──┬─ ────┬─── ────┬───  
    │                       ╰────────────────────────────────────────────────── def: 23
    │                            │           │           │      │        │     
    │                            ╰───────────────────────────────────────────── ref: built-in
    │                                        │           │      │        │     
    │                                        ╰───────────────────────────────── ref: built-in
    │                                                    │      │        │     
    │                                                    ╰───────────────────── ref: 1
    │                                                           │        │     
    │                                                           ╰────────────── ref: 5
    │                                                                    │     
    │                                                                    ╰───── ref: built-in
 39 │         string memory x2;
    │                       ─┬  
    │                        ╰── def: 24
 40 │         bytes memory v6 = abi.encodeWithSignature(x2, (1, 2, 3));
    │                      ─┬   ─┬─ ─────────┬───────── ─┬  
    │                       ╰─────────────────────────────── def: 25
    │                            │           │           │  
    │                            ╰────────────────────────── ref: built-in
    │                                        │           │  
    │                                        ╰────────────── ref: built-in
    │                                                    │  
    │                                                    ╰── ref: 24
────╯
