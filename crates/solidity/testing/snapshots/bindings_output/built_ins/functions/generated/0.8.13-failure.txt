# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

References and definitions: 
    ╭─[input.sol:1:1]
    │
  1 │ contract BuiltInsTest {
    │          ──────┬─────  
    │                ╰─────── name: 1
  2 │     function testRequire() public {
    │              ─────┬─────  
    │                   ╰─────── name: 2
  3 │         require(true, "should always succeed");
    │         ───┬───  
    │            ╰───── refs: built-in, built-in
    │ 
  6 │     function testRevert() public {
    │              ─────┬────  
    │                   ╰────── name: 3
    │ 
 10 │     function testAssert() public {
    │              ─────┬────  
    │                   ╰────── name: 4
 11 │         assert(2 + 2 == 4);
    │         ───┬──  
    │            ╰──── ref: built-in
    │ 
 14 │     function testMath() public {
    │              ────┬───  
    │                  ╰───── name: 5
 15 │         bytes memory x1;
    │                      ─┬  
    │                       ╰── name: 6
    │ 
 17 │         uint v1 = addmod(1, 2, 3);
    │              ─┬   ───┬──  
    │               ╰─────────── name: 7
    │                      │    
    │                      ╰──── ref: built-in
 18 │         bytes32 v2 = blockhash(1);
    │                 ─┬   ────┬────  
    │                  ╰────────────── name: 8
    │                          │      
    │                          ╰────── ref: built-in
 19 │         bytes32 v3 = blobhash(2);
    │                 ─┬   ────┬───  
    │                  ╰───────────── name: 9
    │                          │     
    │                          ╰───── unresolved
 20 │         address v4 = ecrecover(v2, 1, v2, v2);
    │                 ─┬   ────┬──── ─┬     ─┬  ─┬  
    │                  ╰──────────────────────────── name: 10
    │                          │      │      │   │  
    │                          ╰──────────────────── ref: built-in
    │                                 │      │   │  
    │                                 ╰───────────── ref: 8
    │                                        │   │  
    │                                        ╰────── ref: 8
    │                                            │  
    │                                            ╰── ref: 8
 21 │         uint256 v5 = gasleft();
    │                 ─┬   ───┬───  
    │                  ╰──────────── name: 11
    │                         │     
    │                         ╰───── ref: built-in
 22 │         bytes32 v6 = keccak256(x1);
    │                 ─┬   ────┬──── ─┬  
    │                  ╰───────────────── name: 12
    │                          │      │  
    │                          ╰───────── ref: built-in
    │                                 │  
    │                                 ╰── ref: 6
 23 │         uint v7 = mulmod(1, 2, 3);
    │              ─┬   ───┬──  
    │               ╰─────────── name: 13
    │                      │    
    │                      ╰──── ref: built-in
 24 │         bytes20 v8 = ripemd160(x1);
    │                 ─┬   ────┬──── ─┬  
    │                  ╰───────────────── name: 14
    │                          │      │  
    │                          ╰───────── ref: built-in
    │                                 │  
    │                                 ╰── ref: 6
 25 │         bytes32 v9 = sha256(x1);
    │                 ─┬   ───┬── ─┬  
    │                  ╰────────────── name: 15
    │                         │    │  
    │                         ╰─────── ref: built-in
    │                              │  
    │                              ╰── ref: 6
    │ 
 28 │     function testSelfDestruct() public {
    │              ────────┬───────  
    │                      ╰───────── name: 16
 29 │         selfdestruct(address(0x0));
    │         ──────┬─────  
    │               ╰─────── ref: built-in
    │ 
 32 │     function testAbiFunctions() public {
    │              ────────┬───────  
    │                      ╰───────── name: 17
 33 │         bytes memory x1;
    │                      ─┬  
    │                       ╰── name: 18
 34 │         uint v1 = abi.decode(x1, (uint));
    │              ─┬   ─┬─ ───┬── ─┬  
    │               ╰────────────────── name: 19
    │                    │     │    │  
    │                    ╰───────────── ref: built-in
    │                          │    │  
    │                          ╰─────── ref: built-in
    │                               │  
    │                               ╰── ref: 18
 35 │         bytes memory v2 = abi.encode(v1);
    │                      ─┬   ─┬─ ───┬── ─┬  
    │                       ╰────────────────── name: 20
    │                            │     │    │  
    │                            ╰───────────── ref: built-in
    │                                  │    │  
    │                                  ╰─────── ref: built-in
    │                                       │  
    │                                       ╰── ref: 19
 36 │         bytes memory v3 = abi.encodeCall(this.testMath, (1, 2, 3));
    │                      ─┬   ─┬─ ─────┬────      ────┬───  
    │                       ╰───────────────────────────────── name: 21
    │                            │       │              │     
    │                            ╰──────────────────────────── ref: built-in
    │                                    │              │     
    │                                    ╰──────────────────── ref: built-in
    │                                                   │     
    │                                                   ╰───── ref: 5
 37 │         bytes memory v4 = abi.encodePacked(10, 20);
    │                      ─┬   ─┬─ ──────┬─────  
    │                       ╰───────────────────── name: 22
    │                            │        │       
    │                            ╰──────────────── ref: built-in
    │                                     │       
    │                                     ╰─────── ref: built-in
 38 │         bytes memory v5 = abi.encodeWithSelector(this.testMath.selector, (1, 2, 3));
    │                      ─┬   ─┬─ ─────────┬────────      ────┬─── ────┬───  
    │                       ╰────────────────────────────────────────────────── name: 23
    │                            │           │                  │        │     
    │                            ╰───────────────────────────────────────────── ref: built-in
    │                                        │                  │        │     
    │                                        ╰───────────────────────────────── ref: built-in
    │                                                           │        │     
    │                                                           ╰────────────── ref: 5
    │                                                                    │     
    │                                                                    ╰───── ref: built-in
 39 │         string memory x2;
    │                       ─┬  
    │                        ╰── name: 24
 40 │         bytes memory v6 = abi.encodeWithSignature(x2, (1, 2, 3));
    │                      ─┬   ─┬─ ─────────┬───────── ─┬  
    │                       ╰─────────────────────────────── name: 25
    │                            │           │           │  
    │                            ╰────────────────────────── ref: built-in
    │                                        │           │  
    │                                        ╰────────────── ref: built-in
    │                                                    │  
    │                                                    ╰── ref: 24
────╯
Definiens: 
    ╭─[input.sol:1:1]
    │
  1 │ ╭─────│ ────────▶ contract BuiltInsTest {
  2 │ │     ╭─────────▶     function testRequire() public {
    ┆ ┆     ┆           
  4 │ │     ├───│ ────▶     }
    │ │     │   │               
    │ │     ╰─────────────────── definiens: 2
  5 │ │         ╭─────▶ 
    ┆ ┆         ┆       
  8 │ │         ├─│ ──▶     }
    │ │         │ │             
    │ │         ╰─────────────── definiens: 3
  9 │ │           ╭───▶ 
    ┆ ┆           ┆     
 12 │ │   │       ├───▶     }
    │ │   │       │             
    │ │   │       ╰───────────── definiens: 4
 13 │ │   ╭───────────▶ 
    ┆ ┆   ┆             
 15 │ │   │         │           bytes memory x1;
    │ │   │         │   ────────────┬────────────  
    │ │   │         │               ╰────────────── definiens: 6
 16 │ │   │         ╭─▶ 
 17 │ │   │         ├─▶         uint v1 = addmod(1, 2, 3);
    │ │   │         │                                        
    │ │   │         ╰──────────────────────────────────────── definiens: 7
 18 │ │   │                     bytes32 v2 = blockhash(1);
    │ │   │             ─────────────────┬─────────────────  
    │ │   │                              ╰─────────────────── definiens: 8
 19 │ │   │                     bytes32 v3 = blobhash(2);
    │ │   │             ─────────────────┬────────────────  
    │ │   │                              ╰────────────────── definiens: 9
 20 │ │   │                     address v4 = ecrecover(v2, 1, v2, v2);
    │ │   │             ───────────────────────┬───────────────────────  
    │ │   │                                    ╰───────────────────────── definiens: 10
 21 │ │   │                     uint256 v5 = gasleft();
    │ │   │             ────────────────┬───────────────  
    │ │   │                             ╰───────────────── definiens: 11
 22 │ │   │                     bytes32 v6 = keccak256(x1);
    │ │   │             ──────────────────┬─────────────────  
    │ │   │                               ╰─────────────────── definiens: 12
 23 │ │   │                     uint v7 = mulmod(1, 2, 3);
    │ │   │             ─────────────────┬─────────────────  
    │ │   │                              ╰─────────────────── definiens: 13
 24 │ │   │                     bytes20 v8 = ripemd160(x1);
    │ │   │             ──────────────────┬─────────────────  
    │ │   │                               ╰─────────────────── definiens: 14
 25 │ │   │                     bytes32 v9 = sha256(x1);
    │ │   │             ────────────────┬────────────────  
    │ │   │                             ╰────────────────── definiens: 15
 26 │ │   ├───│ ──────▶     }
    │ │   │   │                 
    │ │   ╰───────────────────── definiens: 5
 27 │ │       ╭───────▶ 
    ┆ ┆       ┆         
 30 │ │ │     ├───────▶     }
    │ │ │     │                 
    │ │ │     ╰───────────────── definiens: 16
 31 │ │ ╭─────────────▶ 
    ┆ ┆ ┆               
 33 │ │ │                       bytes memory x1;
    │ │ │               ────────────┬────────────  
    │ │ │                           ╰────────────── definiens: 18
 34 │ │ │                       uint v1 = abi.decode(x1, (uint));
    │ │ │               ─────────────────────┬────────────────────  
    │ │ │                                    ╰────────────────────── definiens: 19
 35 │ │ │                       bytes memory v2 = abi.encode(v1);
    │ │ │               ─────────────────────┬────────────────────  
    │ │ │                                    ╰────────────────────── definiens: 20
 36 │ │ │                       bytes memory v3 = abi.encodeCall(this.testMath, (1, 2, 3));
    │ │ │               ──────────────────────────────────┬─────────────────────────────────  
    │ │ │                                                 ╰─────────────────────────────────── definiens: 21
 37 │ │ │                       bytes memory v4 = abi.encodePacked(10, 20);
    │ │ │               ──────────────────────────┬─────────────────────────  
    │ │ │                                         ╰─────────────────────────── definiens: 22
 38 │ │ │                       bytes memory v5 = abi.encodeWithSelector(this.testMath.selector, (1, 2, 3));
    │ │ │               ──────────────────────────────────────────┬──────────────────────────────────────────  
    │ │ │                                                         ╰──────────────────────────────────────────── definiens: 23
 39 │ │ │                       string memory x2;
    │ │ │               ─────────────┬────────────  
    │ │ │                            ╰────────────── definiens: 24
 40 │ │ │                       bytes memory v6 = abi.encodeWithSignature(x2, (1, 2, 3));
    │ │ │               ─────────────────────────────────┬────────────────────────────────  
    │ │ │                                                ╰────────────────────────────────── definiens: 25
 41 │ │ ├─────────────▶     }
    │ │ │                       
    │ │ ╰─────────────────────── definiens: 17
 42 │ ├───────────────▶ }
    │ │                     
    │ ╰───────────────────── definiens: 1
────╯
