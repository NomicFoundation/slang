# This file is generated automatically by infrastructure scripts. Please don't edit by hand.

Definitions (25):
- Def: #1 ["BuiltInsTest" @ input.sol:1:10] (contract)
- Def: #2 ["testRequire" @ input.sol:2:14] (function, type: function () returns void)
- Def: #3 ["testRevert" @ input.sol:6:14] (function, type: function () returns void)
- Def: #4 ["testAssert" @ input.sol:10:14] (function, type: function () returns void)
- Def: #5 ["testMath" @ input.sol:14:14] (function, type: function () returns void)
- Def: #6 ["x1" @ input.sol:15:22] (variable, type: bytes memory)
- Def: #7 ["v1" @ input.sol:17:14] (variable, type: uint256)
- Def: #8 ["v2" @ input.sol:18:17] (variable, type: bytes32)
- Def: #9 ["v3" @ input.sol:19:17] (variable, type: bytes32)
- Def: #10 ["v4" @ input.sol:20:17] (variable, type: address)
- Def: #11 ["v5" @ input.sol:21:17] (variable, type: uint256)
- Def: #12 ["v6" @ input.sol:22:17] (variable, type: bytes32)
- Def: #13 ["v7" @ input.sol:23:14] (variable, type: uint256)
- Def: #14 ["v8" @ input.sol:24:17] (variable, type: bytes20)
- Def: #15 ["v9" @ input.sol:25:17] (variable, type: bytes32)
- Def: #16 ["testSelfDestruct" @ input.sol:28:14] (function, type: function () returns void)
- Def: #17 ["testAbiFunctions" @ input.sol:32:14] (function, type: function () returns void)
- Def: #18 ["x1" @ input.sol:33:22] (variable, type: bytes memory)
- Def: #19 ["v1" @ input.sol:34:14] (variable, type: uint256)
- Def: #20 ["v2" @ input.sol:35:22] (variable, type: bytes memory)
- Def: #21 ["v3" @ input.sol:36:22] (variable, type: bytes memory)
- Def: #22 ["v4" @ input.sol:37:22] (variable, type: bytes memory)
- Def: #23 ["v5" @ input.sol:38:22] (variable, type: bytes memory)
- Def: #24 ["x2" @ input.sol:39:23] (variable, type: string memory)
- Def: #25 ["v6" @ input.sol:40:22] (variable, type: bytes memory)

------------------------------------------------------------------------

References (37):
- Ref: ["require" @ input.sol:3:9] -> built-in
- Ref: ["revert" @ input.sol:7:9] -> built-in
- Ref: ["assert" @ input.sol:11:9] -> built-in
- Ref: ["addmod" @ input.sol:17:19] -> built-in
- Ref: ["blockhash" @ input.sol:18:22] -> unresolved
- Ref: ["blobhash" @ input.sol:19:22] -> unresolved
- Ref: ["ecrecover" @ input.sol:20:22] -> built-in
- Ref: ["v2" @ input.sol:20:32] -> #8
- Ref: ["v2" @ input.sol:20:39] -> #8
- Ref: ["v2" @ input.sol:20:43] -> #8
- Ref: ["gasleft" @ input.sol:21:22] -> built-in
- Ref: ["keccak256" @ input.sol:22:22] -> built-in
- Ref: ["x1" @ input.sol:22:32] -> #6
- Ref: ["mulmod" @ input.sol:23:19] -> built-in
- Ref: ["ripemd160" @ input.sol:24:22] -> built-in
- Ref: ["x1" @ input.sol:24:32] -> #6
- Ref: ["sha256" @ input.sol:25:22] -> built-in
- Ref: ["x1" @ input.sol:25:29] -> #6
- Ref: ["selfdestruct" @ input.sol:29:9] -> built-in
- Ref: ["abi" @ input.sol:34:19] -> built-in
- Ref: ["decode" @ input.sol:34:23] -> unresolved
- Ref: ["x1" @ input.sol:34:30] -> #18
- Ref: ["abi" @ input.sol:35:27] -> built-in
- Ref: ["encode" @ input.sol:35:31] -> unresolved
- Ref: ["v1" @ input.sol:35:38] -> #19
- Ref: ["abi" @ input.sol:36:27] -> built-in
- Ref: ["encodeCall" @ input.sol:36:31] -> unresolved
- Ref: ["testMath" @ input.sol:36:47] -> #5
- Ref: ["abi" @ input.sol:37:27] -> built-in
- Ref: ["encodePacked" @ input.sol:37:31] -> unresolved
- Ref: ["abi" @ input.sol:38:27] -> built-in
- Ref: ["encodeWithSelector" @ input.sol:38:31] -> unresolved
- Ref: ["testMath" @ input.sol:38:55] -> #5
- Ref: ["selector" @ input.sol:38:64] -> unresolved
- Ref: ["abi" @ input.sol:40:27] -> built-in
- Ref: ["encodeWithSignature" @ input.sol:40:31] -> unresolved
- Ref: ["x2" @ input.sol:40:51] -> #24

------------------------------------------------------------------------

Unbound identifiers (0):

------------------------------------------------------------------------

Bindings: 
    ╭─[input.sol:1:1]
    │
  1 │ contract BuiltInsTest {
    │          ──────┬─────  
    │                ╰─────── name: 1
  2 │     function testRequire() public {
    │              ─────┬─────  
    │                   ╰─────── name: 2
  3 │         require(true, "should always succeed");
    │         ───┬───  
    │            ╰───── built-in
    │ 
  6 │     function testRevert() public {
    │              ─────┬────  
    │                   ╰────── name: 3
  7 │         revert("testing revert");
    │         ───┬──  
    │            ╰──── built-in
    │ 
 10 │     function testAssert() public {
    │              ─────┬────  
    │                   ╰────── name: 4
 11 │         assert(2 + 2 == 4);
    │         ───┬──  
    │            ╰──── built-in
    │ 
 14 │     function testMath() public {
    │              ────┬───  
    │                  ╰───── name: 5
 15 │         bytes memory x1;
    │                      ─┬  
    │                       ╰── name: 6
    │ 
 17 │         uint v1 = addmod(1, 2, 3);
    │              ─┬   ───┬──  
    │               ╰─────────── name: 7
    │                      │    
    │                      ╰──── built-in
 18 │         bytes32 v2 = blockhash(1);
    │                 ─┬   ────┬────  
    │                  ╰────────────── name: 8
    │                          │      
    │                          ╰────── unresolved
 19 │         bytes32 v3 = blobhash(2);
    │                 ─┬   ────┬───  
    │                  ╰───────────── name: 9
    │                          │     
    │                          ╰───── unresolved
 20 │         address v4 = ecrecover(v2, 1, v2, v2);
    │                 ─┬   ────┬──── ─┬     ─┬  ─┬  
    │                  ╰──────────────────────────── name: 10
    │                          │      │      │   │  
    │                          ╰──────────────────── built-in
    │                                 │      │   │  
    │                                 ╰───────────── ref: 8
    │                                        │   │  
    │                                        ╰────── ref: 8
    │                                            │  
    │                                            ╰── ref: 8
 21 │         uint256 v5 = gasleft();
    │                 ─┬   ───┬───  
    │                  ╰──────────── name: 11
    │                         │     
    │                         ╰───── built-in
 22 │         bytes32 v6 = keccak256(x1);
    │                 ─┬   ────┬──── ─┬  
    │                  ╰───────────────── name: 12
    │                          │      │  
    │                          ╰───────── built-in
    │                                 │  
    │                                 ╰── ref: 6
 23 │         uint v7 = mulmod(1, 2, 3);
    │              ─┬   ───┬──  
    │               ╰─────────── name: 13
    │                      │    
    │                      ╰──── built-in
 24 │         bytes20 v8 = ripemd160(x1);
    │                 ─┬   ────┬──── ─┬  
    │                  ╰───────────────── name: 14
    │                          │      │  
    │                          ╰───────── built-in
    │                                 │  
    │                                 ╰── ref: 6
 25 │         bytes32 v9 = sha256(x1);
    │                 ─┬   ───┬── ─┬  
    │                  ╰────────────── name: 15
    │                         │    │  
    │                         ╰─────── built-in
    │                              │  
    │                              ╰── ref: 6
    │ 
 28 │     function testSelfDestruct() public {
    │              ────────┬───────  
    │                      ╰───────── name: 16
 29 │         selfdestruct(address(0x0));
    │         ──────┬─────  
    │               ╰─────── built-in
    │ 
 32 │     function testAbiFunctions() public {
    │              ────────┬───────  
    │                      ╰───────── name: 17
 33 │         bytes memory x1;
    │                      ─┬  
    │                       ╰── name: 18
 34 │         uint v1 = abi.decode(x1, (uint));
    │              ─┬   ─┬─ ───┬── ─┬  
    │               ╰────────────────── name: 19
    │                    │     │    │  
    │                    ╰───────────── built-in
    │                          │    │  
    │                          ╰─────── unresolved
    │                               │  
    │                               ╰── ref: 18
 35 │         bytes memory v2 = abi.encode(v1);
    │                      ─┬   ─┬─ ───┬── ─┬  
    │                       ╰────────────────── name: 20
    │                            │     │    │  
    │                            ╰───────────── built-in
    │                                  │    │  
    │                                  ╰─────── unresolved
    │                                       │  
    │                                       ╰── ref: 19
 36 │         bytes memory v3 = abi.encodeCall(this.testMath, (1, 2, 3));
    │                      ─┬   ─┬─ ─────┬────      ────┬───  
    │                       ╰───────────────────────────────── name: 21
    │                            │       │              │     
    │                            ╰──────────────────────────── built-in
    │                                    │              │     
    │                                    ╰──────────────────── unresolved
    │                                                   │     
    │                                                   ╰───── ref: 5
 37 │         bytes memory v4 = abi.encodePacked(10, 20);
    │                      ─┬   ─┬─ ──────┬─────  
    │                       ╰───────────────────── name: 22
    │                            │        │       
    │                            ╰──────────────── built-in
    │                                     │       
    │                                     ╰─────── unresolved
 38 │         bytes memory v5 = abi.encodeWithSelector(this.testMath.selector, (1, 2, 3));
    │                      ─┬   ─┬─ ─────────┬────────      ────┬─── ────┬───  
    │                       ╰────────────────────────────────────────────────── name: 23
    │                            │           │                  │        │     
    │                            ╰───────────────────────────────────────────── built-in
    │                                        │                  │        │     
    │                                        ╰───────────────────────────────── unresolved
    │                                                           │        │     
    │                                                           ╰────────────── ref: 5
    │                                                                    │     
    │                                                                    ╰───── unresolved
 39 │         string memory x2;
    │                       ─┬  
    │                        ╰── name: 24
 40 │         bytes memory v6 = abi.encodeWithSignature(x2, (1, 2, 3));
    │                      ─┬   ─┬─ ─────────┬───────── ─┬  
    │                       ╰─────────────────────────────── name: 25
    │                            │           │           │  
    │                            ╰────────────────────────── built-in
    │                                        │           │  
    │                                        ╰────────────── unresolved
    │                                                    │  
    │                                                    ╰── ref: 24
────╯
