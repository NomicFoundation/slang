// This file is generated automatically by infrastructure scripts. Please don't edit by hand.

#[repr(u16)]
#[derive(
    Debug,
    Eq,
    Hash,
    Ord,
    PartialEq,
    PartialOrd,
    serde::Serialize,
    strum_macros::AsRefStr,
    strum_macros::Display,
    strum_macros::EnumString,
    strum_macros::IntoStaticStr,
    Clone,
    Copy,
)]
#[allow(clippy::upper_case_acronyms)]
pub enum TerminalKind {
    // Built-in:
    UNRECOGNIZED,
    MISSING,

    // Generated:
    AbicoderKeyword,
    AbstractKeyword,
    AddressKeyword,
    AfterKeyword,
    AliasKeyword,
    Ampersand,
    AmpersandAmpersand,
    AmpersandEqual,
    AnonymousKeyword,
    ApplyKeyword,
    AsKeyword,
    AssemblyKeyword,
    Asterisk,
    AsteriskAsterisk,
    AsteriskEqual,
    AutoKeyword,
    Bang,
    BangEqual,
    Bar,
    BarBar,
    BarEqual,
    BoolKeyword,
    BreakKeyword,
    ByteKeyword,
    BytesKeyword,
    CallDataKeyword,
    Caret,
    CaretEqual,
    CaseKeyword,
    CatchKeyword,
    CloseBrace,
    CloseBracket,
    CloseParen,
    Colon,
    ColonEqual,
    Comma,
    ConstantKeyword,
    ConstructorKeyword,
    ContinueKeyword,
    ContractKeyword,
    CopyOfKeyword,
    DaysKeyword,
    DecimalLiteral,
    DefaultKeyword,
    DefineKeyword,
    DeleteKeyword,
    DoKeyword,
    DoubleQuotedHexStringLiteral,
    DoubleQuotedStringLiteral,
    DoubleQuotedUnicodeStringLiteral,
    DoubleQuotedVersionLiteral,
    ElseKeyword,
    EmitKeyword,
    EndOfLine,
    EnumKeyword,
    Equal,
    EqualColon,
    EqualEqual,
    EqualGreaterThan,
    ErrorKeyword,
    EtherKeyword,
    EventKeyword,
    ExperimentalKeyword,
    ExternalKeyword,
    FallbackKeyword,
    FalseKeyword,
    FinalKeyword,
    FinneyKeyword,
    FixedKeyword,
    ForKeyword,
    FromKeyword,
    FunctionKeyword,
    GlobalKeyword,
    GreaterThan,
    GreaterThanEqual,
    GreaterThanGreaterThan,
    GreaterThanGreaterThanEqual,
    GreaterThanGreaterThanGreaterThan,
    GreaterThanGreaterThanGreaterThanEqual,
    GweiKeyword,
    HexKeyword,
    HexLiteral,
    HoursKeyword,
    Identifier,
    IfKeyword,
    ImmutableKeyword,
    ImplementsKeyword,
    ImportKeyword,
    InKeyword,
    IndexedKeyword,
    InlineKeyword,
    IntKeyword,
    InterfaceKeyword,
    InternalKeyword,
    IsKeyword,
    LessThan,
    LessThanEqual,
    LessThanLessThan,
    LessThanLessThanEqual,
    LetKeyword,
    LibraryKeyword,
    MacroKeyword,
    MappingKeyword,
    MatchKeyword,
    MemoryKeyword,
    Minus,
    MinusEqual,
    MinusGreaterThan,
    MinusMinus,
    MinutesKeyword,
    ModifierKeyword,
    MultiLineComment,
    MultiLineNatSpecComment,
    MutableKeyword,
    NewKeyword,
    NullKeyword,
    OfKeyword,
    OpenBrace,
    OpenBracket,
    OpenParen,
    OverrideKeyword,
    PartialKeyword,
    PayableKeyword,
    Percent,
    PercentEqual,
    Period,
    Plus,
    PlusEqual,
    PlusPlus,
    PragmaKeyword,
    PrivateKeyword,
    PromiseKeyword,
    PublicKeyword,
    PureKeyword,
    QuestionMark,
    ReceiveKeyword,
    ReferenceKeyword,
    RelocatableKeyword,
    ReturnKeyword,
    ReturnsKeyword,
    RevertKeyword,
    SealedKeyword,
    SecondsKeyword,
    Semicolon,
    SingleLineComment,
    SingleLineNatSpecComment,
    SingleQuotedHexStringLiteral,
    SingleQuotedStringLiteral,
    SingleQuotedUnicodeStringLiteral,
    SingleQuotedVersionLiteral,
    SizeOfKeyword,
    Slash,
    SlashEqual,
    SolidityKeyword,
    StaticKeyword,
    StorageKeyword,
    StringKeyword,
    StructKeyword,
    SupportsKeyword,
    SwitchKeyword,
    SzaboKeyword,
    ThrowKeyword,
    Tilde,
    TransientKeyword,
    TrueKeyword,
    TryKeyword,
    TypeDefKeyword,
    TypeKeyword,
    TypeOfKeyword,
    UfixedKeyword,
    UintKeyword,
    UncheckedKeyword,
    UsingKeyword,
    VarKeyword,
    VersionSpecifier,
    ViewKeyword,
    VirtualKeyword,
    WeeksKeyword,
    WeiKeyword,
    WhileKeyword,
    Whitespace,
    YearsKeyword,
    YulAbstractKeyword,
    YulAddKeyword,
    YulAddModKeyword,
    YulAddressKeyword,
    YulAfterKeyword,
    YulAliasKeyword,
    YulAndKeyword,
    YulAnonymousKeyword,
    YulApplyKeyword,
    YulAsKeyword,
    YulAssemblyKeyword,
    YulAutoKeyword,
    YulBalanceKeyword,
    YulBaseFeeKeyword,
    YulBlobBaseFeeKeyword,
    YulBlobHashKeyword,
    YulBlockHashKeyword,
    YulBoolKeyword,
    YulBreakKeyword,
    YulByteKeyword,
    YulBytesKeyword,
    YulCallCodeKeyword,
    YulCallDataCopyKeyword,
    YulCallDataKeyword,
    YulCallDataLoadKeyword,
    YulCallDataSizeKeyword,
    YulCallKeyword,
    YulCallValueKeyword,
    YulCallerKeyword,
    YulCaseKeyword,
    YulCatchKeyword,
    YulChainIdKeyword,
    YulCoinBaseKeyword,
    YulConstantKeyword,
    YulConstructorKeyword,
    YulContinueKeyword,
    YulContractKeyword,
    YulCopyOfKeyword,
    YulCreate2Keyword,
    YulCreateKeyword,
    YulDaysKeyword,
    YulDecimalLiteral,
    YulDefaultKeyword,
    YulDefineKeyword,
    YulDelegateCallKeyword,
    YulDeleteKeyword,
    YulDifficultyKeyword,
    YulDivKeyword,
    YulDoKeyword,
    YulElseKeyword,
    YulEmitKeyword,
    YulEnumKeyword,
    YulEqKeyword,
    YulEtherKeyword,
    YulEventKeyword,
    YulExpKeyword,
    YulExtCodeCopyKeyword,
    YulExtCodeHashKeyword,
    YulExtCodeSizeKeyword,
    YulExternalKeyword,
    YulFallbackKeyword,
    YulFalseKeyword,
    YulFinalKeyword,
    YulFinneyKeyword,
    YulFixedKeyword,
    YulForKeyword,
    YulFunctionKeyword,
    YulGasKeyword,
    YulGasLimitKeyword,
    YulGasPriceKeyword,
    YulGtKeyword,
    YulGweiKeyword,
    YulHexKeyword,
    YulHexLiteral,
    YulHoursKeyword,
    YulIdentifier,
    YulIfKeyword,
    YulImmutableKeyword,
    YulImplementsKeyword,
    YulImportKeyword,
    YulInKeyword,
    YulIndexedKeyword,
    YulInlineKeyword,
    YulIntKeyword,
    YulInterfaceKeyword,
    YulInternalKeyword,
    YulInvalidKeyword,
    YulIsKeyword,
    YulIsZeroKeyword,
    YulKeccak256Keyword,
    YulLeaveKeyword,
    YulLetKeyword,
    YulLibraryKeyword,
    YulLog0Keyword,
    YulLog1Keyword,
    YulLog2Keyword,
    YulLog3Keyword,
    YulLog4Keyword,
    YulLtKeyword,
    YulMCopyKeyword,
    YulMLoadKeyword,
    YulMSizeKeyword,
    YulMStore8Keyword,
    YulMStoreKeyword,
    YulMacroKeyword,
    YulMappingKeyword,
    YulMatchKeyword,
    YulMemoryKeyword,
    YulMinutesKeyword,
    YulModKeyword,
    YulModifierKeyword,
    YulMulKeyword,
    YulMulModKeyword,
    YulMutableKeyword,
    YulNewKeyword,
    YulNotKeyword,
    YulNullKeyword,
    YulNumberKeyword,
    YulOfKeyword,
    YulOrKeyword,
    YulOriginKeyword,
    YulOverrideKeyword,
    YulPartialKeyword,
    YulPayableKeyword,
    YulPopKeyword,
    YulPragmaKeyword,
    YulPrevRandaoKeyword,
    YulPrivateKeyword,
    YulPromiseKeyword,
    YulPublicKeyword,
    YulPureKeyword,
    YulReceiveKeyword,
    YulReferenceKeyword,
    YulRelocatableKeyword,
    YulReturnDataCopyKeyword,
    YulReturnDataSizeKeyword,
    YulReturnKeyword,
    YulReturnsKeyword,
    YulRevertKeyword,
    YulSDivKeyword,
    YulSLoadKeyword,
    YulSModKeyword,
    YulSStoreKeyword,
    YulSarKeyword,
    YulSealedKeyword,
    YulSecondsKeyword,
    YulSelfBalanceKeyword,
    YulSelfDestructKeyword,
    YulSgtKeyword,
    YulSha3Keyword,
    YulShlKeyword,
    YulShrKeyword,
    YulSignExtendKeyword,
    YulSizeOfKeyword,
    YulSltKeyword,
    YulStaticCallKeyword,
    YulStaticKeyword,
    YulStopKeyword,
    YulStorageKeyword,
    YulStringKeyword,
    YulStructKeyword,
    YulSubKeyword,
    YulSuicideKeyword,
    YulSupportsKeyword,
    YulSwitchKeyword,
    YulSzaboKeyword,
    YulTLoadKeyword,
    YulTStoreKeyword,
    YulThrowKeyword,
    YulTimestampKeyword,
    YulTrueKeyword,
    YulTryKeyword,
    YulTypeDefKeyword,
    YulTypeKeyword,
    YulTypeOfKeyword,
    YulUfixedKeyword,
    YulUintKeyword,
    YulUncheckedKeyword,
    YulUsingKeyword,
    YulVarKeyword,
    YulViewKeyword,
    YulVirtualKeyword,
    YulWeeksKeyword,
    YulWeiKeyword,
    YulWhileKeyword,
    YulXorKeyword,
    YulYearsKeyword,
}

impl crate::cst::TerminalKindExtensions for TerminalKind {
    fn is_trivia(&self) -> bool {
        matches!(self, |Self::EndOfLine| Self::MultiLineComment
            | Self::MultiLineNatSpecComment
            | Self::SingleLineComment
            | Self::SingleLineNatSpecComment
            | Self::Whitespace)
    }

    fn is_valid(&self) -> bool {
        !matches!(self, Self::UNRECOGNIZED | Self::MISSING)
    }
}
