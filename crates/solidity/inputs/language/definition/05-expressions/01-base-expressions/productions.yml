# yaml-language-server: $schema=../../../generated/productions.schema.json

- name: "Expression"
  kind: "PrecedenceParser"
  versioned:
    0.4.11:
      operatorExpressions:
        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "AssignmentOperator"

        - name: "ConditionalExpression"
          model: "UnaryPostfix"
          operator:
            reference: "ConditionalOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "OrOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "AndOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "EqualityComparisonOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "OrderComparisonOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "BitwiseOrOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "BitwiseXOrOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "BitwiseAndOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "ShiftOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "AddSubOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "MulDivModOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "ExponentiationOperator"

        - name: "UnaryPostfixExpression"
          model: "UnaryPostfix"
          operator:
            reference: "UnaryPostfixOperator"

        - name: "UnaryPrefixExpression"
          model: "UnaryPrefix"
          operator:
            reference: "UnaryPrefixOperator"

        - name: "FunctionCallExpression"
          model: "UnaryPostfix"
          operator:
            reference: "FunctionCallOperator"

        - name: "MemberAccessExpression"
          model: "UnaryPostfix"
          operator:
            reference: "MemberAccessOperator"

        - name: "IndexAccessExpression"
          model: "UnaryPostfix"
          operator:
            reference: "IndexAccessOperator"

      primaryExpression:
        reference: "PrimaryExpression"

    0.6.0:
      # ExponentiationExpression is now BinaryRightAssociative
      operatorExpressions:
        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "AssignmentOperator"

        - name: "ConditionalExpression"
          model: "UnaryPostfix"
          operator:
            reference: "ConditionalOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "OrOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "AndOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "EqualityComparisonOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "OrderComparisonOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "BitwiseOrOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "BitwiseXOrOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "BitwiseAndOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "ShiftOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "AddSubOperator"

        - name: "BinaryExpression"
          model: "BinaryLeftAssociative"
          operator:
            reference: "MulDivModOperator"

        - name: "BinaryExpression"
          model: "BinaryRightAssociative"
          operator:
            reference: "ExponentiationOperator"

        - name: "UnaryPostfixExpression"
          model: "UnaryPostfix"
          operator:
            reference: "UnaryPostfixOperator"

        - name: "UnaryPrefixExpression"
          model: "UnaryPrefix"
          operator:
            reference: "UnaryPrefixOperator"

        - name: "FunctionCallExpression"
          model: "UnaryPostfix"
          operator:
            reference: "FunctionCallOperator"

        - name: "MemberAccessExpression"
          model: "UnaryPostfix"
          operator:
            reference: "MemberAccessOperator"

        - name: "IndexAccessExpression"
          model: "UnaryPostfix"
          operator:
            reference: "IndexAccessOperator"

      primaryExpression:
        reference: "PrimaryExpression"

- name: "AssignmentOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    choice:
      - reference: "Equal"
      - reference: "BarEqual"
      - reference: "PlusEqual"
      - reference: "MinusEqual"
      - reference: "CaretEqual"
      - reference: "SlashEqual"
      - reference: "PercentEqual"
      - reference: "AsteriskEqual"
      - reference: "AmpersandEqual"
      - reference: "LessThanLessThanEqual"
      - reference: "GreaterThanGreaterThanEqual"
      - reference: "GreaterThanGreaterThanGreaterThanEqual"

- name: "ConditionalOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    sequence:
      - reference: "QuestionMark"
      - reference: "Expression"
      - reference: "Colon"
      - reference: "Expression"

- name: "OrOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    reference: "BarBar"

- name: "AndOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    reference: "AmpersandAmpersand"

- name: "EqualityComparisonOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    choice:
      - reference: "EqualEqual"
      - reference: "BangEqual"

- name: "OrderComparisonOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    choice:
      - reference: "LessThan"
      - reference: "GreaterThan"
      - reference: "LessThanEqual"
      - reference: "GreaterThanEqual"

- name: "BitwiseOrOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    reference: "Bar"

- name: "BitwiseXOrOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    reference: "Caret"

- name: "BitwiseAndOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    reference: "Ampersand"

- name: "ShiftOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    choice:
      - reference: "LessThanLessThan"
      - reference: "GreaterThanGreaterThan"
      - reference: "GreaterThanGreaterThanGreaterThan"

- name: "AddSubOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    choice:
      - reference: "Plus"
      - reference: "Minus"

- name: "MulDivModOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    choice:
      - reference: "Asterisk"
      - reference: "Slash"
      - reference: "Percent"

- name: "ExponentiationOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    reference: "AsteriskAsterisk"

- name: "UnaryPostfixOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    choice:
      - reference: "PlusPlus"
      - reference: "MinusMinus"

- name: "UnaryPrefixOperator"
  kind: "Parser"
  inlined: true
  versioned:
    0.4.11:
      choice:
        - reference: "PlusPlus"
        - reference: "MinusMinus"
        - reference: "Tilde"
        - reference: "Bang"
        - reference: "Minus"
        - reference: "Plus"
    0.5.0:
      # removed "Plus"
      choice:
        - reference: "PlusPlus"
        - reference: "MinusMinus"
        - reference: "Tilde"
        - reference: "Bang"
        - reference: "Minus"

- name: "FunctionCallOperator"
  kind: "Parser"
  inlined: true
  versioned:
    0.4.11:
      reference: "ArgumentsDeclaration"
    0.6.2:
      sequence:
        - optional:
            reference: "FunctionCallOptions"
        - reference: "ArgumentsDeclaration"

- name: "MemberAccessOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    sequence:
      - reference: "Period"
      - choice:
          - reference: "Identifier"
          - reference: "AddressKeyword"

- name: "IndexAccessOperator"
  kind: "Parser"
  inlined: true
  unversioned:
    delimitedBy:
      open:
        reference: "OpenBracket"
      parser:
        sequence:
          - optional:
              reference: "Expression"
          - optional:
              sequence:
                - reference: "Colon"
                - optional:
                    reference: "Expression"
      close:
        reference: "CloseBracket"
