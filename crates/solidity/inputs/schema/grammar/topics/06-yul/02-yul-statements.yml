# yaml-language-server: $schema=../../../../../../codegen/schema/generated/topic.schema.json

- name: "YulBlock"
  kind: "Parser"
  unversioned:
    delimitedBy:
      open: "{"
      expression:
        zeroOrMore:
          reference: "YulStatement"
      close: "}"

- name: "YulStatement"
  kind: "Parser"
  unversioned:
    choice:
      - reference: "YulBlock"
      - reference: "YulVariableDeclaration"
      - reference: "YulFunctionDefinition"
      - reference: "YulAssignmentStatement"
      - reference: "YulFunctionCall"
      - reference: "YulIfStatement"
      - reference: "YulForStatement"
      - reference: "YulSwitchStatement"
      - reference: "YulLeaveStatement"
      - reference: "YulBreakStatement"
      - reference: "YulContinueStatement"

- name: "YulVariableDeclaration"
  kind: "Parser"
  unversioned:
    sequence:
      - terminal: "let"
      - separatedBy:
          separator: ","
          expression:
            reference: "YulIdentifierPath"
      - optional:
          sequence:
            - terminal: ":="
            - reference: "YulExpression"

- name: "YulFunctionDefinition"
  kind: "Parser"
  unversioned:
    sequence:
      - terminal: "function"
      - reference: "YulIdentifier"
      - delimitedBy:
          open: "("
          expression:
            optional:
              name: "Arguments"
              separatedBy:
                separator: ","
                expression:
                  reference: "YulIdentifier"
          close: ")"
      - optional:
          sequence:
            - terminal: "->"
            - name: "Results"
              separatedBy:
                separator: ","
                expression:
                  reference: "YulIdentifier"
      - reference: "YulBlock"

- name: "YulAssignmentStatement"
  kind: "Parser"
  unversioned:
    sequence:
      - separatedBy:
          separator: ","
          expression:
            reference: "YulIdentifierPath"
      - terminal: ":="
      - reference: "YulExpression"

- name: "YulIfStatement"
  kind: "Parser"
  unversioned:
    sequence:
      - terminal: "if"
      - reference: "YulExpression"
      - reference: "YulBlock"

- name: "YulLeaveStatement"
  kind: "Parser"
  unversioned:
    terminal: "leave"

- name: "YulBreakStatement"
  kind: "Parser"
  unversioned:
    terminal: "break"

- name: "YulContinueStatement"
  kind: "Parser"
  unversioned:
    terminal: "continue"

- name: "YulForStatement"
  kind: "Parser"
  unversioned:
    sequence:
      - terminal: "for"
      - reference: "YulBlock"
      - reference: "YulExpression"
      - reference: "YulBlock"
      - reference: "YulBlock"

- name: "YulSwitchStatement"
  kind: "Parser"
  unversioned:
    sequence:
      - terminal: "switch"
      - reference: "YulExpression"
      - oneOrMore:
          sequence:
            - choice:
                - sequence:
                    - terminal: "case"
                    - reference: "YulLiteral"
                - terminal: "default"
            - reference: "YulBlock"
