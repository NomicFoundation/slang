# yaml-language-server: $schema=../../../../../../codegen/schema/generated/topic.schema.json

- name: "Expression"
  kind: "PrecedenceParser"
  versioned:
    0.4.11:
      operators:
        - name: "AssignmentExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "="
            - terminal: "|="
            - terminal: "^="
            - terminal: "&="
            - terminal: "<<="
            - terminal: ">>="
            - terminal: ">>>="
            - terminal: "+="
            - terminal: "-="
            - terminal: "*="
            - terminal: "/="
            - terminal: "%="

        - name: "ConditionalExpression"
          model: "UnarySuffix"
          sequence: # This subsequence forms the correct CST for the suffix expression parser
            - terminal: "?"
            - reference: "Expression"
            - terminal: ":"
            - reference: "Expression"

        - name: "OrExpression"
          model: "BinaryLeftAssociative"
          terminal: "||"

        - name: "AndExpression"
          model: "BinaryLeftAssociative"
          terminal: "&&"

        - name: "EqualityComparisonExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "=="
            - terminal: "!="

        - name: "OrderComparisonExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "<"
            - terminal: ">"
            - terminal: "<="
            - terminal: ">="

        - name: "BitOrExpression"
          model: "BinaryLeftAssociative"
          terminal: "|"

        - name: "BitXOrExpression"
          model: "BinaryLeftAssociative"
          terminal: "^"

        - name: "BitAndExpression"
          model: "BinaryLeftAssociative"
          terminal: "&"

        - name: "ShiftExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "<<"
            - terminal: ">>"
            - terminal: ">>>"

        - name: "AddSubExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "+"
            - terminal: "-"

        - name: "MulDivModExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "*"
            - terminal: "/"
            - terminal: "%"

        - name: "ExponentiationExpression"
          model: "BinaryLeftAssociative"
          terminal: "**"

        - name: "UnarySuffixExpression"
          model: "UnarySuffix"
          choice:
            - terminal: "++"
            - terminal: "--"

        - name: "UnaryPrefixExpression"
          model: "UnaryPrefix"
          choice:
            - terminal: "++"
            - terminal: "--"
            - terminal: "!"
            - terminal: "~"
            - terminal: "-"

        - name: "FunctionCallExpression"
          model: "UnarySuffix"
          sequence:
            - optional:
                reference: "NamedArgumentList"
            - reference: "ArgumentList"

        - name: "MemberAccessExpression"
          model: "UnarySuffix"
          sequence:
            - terminal: "."
            - choice:
                - reference: "Identifier"
                - reference: "AddressKeyword"

        - name: "IndexAccessExpression"
          model: "UnarySuffix"
          delimitedBy:
            open: "["
            expression:
              choice:
                - sequence:
                    - reference: "Expression"
                    - optional:
                        sequence:
                          - terminal: ":"
                          - optional:
                              reference: "Expression"
                - sequence:
                    - terminal: ":"
                    - optional:
                        reference: "Expression"
            close: "]"

      primaryExpressions:
        - reference: "PrimaryExpression"

    0.6.0:
      operators:
        - name: "AssignmentExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "="
            - terminal: "|="
            - terminal: "^="
            - terminal: "&="
            - terminal: "<<="
            - terminal: ">>="
            - terminal: ">>>="
            - terminal: "+="
            - terminal: "-="
            - terminal: "*="
            - terminal: "/="
            - terminal: "%="

        - name: "ConditionalExpression"
          model: "UnarySuffix"
          sequence: # This subsequence forms the correct CST for the suffix expression parser
            - terminal: "?"
            - reference: "Expression"
            - terminal: ":"
            - reference: "Expression"

        - name: "OrExpression"
          model: "BinaryLeftAssociative"
          terminal: "||"

        - name: "AndExpression"
          model: "BinaryLeftAssociative"
          terminal: "&&"

        - name: "EqualityComparisonExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "=="
            - terminal: "!="

        - name: "OrderComparisonExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "<"
            - terminal: ">"
            - terminal: "<="
            - terminal: ">="

        - name: "BitOrExpression"
          model: "BinaryLeftAssociative"
          terminal: "|"

        - name: "BitXOrExpression"
          model: "BinaryLeftAssociative"
          terminal: "^"

        - name: "BitAndExpression"
          model: "BinaryLeftAssociative"
          terminal: "&"

        - name: "ShiftExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "<<"
            - terminal: ">>"
            - terminal: ">>>"

        - name: "AddSubExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "+"
            - terminal: "-"

        - name: "MulDivModExpression"
          model: "BinaryLeftAssociative"
          choice:
            - terminal: "*"
            - terminal: "/"
            - terminal: "%"

        - name: "ExponentiationExpression"
          model: "BinaryRightAssociative"
          terminal: "**"

        - name: "UnarySuffixExpression"
          model: "UnarySuffix"
          choice:
            - terminal: "++"
            - terminal: "--"

        - name: "UnaryPrefixExpression"
          model: "UnaryPrefix"
          choice:
            - terminal: "++"
            - terminal: "--"
            - terminal: "!"
            - terminal: "~"
            - terminal: "-"

        - name: "FunctionCallExpression"
          model: "UnarySuffix"
          sequence:
            - optional:
                reference: "NamedArgumentList"
            - reference: "ArgumentList"

        - name: "MemberAccessExpression"
          model: "UnarySuffix"
          sequence:
            - terminal: "."
            - choice:
                - reference: "Identifier"
                - reference: "AddressKeyword"

        - name: "IndexAccessExpression"
          model: "UnarySuffix"
          delimitedBy:
            open: "["
            expression:
              choice:
                - sequence:
                    - reference: "Expression"
                    - optional:
                        sequence:
                          - terminal: ":"
                          - optional:
                              reference: "Expression"
                - sequence:
                    - terminal: ":"
                    - optional:
                        reference: "Expression"
            close: "]"

      primaryExpressions:
        - reference: "PrimaryExpression"
