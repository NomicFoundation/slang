interface parser {
    use cst.{cursor, node, nonterminal-kind, text-range};
    use diagnostic.{severity};

    resource language {
        supported-versions: static func() -> list<string>;
        new: static func(version: string) -> result<language, string>;
        version: func() -> string;
        parse: func(kind: nonterminal-kind, input: string) -> parse-output;
    }

    resource parse-error {
        severity: func() -> severity;
        text-range: func() -> text-range;
        message: func() -> string;
    }

    resource parse-output {
        tree: func() -> node;
        errors: func() -> list<parse-error>;
        is-valid: func() -> bool;
        create-tree-cursor: func() -> cursor;
    }
}
