{# This needs to stay in sync with the wit-bindgen output #}
#[allow(clippy::doc_markdown)]
#[allow(clippy::doc_link_with_quotes)]

{% if model.kinds.nonterminal_kinds|length <= 256 %} #[repr(u8)] {% else %} #[repr(u16)] {% endif %}
#[derive(
    Debug,
    Eq,
    Hash,
    Ord,
    PartialEq,
    PartialOrd,
    serde::Serialize,
    strum_macros::AsRefStr,
    strum_macros::Display,
    strum_macros::EnumString,
    strum_macros::IntoStaticStr,
)]
#[derive(Clone, Copy)] 
pub enum NonterminalKind {
    {%- if rendering_in_stubs -%}
        Stub1,
        Stub2,
        Stub3,
    {%- else -%}
        {%- for variant in model.kinds.nonterminal_kinds -%}
            /// Represents a node with kind `{{ variant.id | pascal_case }}`, having the following structure:
            ///
            /// ```ebnf
            {%- for line in variant.documentation | split(pat="\n") %}
            /// {{ line }}
            {%- endfor %}
            /// ```
            {{ variant.id | pascal_case }},
        {%- endfor -%}
    {%- endif -%}
}

impl crate::cst::NonterminalKindExtensions for NonterminalKind {}
