/// The lexical context of the scanner.
{# This needs to stay in sync with the wit-bindgen output #}
{% if model.kinds.lexical_contexts|length <= 256 %} #[repr(u8)] {% else %} #[repr(u16)] {% endif %}
#[derive(strum_macros::FromRepr, Clone, Copy)]
pub(crate) enum LexicalContext {
    {%- if rendering_in_stubs -%}
        Stub1,
        Stub2,
        Stub3,
    {%- else -%}
        {%- for context_name in model.kinds.lexical_contexts %}
            {{ context_name }},
        {%- endfor %}
    {%- endif -%}
}

/// Marker trait for type-level [`LexicalContext`] variants.
pub(crate) trait IsLexicalContext {
    /// Returns a run-time [`LexicalContext`] value.
    fn value() -> LexicalContext;
}

#[allow(non_snake_case)]
pub(crate) mod LexicalContextType {
    {%- if not rendering_in_stubs -%}
        {%- for context_name in model.kinds.lexical_contexts %}
            pub struct {{ context_name }};

            impl super::IsLexicalContext for {{ context_name }} {
                fn value() -> super::LexicalContext {
                    super::LexicalContext::{{ context_name }}
                }
            }
        {%- endfor %}
    {%- endif -%}
}
