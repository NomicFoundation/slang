// This file is generated automatically by infrastructure scripts. Please don't edit by hand.

interface cursor {
    use cst.{node, nonterminal-node};
    use kinds.{edge-label, nonterminal-kind, terminal-kind};
    use text-index.{text-index, text-range};

    resource cursor {
        reset: func();
        complete: func();
        is-completed: func() -> bool;

        clone: func() -> cursor;
        spawn: func() -> cursor;

        node: func() -> node;
        label: func() -> option<edge-label>;

        text-offset: func() -> text-index;
        text-range: func() -> text-range;

        depth: func() -> u32;

        ancestors: func() -> list<nonterminal-node>;

        go-to-next: func() -> bool;
        go-to-next-non-descendent: func() -> bool;
        go-to-previous: func() -> bool;

        go-to-parent: func() -> bool;

        go-to-first-child: func() -> bool;
        go-to-last-child: func() -> bool;
        go-to-nth-child: func(child-number: u32) -> bool;

        go-to-next-sibling: func() -> bool;
        go-to-previous-sibling: func() -> bool;

        go-to-next-terminal: func() -> bool;
        go-to-next-terminal-with-kind: func(kind: terminal-kind) -> bool;
        go-to-next-terminal-with-kinds: func(kinds: list<terminal-kind>) -> bool;

        go-to-next-nonterminal: func() -> bool;
        go-to-next-nonterminal-with-kind: func(kind: nonterminal-kind) -> bool;
        go-to-next-nonterminal-with-kinds: func(kinds: list<nonterminal-kind>) -> bool;

        // TODO: re-enable once we solve circular references:
        // query: func(queries: list<borrow<query>>) -> query-match-iterator;
    }
}
