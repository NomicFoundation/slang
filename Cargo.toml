[workspace.package]
version = "0.11.0"
rust-version = "1.72.0" # Keep this version in sync with "$RUST_VERSION" in "$REPO_ROOT/bin/hermit.hcl" and "rust-src" in "$REPO_ROOT/bin"
edition = "2021"
publish = false

[workspace]
resolver = "2"
members = [
    "crates/codegen/ebnf",
    "crates/codegen/grammar",
    "crates/codegen/language/definition",
    "crates/codegen/language/internal_macros",
    "crates/codegen/language/macros",
    "crates/codegen/language/tests",
    "crates/codegen/parser/generator",
    "crates/codegen/parser/runtime",
    "crates/codegen/schema",
    "crates/codegen/spec",
    "crates/codegen/testing",
    "crates/infra/cli",
    "crates/infra/utils",
    "crates/solidity/inputs/language",
    "crates/solidity/outputs/cargo/build",
    "crates/solidity/outputs/cargo/crate",
    "crates/solidity/outputs/cargo/tests",
    "crates/solidity/outputs/npm/build",
    "crates/solidity/outputs/npm/crate",
    "crates/solidity/outputs/npm/package",
    "crates/solidity/outputs/spec",
    "crates/solidity/testing/sanctuary",
    "crates/solidity/testing/snapshots",
    "crates/solidity/testing/solc",
    "crates/solidity/testing/utils",
]

[workspace.dependencies]
#
# Internal
#
codegen_ebnf = { path = "crates/codegen/ebnf" }
codegen_grammar = { path = "crates/codegen/grammar" }
codegen_language_definition = { path = "crates/codegen/language/definition" }
codegen_language_internal_macros = { path = "crates/codegen/language/internal_macros" }
codegen_language_macros = { path = "crates/codegen/language/macros" }
codegen_language_tests = { path = "crates/codegen/language/tests" }
codegen_parser_generator = { path = "crates/codegen/parser/generator" }
codegen_parser_runtime = { path = "crates/codegen/parser/runtime" }
codegen_schema = { path = "crates/codegen/schema" }
codegen_spec = { path = "crates/codegen/spec" }
codegen_testing = { path = "crates/codegen/testing" }
infra_cli = { path = "crates/infra/cli" }
infra_utils = { path = "crates/infra/utils" }
slang_solidity = { path = "crates/solidity/outputs/cargo/crate" }
solidity_cargo_build = { path = "crates/solidity/outputs/cargo/build" }
solidity_cargo_tests = { path = "crates/solidity/outputs/cargo/tests" }
solidity_language = { path = "crates/solidity/inputs/language" }
solidity_npm_build = { path = "crates/solidity/outputs/npm/build" }
solidity_npm_crate = { path = "crates/solidity/outputs/npm/crate" }
solidity_npm_package = { path = "crates/solidity/outputs/npm/package" }
solidity_spec = { path = "crates/solidity/outputs/spec" }
solidity_testing_sanctuary = { path = "crates/solidity/testing/sanctuary" }
solidity_testing_snapshots = { path = "crates/solidity/testing/snapshots" }
solidity_testing_solc = { path = "crates/solidity/testing/solc" }
solidity_testing_utils = { path = "crates/solidity/testing/utils" }
#
# External
#
anyhow = { version = "1.0.75", features = ["backtrace", "std"] }
ariadne = { version = "0.2.0" }
bson = { version = "2.6.1" }
cargo-emit = { version = "0.2.1" }
cargo-xwin = { version = "0.14.2" }
clap = { version = "4.1.13", features = ["derive", "wrap_help"] }
clap_complete = { version = "4.3.2" }
ignore = { version = "0.4.20" }
indexmap = { version = "1.9.2", features = ["serde"] }
indicatif = { version = "0.17.3" }
Inflector = { version = "0.11.4" }
itertools = { version = "0.10.5" }
markdown = { version = "0.3.0" }
napi = { version = "2.13.1", features = ["compat-mode", "napi8", "serde-json"] }
napi-build = { version = "2.0.1" }
napi-derive = { version = "2.13.0" }
owo-colors = { version = "3.5.0", features = ["supports-colors"] }
proc-macro2 = { version = "1.0.53" }
quote = { version = "1.0.26" }
rayon = { version = "1.7.0" }
regex = { version = "1.9.1" }
reqwest = { version = "0.11.22", features = ["blocking"] }
schemars = { version = "0.8.12", features = ["derive", "preserve_order"] }
semver = { version = "1.0.17", features = ["serde"] }
serde = { version = "1.0.158", features = ["derive", "rc"] }
serde_json = { version = "1.0.94", features = ["preserve_order"] }
serde_yaml = { version = "0.9.19" }
similar-asserts = { version = "1.4.2" }
strum = { version = "0.24.0" }
strum_macros = { version = "0.24.0" }
syn = { version = "2.0.29", features = [
    "fold",
    "full",
    "extra-traits",
    "parsing",
    "printing",
] }
tera = { version = "1.19.0" }
terminal_size = { version = "0.2.6" }
thiserror = { version = "1.0.40" }
trybuild = { version = "1.0.85" }
toml = { version = "0.7.6" }
typed-arena = { version = "2.0.2" }
url = { version = "2.3.1" }
yaml-rust = { version = "0.4.5" }
