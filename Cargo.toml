[workspace.package]
version = "0.13.1"
rust-version = "1.76.0" # __RUST_STABLE_VERSION_MARKER__ (keep in sync)
edition = "2021"
publish = false

[workspace]
resolver = "2"
members = [
    "crates/codegen/ebnf",
    "crates/codegen/grammar",
    "crates/codegen/language/definition",
    "crates/codegen/language/internal_macros",
    "crates/codegen/language/macros",
    "crates/codegen/language/tests",
    "crates/codegen/parser/generator",
    "crates/codegen/parser/runtime",
    "crates/codegen/spec",
    "crates/codegen/testing",
    "crates/infra/cli",
    "crates/infra/utils",

    "crates/solidity/inputs/language",
    "crates/solidity/outputs/cargo/slang_solidity_node_addon",
    "crates/solidity/outputs/cargo/slang_solidity",
    "crates/solidity/outputs/cargo/tests",
    "crates/solidity/outputs/npm/package",
    "crates/solidity/outputs/spec",
    "crates/solidity/testing/sanctuary",
    "crates/solidity/testing/snapshots",
    "crates/solidity/testing/solc",
    "crates/solidity/testing/utils",

    "crates/testlang/inputs/language",
    "crates/testlang/outputs/cargo/slang_testlang_node_addon",
    "crates/testlang/outputs/cargo/slang_testlang",
    "crates/testlang/outputs/cargo/tests",
    "crates/testlang/outputs/npm/package",
]

[workspace.dependencies]
#
# Internal
#
codegen_ebnf = { path = "crates/codegen/ebnf" }
codegen_grammar = { path = "crates/codegen/grammar" }
codegen_language_definition = { path = "crates/codegen/language/definition" }
codegen_language_internal_macros = { path = "crates/codegen/language/internal_macros" }
codegen_language_macros = { path = "crates/codegen/language/macros" }
codegen_language_tests = { path = "crates/codegen/language/tests" }
codegen_parser_generator = { path = "crates/codegen/parser/generator" }
codegen_parser_runtime = { path = "crates/codegen/parser/runtime" }
codegen_spec = { path = "crates/codegen/spec" }
codegen_testing = { path = "crates/codegen/testing" }
infra_cli = { path = "crates/infra/cli" }
infra_utils = { path = "crates/infra/utils" }

slang_solidity = { path = "crates/solidity/outputs/cargo/slang_solidity" }
slang_solidity_node_addon = { path = "crates/solidity/outputs/cargo/slang_solidity_node_addon" }
solidity_cargo_tests = { path = "crates/solidity/outputs/cargo/tests" }
solidity_language = { path = "crates/solidity/inputs/language" }
solidity_npm_package = { path = "crates/solidity/outputs/npm/package" }
solidity_spec = { path = "crates/solidity/outputs/spec" }
solidity_testing_sanctuary = { path = "crates/solidity/testing/sanctuary" }
solidity_testing_snapshots = { path = "crates/solidity/testing/snapshots" }
solidity_testing_solc = { path = "crates/solidity/testing/solc" }
solidity_testing_utils = { path = "crates/solidity/testing/utils" }

slang_testlang = { path = "crates/testlang/outputs/cargo/slang_testlang" }
slang_testlang_node_addon = { path = "crates/testlang/outputs/cargo/slang_testlang_node_addon" }
testlang_cargo_tests = { path = "crates/testlang/outputs/cargo/tests" }
testlang_language = { path = "crates/testlang/inputs/language" }
testlang_npm_package = { path = "crates/testlang/outputs/npm/package" }

#
# External
#
anyhow = { version = "1.0.79", features = ["backtrace", "std"] }
ariadne = { version = "0.2.0" }
cargo-emit = { version = "0.2.1" }
cargo-xwin = { version = "0.14.2" }
clap = { version = "4.4.18", features = ["derive", "wrap_help"] }
clap_complete = { version = "4.4.10" }
console = { version = "0.15.8" }
derive-new = { version = "0.6.0" }
ignore = { version = "0.4.22" }
indexmap = { version = "2.2.2", features = ["serde"] }
indicatif = { version = "0.17.8", features = ["in_memory"] }
Inflector = { version = "0.11.4" }
itertools = { version = "0.10.5" }
markdown = { version = "0.3.0" }
napi = { version = "2.15.1", features = ["compat-mode", "napi8", "serde-json"] }
napi-build = { version = "2.1.0" }
napi-derive = { version = "2.15.0" }
nom = { version = "7.1.3" }
num-format = { version = "0.4.4" }
once_cell = { version = "1.19.0" }
proc-macro2 = { version = "1.0.78" }
quote = { version = "1.0.35" }
rayon = { version = "1.8.1" }
regex = { version = "1.10.3" }
reqwest = { version = "0.11.24", features = ["blocking"] }
semver = { version = "1.0.21", features = ["serde"] }
serde = { version = "1.0.158", features = ["derive", "rc"] }
serde_json = { version = "1.0.113", features = ["preserve_order"] }
similar-asserts = { version = "1.5.0" }
stack-graphs = { version = "0.12.0" }
strum = { version = "0.25.0" }
strum_macros = { version = "0.25.3" }
syn = { version = "2.0.32", features = [
    "fold",
    "full",
    "extra-traits",
    "parsing",
    "printing",
] }
tera = { version = "1.19.1" }
thiserror = { version = "1.0.56" }
trybuild = { version = "1.0.89" }
toml = { version = "0.7.8" }
url = { version = "2.3.1" }
