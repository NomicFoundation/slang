#!/bin/bash

# bencher-plot-npm: creates a plot in the given bencher project for comparing with npm libraries.
#
# In essence, it helps to pick the right benchmarks, and solves the internal uuids use by bencher from the slug name
# of every part of it.
#
# usage: bencher-plot-npm project branches testbeds benchmarks title
#
# Example of usage to build plots in batch using the projects.json file:
# $  jq "[.projects,.files] | add | map(.name) | .[]" crates/solidity/testing/perf/projects.json | xargs -L1 -I{} bash ./scripts/bin/bencher-plot-npm slang-dashboard-npm main ci {} "{}"

set -e
shopt -s inherit_errexit

project=$1
branches=$2
testbeds=$3
benchmarks=$4
title=$5
measure="Duration"

if [[ $# -ne 5 ]]
then
  echo "Usage: bencher-plot-npm project branches testbed benchmarks title";
  exit 1;
fi

source "$(dirname "$0")/bencher-common"

function get_benchmarks() {
  details=$(bencher benchmark list --search "${benchmarks}" --per-page 255 "${project}")
  # filter to let only the relevant benchmarks, leaving slang's parse_all_files and total
  echo "${details}" | jq -r '. - map(select(.name | contains("resolve_all_bindings"))) - map(select(.name | contains("init_bindings"))) | map("--benchmarks " + .uuid) | join(" ")'
}

branches_uuid=$(get_branches)
testbeds_uuid=$(get_testbeds)
benchmarks_uuid=$(get_benchmarks)
measure_uuid=$(get_measure)

set -xe

# benchmarks_uuid is a list of options, so it shouldn't be quoted.
# shellcheck disable=SC2086,SC2250
bencher plot create ${branches_uuid} --measures "${measure_uuid}" ${testbeds_uuid} --x-axis date_time --window 2419200 $benchmarks_uuid --title "${title}" "${project}"
