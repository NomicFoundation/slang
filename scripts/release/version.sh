#!/bin/bash
set -euo pipefail

source "$(dirname "${BASH_SOURCE[0]}")/../_common.sh"

RUST_DIR="$REPO_ROOT/crates/solidity/outputs/rust/slang_solidity"
TYPESCRIPT_DIR="$REPO_ROOT/crates/solidity/outputs/typescript/lib"

(
  printf "\n\nðŸ“œ Running changeset for TypeScript ðŸ“œ\n\n\n"

  # Changeset will:
  # 1) Consume/delete the changeset files currently in "$REPO_ROOT/.changeset"
  # 2) Populate the CHANGELOG.md for the typescript package.
  # 3) Bump the version in its package.json accourdingly.
  changeset version
  npm install --package-lock-only

  printf "\n\nâœ… TypeScript Success âœ…\n\n\n"
)

(
  printf "\n\nðŸ“œ Porting changes to Rust ðŸ“œ\n\n\n"

  # Since changeset doesn't handle Cargo packages, we need to copy the changes over manually.
  newVersion=$(jq --raw-output ".version" "$TYPESCRIPT_DIR/package.json")
  cargo set-version --workspace "$newVersion"

  printf "\n\nâœ… Rust Success âœ…\n\n\n"
)

(
  printf "\n\nðŸ“œ Copying Common Files ðŸ“œ\n\n\n"

  # Copy the new changelog generated by changeset to both repository root and the rust package.
  cp "$TYPESCRIPT_DIR/CHANGELOG.md" "$REPO_ROOT/CHANGELOG.md"
  cp "$TYPESCRIPT_DIR/CHANGELOG.md" "$RUST_DIR/CHANGELOG.md"

  # Update common files in both packages with repository root README and LICENSE files, in case they changed.
  for file in "README.md" "LICENSE"; do
    cp "$REPO_ROOT/$file" "$RUST_DIR/$file"
    cp "$REPO_ROOT/$file" "$TYPESCRIPT_DIR/$file"
  done

  printf "\n\nâœ… Copy Success âœ…\n\n\n"
)
